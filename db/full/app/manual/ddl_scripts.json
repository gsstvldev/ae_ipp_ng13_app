[{"query" : "CREATE TABLE NPSS_TRANSACTIONS ( NPSST_ID INTEGER NOT NULL , VALUE_DATE TIMESTAMP WITHOUT TIME ZONE NULL, PROCESS_TYPE CHARACTER VARYING(2) NULL, UETR CHARACTER VARYING(64) NULL, CHANNEL_ID CHARACTER VARYING(128) NULL, DBTR_PHONE_NO CHARACTER VARYING(64) NULL, DBTR_EMAIL_ID CHARACTER VARYING(64) NULL, DBTR_DOCUMENT_ID CHARACTER VARYING(64) NULL, CDTR_PHONE_NO CHARACTER VARYING(64) NULL, CDTR_EMAIL_ID CHARACTER VARYING(64) NULL, CDTR_DOCUMENT_ID CHARACTER VARYING(64) NULL, CDTR_IBAN CHARACTER VARYING(64) NULL, INTRBK_STTLM_AMNT NUMERIC(19,2) NULL, HDR_MSG_ID CHARACTER VARYING(64) NULL, DR_SORT_CODE CHARACTER VARYING(11) NULL, TRAN_REF_ID CHARACTER VARYING(35) NULL, DBTR_ACCT_NO CHARACTER VARYING(512) NULL, CDTR_ACCT_NO CHARACTER VARYING(20) NULL, DBTR_ACCT_NAME CHARACTER VARYING(256) NULL, CDTR_ACCT_NAME CHARACTER VARYING(256) NULL, BASE_AMOUNT NUMERIC(19,2) NULL, PAYMENT_ENDTOEND_ID CHARACTER VARYING(64) NULL, CLRSYSREF CHARACTER VARYING(35) NULL, PROCESSING_SYSTEM CHARACTER VARYING(64) NULL, REVERSAL_AMOUNT NUMERIC(19,2) NULL, DBTR_IBAN CHARACTER VARYING(64) NULL, CR_ACCT_IDENTIFICATION CHARACTER VARYING(512) NULL, PROCESS_GROUP CHARACTER VARYING(32) NULL, DEPARTMENT_CODE CHARACTER VARYING(32) NULL, CR_SORT_CODE CHARACTER VARYING(11) NULL, ACCOUNT_CURRENCY CHARACTER VARYING(3) NULL, PRODUCT_CODE CHARACTER VARYING(16) NULL, BASE_CURRENCY CHARACTER VARYING(3) NULL, INTRBK_STTLM_CUR CHARACTER VARYING(3) NULL, RATE_CODE CHARACTER VARYING(4) NULL, EXCHANGE_RATE NUMERIC(9,2) NULL, CATEGORY_PURPOSE CHARACTER VARYING(64) NULL, HDR_CREATED_DATE CHARACTER VARYING(64) NULL, HDR_TOTAL_RECORDS INTEGER NULL, HDR_TOTAL_AMOUNT NUMERIC(9,2) NULL, HDR_SETTLEMENT_DATE CHARACTER VARYING(64) NULL, HDR_SETTLEMENT_METHOD CHARACTER VARYING(64) NULL, HDR_CLEARING_SYSTEM CHARACTER VARYING(64) NULL, INSTRUMENT_TYPE CHARACTER VARYING(35) NULL, CHARGE_BEARER CHARACTER VARYING(16) NULL, MESSAGE_DATA CHARACTER VARYING(80000) NULL, EXHF_ID INTEGER NULL, DBTR_CUST_TYPE CHARACTER VARYING(4) NULL, CHANNEL_REFNO CHARACTER VARYING(128) NULL, CHANNEL_USERID CHARACTER VARYING(128) NULL, CHANNEL_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_SUB_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_TRAN_CODE CHARACTER VARYING(3) NULL, TRAN_INFO CHARACTER VARYING(43) NULL, INSTRUCTION_ID CHARACTER VARYING(35) NULL, CATEGORY_PURPOSE_PRTY CHARACTER VARYING(35) NULL, EXT_ORG_ID_CODE CHARACTER VARYING(4) NULL, ISSUER_TYPE_CODE CHARACTER VARYING(35) NULL, DBTR_BIRTH_DATE TIMESTAMP WITHOUT TIME ZONE NULL, DBTR_CITY_BIRTH CHARACTER VARYING(35) NULL, DBTR_COUNTRY CHARACTER VARYING(2) NULL, EXT_PERSON_ID_CODE CHARACTER VARYING(4) NULL, EXT_ACCT_ID_CODE CHARACTER VARYING(4) NULL, CR_ACCT_ID_CODE CHARACTER VARYING(4) NULL, EXT_PURPOSE_CODE CHARACTER VARYING(4) NULL, EXT_PURPOSE_PRTY CHARACTER VARYING(35) NULL, REMITTANCE_INFO CHARACTER VARYING(140) NULL, INWARD_FILE_NAME CHARACTER VARYING(256) NULL, ACCP_DATE_TIME CHARACTER VARYING(64) NULL, CBS_REF_NO CHARACTER VARYING(40) NULL, DBTR_PRVT_ID CHARACTER VARYING(35) NULL, DBTR_OTHER_ISSUER CHARACTER VARYING(35) NULL, MIDDLEWARE_REF_NO CHARACTER VARYING(40) NULL, CBS_POSTING_FLAG CHARACTER VARYING(10) NULL, CPR_STATUS CHARACTER VARYING(16) NULL, CPR_CR_FLAG CHARACTER VARYING(3) NULL, CPR_DW_FLAG CHARACTER VARYING(3) NULL, CPR_CR_FILE_NAME CHARACTER VARYING(128) NULL, CPR_DW_FILE_NAME CHARACTER VARYING(128) NULL, CPR_REJECT_REASON CHARACTER VARYING(256) NULL, REMARKS CHARACTER VARYING(256) NULL, DISPUTE_REF_NO CHARACTER VARYING(256) NULL, CHARGE_AMOUNT NUMERIC(9,2) NULL, TRAN_CHARGE NUMERIC(19,6) NULL, BUY_MARGIN NUMERIC(19,6) NULL, TRAN_AMOUNT NUMERIC(19,6) NULL, AMOUNT_CREDITED_LOC_CUR NUMERIC(19,6) NULL, BUY_RATE NUMERIC(19,6) NULL, FORCE_POST_FLAG CHARACTER VARYING(1) NULL, ORG_PAY_ENDTOEND_ID CHARACTER VARYING(35) NULL, SELL_MARGIN NUMERIC(19,6) NULL, SELL_RATE NUMERIC(19,6) NULL, MAKER CHARACTER VARYING(64) NULL, CHECKER CHARACTER VARYING(64) NULL, CUST_SPLRATE_FLAG CHARACTER VARYING(1) NULL, REQUEST_DATETIME CHARACTER VARYING(64) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_TRANSACTIONS INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_TRANSACTIONS ALTER COLUMN NPSST_ID SET DEFAULT nextval(''SEQ_NPSS_TRANSACTIONS'');  ALTER TABLE NPSS_TRANSACTIONS ADD CONSTRAINT NPSS_TRANSACTIONS_pkey primary key(NPSST_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_TRANSACTIONS() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSST_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSST_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_TRANSACTIONS BEFORE INSERT OR UPDATE  ON NPSS_TRANSACTIONS FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_TRANSACTIONS();  ALTER TABLE NPSS_TRANSACTIONS ENABLE TRIGGER HTG_NPSS_TRANSACTIONS ; ","params" : [] },{"query" : "CREATE TABLE NPSS_TRN_REQ_RESP_DTLS ( NPSSTRRD_ID INTEGER NOT NULL , MSG_ID CHARACTER VARYING(64) NOT NULL , UETR CHARACTER VARYING(64) NOT NULL , PARENT_NPSSTRRD_REFNO CHARACTER VARYING(64) NULL, NPSSTRRD_REFNO CHARACTER VARYING(64) NOT NULL , MESSAGE_DATA CHARACTER VARYING(80000) NULL, PROCESS_CODE CHARACTER VARYING(64) NOT NULL , PROCESS_DETAIL CHARACTER VARYING(128) NULL, EXHF_ID INTEGER NULL, PROCESS_NAME CHARACTER VARYING(64) NULL, MESSAGE_DESC CHARACTER VARYING(128) NULL, CHANNEL_ID CHARACTER VARYING(128) NULL, CHANNEL_REFNO CHARACTER VARYING(128) NULL, CHANNEL_USERID CHARACTER VARYING(128) NULL, CHANNEL_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_SUB_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_TRAN_CODE CHARACTER VARYING(3) NULL, FIRCO_REPUSH_FLAG CHARACTER VARYING(32) NULL, FIRCO_REPUSH_STATUS CHARACTER VARYING(64) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_TRN_REQ_RESP_DTLS INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_TRN_REQ_RESP_DTLS ALTER COLUMN NPSSTRRD_ID SET DEFAULT nextval(''SEQ_NPSS_TRN_REQ_RESP_DTLS'');  ALTER TABLE NPSS_TRN_REQ_RESP_DTLS ADD CONSTRAINT NPSS_TRN_REQ_RESP_DTLS_pkey primary key(NPSSTRRD_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_TRN_REQ_RESP_DTLS() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSTRRD_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSTRRD_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_TRN_REQ_RESP_DTLS BEFORE INSERT OR UPDATE  ON NPSS_TRN_REQ_RESP_DTLS FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_TRN_REQ_RESP_DTLS();  ALTER TABLE NPSS_TRN_REQ_RESP_DTLS ENABLE TRIGGER HTG_NPSS_TRN_REQ_RESP_DTLS ; ","params" : [] },{"query" : "CREATE TABLE NPSS_TRN_PROCESS_LOG ( NPSSTPL_ID INTEGER NOT NULL , UETR CHARACTER VARYING(64) NOT NULL , PROCESS_NAME CHARACTER VARYING(64) NULL, PROCESSING_SYSTEM CHARACTER VARYING(64) NULL, DBTR_IBAN CHARACTER VARYING(64) NULL, MSG_ID CHARACTER VARYING(64) NOT NULL , AMOUNT NUMERIC(19,2) NULL, RESPONSE_CODE CHARACTER VARYING(64) NULL, TRAN_REF_ID CHARACTER VARYING(64) NULL, NPSSTRRD_REFNO CHARACTER VARYING(64) NULL, PROCESS_REF_NO CHARACTER VARYING(64) NULL, RESPONSE_DATA CHARACTER VARYING(80000) NULL, REQUEST_DATA_JSON CHARACTER VARYING(80000) NULL, RESPONSE_DATA_JSON CHARACTER VARYING(80000) NULL, T24_RETURN_CODE CHARACTER VARYING(64) NULL, CBUAE_RETURN_CODE CHARACTER VARYING(1024) NULL, REVERSAL_CODE CHARACTER VARYING(16) NULL, ADDITIONAL_INFO CHARACTER VARYING(1024) NULL, V_CODE CHARACTER VARYING(32) NULL, AMOUNT_CREDITED CHARACTER VARYING(32) NULL, AMT_CR_LOC_CUR NUMERIC(9,2) NULL, CHARGE_AMOUNT NUMERIC(9,2) NULL, BUY_CURRENCY CHARACTER VARYING(3) NULL, SELL_CURRENCY CHARACTER VARYING(3) NULL, DEALT_AMOUNT NUMERIC(19,2) NULL, EXCHANGE_RATE NUMERIC(19,6) NULL, CONTRA_AMOUNT NUMERIC(19,2) NULL, SORT_ORDER INTEGER NULL, PROCESS_TYPE CHARACTER VARYING(2) NULL, PROCESS_TIME TIMESTAMP WITHOUT TIME ZONE NULL, STATUS_ACCP_DATE CHARACTER VARYING(64) NULL, STATUS_RESP_AMOUNT NUMERIC(19,2) NULL, STATUS_INTRBKSTTLMDT CHARACTER VARYING(64) NULL, GM_MARGIN NUMERIC(19,6) NULL, SYNC_VERSION CHARACTER VARYING(8) NULL, EXT_IDEN_RETRY_VALUE CHARACTER VARYING(32) NULL, ORG_STATUS CHARACTER VARYING(64) NULL, DATEOFBIRTH CHARACTER VARYING(64) NULL, CITYOFBIRTH CHARACTER VARYING(64) NULL, COUNTRYOFBIRTH CHARACTER VARYING(64) NULL, CUSTOMERID CHARACTER VARYING(64) NULL, CUSTOMERNAME CHARACTER VARYING(128) NULL, EMIRATESID CHARACTER VARYING(64) NULL, IDNUMBERCODE CHARACTER VARYING(64) NULL, PAYMENTID CHARACTER VARYING(64) NULL, ACCOUNT_STATUS CHARACTER VARYING(64) NULL, IS_BLOCKED CHARACTER VARYING(1) NULL, IS_DORMANT CHARACTER VARYING(1) NULL, IS_CLOSED CHARACTER VARYING(1) NULL, IS_INACTIVE CHARACTER VARYING(1) NULL, CARD_STATUS CHARACTER VARYING(1) NULL, CARD_EXPIRY_DATE TIMESTAMP WITHOUT TIME ZONE NULL, CHANNEL_ID CHARACTER VARYING(128) NULL, AVAILABLE_BALANCE NUMERIC(19,2) NULL, DBTR_LEGAL_ID CHARACTER VARYING(32) NULL, DBTR_NATIONAL_ID CHARACTER VARYING(32) NULL, ECO_ACTVTY_CODE CHARACTER VARYING(32) NULL, ISSUER_TYPE_CODE CHARACTER VARYING(32) NULL, TRADE_LICENCE_NO CHARACTER VARYING(32) NULL, POSTING_DATE_TIME CHARACTER VARYING(64) NULL, ACCOUNT_NUMBER CHARACTER VARYING(32) NULL, ACCOUNT_IBAN CHARACTER VARYING(32) NULL, PHONE_NO CHARACTER VARYING(32) NULL, VIRTUAL_IBAN CHARACTER VARYING(32) NULL, WALLET_IBAN CHARACTER VARYING(32) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_TRN_PROCESS_LOG INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_TRN_PROCESS_LOG ALTER COLUMN NPSSTPL_ID SET DEFAULT nextval(''SEQ_NPSS_TRN_PROCESS_LOG'');  ALTER TABLE NPSS_TRN_PROCESS_LOG ADD CONSTRAINT NPSS_TRN_PROCESS_LOG_pkey primary key(NPSSTPL_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_TRN_PROCESS_LOG() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSTPL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSTPL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_TRN_PROCESS_LOG BEFORE INSERT OR UPDATE  ON NPSS_TRN_PROCESS_LOG FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_TRN_PROCESS_LOG();  ALTER TABLE NPSS_TRN_PROCESS_LOG ENABLE TRIGGER HTG_NPSS_TRN_PROCESS_LOG ; ","params" : [] },{"query" : "CREATE TABLE NPSS_CUSTOMER_PROXY ( NPSSCP_ID INTEGER NOT NULL , BANKUSERID CHARACTER VARYING(16) NOT NULL , CUSTOMER_NAME CHARACTER VARYING(50) NOT NULL , SURNAME CHARACTER VARYING(50) NOT NULL , CHANNEL_ID CHARACTER VARYING(128) NULL, CHANNEL_PRODUCT CHARACTER VARYING(128) NULL, MOBILE CHARACTER VARYING(30) NOT NULL , PRODUCT_CODE CHARACTER VARYING(16) NULL, GROUP_CODE CHARACTER VARYING(5) NULL, BANK_CODE CHARACTER VARYING(5) NULL, PROXY_TYPE CHARACTER VARYING(50) NULL, PROXY_VALUE CHARACTER VARYING(50) NULL, EMAIL CHARACTER VARYING(50) NULL, DOCUMENT_ID CHARACTER VARYING(50) NULL, EXHF_ID INTEGER NULL, CHANNEL_REFNO CHARACTER VARYING(128) NULL, CHANNEL_USERID CHARACTER VARYING(128) NULL, CHANNEL_SUB_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_TRAN_CODE CHARACTER VARYING(3) NULL, OPERATION_DATE CHARACTER VARYING(64) NULL, OPERATION_TYPE CHARACTER VARYING(3) NULL, OPTOUT CHARACTER VARYING(1) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_CUSTOMER_PROXY INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_CUSTOMER_PROXY ALTER COLUMN NPSSCP_ID SET DEFAULT nextval(''SEQ_NPSS_CUSTOMER_PROXY'');  ALTER TABLE NPSS_CUSTOMER_PROXY ADD CONSTRAINT NPSS_CUSTOMER_PROXY_pkey primary key(NPSSCP_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_CUSTOMER_PROXY() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSCP_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSCP_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_CUSTOMER_PROXY BEFORE INSERT OR UPDATE  ON NPSS_CUSTOMER_PROXY FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_CUSTOMER_PROXY();  ALTER TABLE NPSS_CUSTOMER_PROXY ENABLE TRIGGER HTG_NPSS_CUSTOMER_PROXY ; ","params" : [] },{"query" : "CREATE TABLE NPSS_MERCHANT_PROXY ( NPSSMP_ID INTEGER NOT NULL , BANKUSERID CHARACTER VARYING(16) NOT NULL , MERCHANT_NAME CHARACTER VARYING(50) NULL, MERCHANT_TAG CHARACTER VARYING(8) NULL, MCC CHARACTER VARYING(4) NOT NULL , MOBILE CHARACTER VARYING(30) NOT NULL , DENOMINATION CHARACTER VARYING(100) NOT NULL , VAT_NUMBER CHARACTER VARYING(20) NOT NULL , SURNAME CHARACTER VARYING(50) NULL, PRODUCT_CODE CHARACTER VARYING(16) NULL, GROUP_CODE CHARACTER VARYING(5) NULL, BANK_CODE CHARACTER VARYING(5) NULL, PROXY_TYPE CHARACTER VARYING(50) NULL, PROXY_VALUE CHARACTER VARYING(50) NULL, EMAIL CHARACTER VARYING(50) NULL, DOCUMENT_ID CHARACTER VARYING(50) NULL, CHANNEL_NAME CHARACTER VARYING(100) NULL, LOGO CHARACTER VARYING(4000) NULL, EXHF_ID INTEGER NULL, CHANNEL_ID CHARACTER VARYING(128) NULL, CHANNEL_USERID CHARACTER VARYING(128) NULL, CHANNEL_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_SUB_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_TRAN_CODE CHARACTER VARYING(3) NULL, CHANNEL_REFNO CHARACTER VARYING(128) NULL, OPERATION_DATE CHARACTER VARYING(64) NULL, OPERATION_TYPE CHARACTER VARYING(3) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_MERCHANT_PROXY INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_MERCHANT_PROXY ALTER COLUMN NPSSMP_ID SET DEFAULT nextval(''SEQ_NPSS_MERCHANT_PROXY'');  ALTER TABLE NPSS_MERCHANT_PROXY ADD CONSTRAINT NPSS_MERCHANT_PROXY_pkey primary key(NPSSMP_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_MERCHANT_PROXY() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSMP_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSMP_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_MERCHANT_PROXY BEFORE INSERT OR UPDATE  ON NPSS_MERCHANT_PROXY FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_MERCHANT_PROXY();  ALTER TABLE NPSS_MERCHANT_PROXY ENABLE TRIGGER HTG_NPSS_MERCHANT_PROXY ; ","params" : [] },{"query" : "CREATE TABLE NPSS_CUSTOMER_ACCOUNTS ( NPSSCA_ID INTEGER NOT NULL , PRODUCT_CODE CHARACTER VARYING(16) NULL, BANKUSERID CHARACTER VARYING(16) NOT NULL , IBAN CHARACTER VARYING(35) NOT NULL , CURRENCY CHARACTER VARYING(3) NULL, INSTANT_PAYMENT CHARACTER VARYING(5) NULL, DEFAULT_ACCOUNT CHARACTER VARYING(5) NULL, EXHF_ID INTEGER NULL, NPSSCP_ID INTEGER NOT NULL , ACCOUNT_ID CHARACTER VARYING(64) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_CUSTOMER_ACCOUNTS INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_CUSTOMER_ACCOUNTS ALTER COLUMN NPSSCA_ID SET DEFAULT nextval(''SEQ_NPSS_CUSTOMER_ACCOUNTS'');  ALTER TABLE NPSS_CUSTOMER_ACCOUNTS ADD CONSTRAINT NPSS_CUSTOMER_ACCOUNTS_pkey primary key(NPSSCA_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_CUSTOMER_ACCOUNTS() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSCA_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSCA_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_CUSTOMER_ACCOUNTS BEFORE INSERT OR UPDATE  ON NPSS_CUSTOMER_ACCOUNTS FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_CUSTOMER_ACCOUNTS();  ALTER TABLE NPSS_CUSTOMER_ACCOUNTS ENABLE TRIGGER HTG_NPSS_CUSTOMER_ACCOUNTS ; ","params" : [] },{"query" : "CREATE TABLE NPSS_SM_TRN_PROCESS_LOG ( NPSSSMTPL_ID INTEGER NOT NULL , BANKUSERID CHARACTER VARYING(16) NOT NULL , PROCESS_NAME CHARACTER VARYING(64) NULL, PROCESSING_SYSTEM CHARACTER VARYING(64) NULL, RESULT_CODE CHARACTER VARYING(64) NULL, RESULT CHARACTER VARYING(5) NULL, RESULT_MESSAGE CHARACTER VARYING(100) NULL, RESULT_X_REQUEST_ID CHARACTER VARYING(100) NULL, PROCESS_REF_NO CHARACTER VARYING(64) NULL, REQUEST_DATA_JSON CHARACTER VARYING(80000) NULL, RESPONSE_DATA_JSON CHARACTER VARYING(80000) NULL, CHANNEL_ID CHARACTER VARYING(128) NULL, CHANNEL_REFNO CHARACTER VARYING(128) NULL, CHANNEL_USERID CHARACTER VARYING(128) NULL, CHANNEL_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_SUB_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_TRAN_CODE CHARACTER VARYING(3) NULL, REJECT_REASON_CODE CHARACTER VARYING(16) NULL, REJECT_REASON CHARACTER VARYING(256) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_SM_TRN_PROCESS_LOG INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_SM_TRN_PROCESS_LOG ALTER COLUMN NPSSSMTPL_ID SET DEFAULT nextval(''SEQ_NPSS_SM_TRN_PROCESS_LOG'');  ALTER TABLE NPSS_SM_TRN_PROCESS_LOG ADD CONSTRAINT NPSS_SM_TRN_PROCESS_LOG_pkey primary key(NPSSSMTPL_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_SM_TRN_PROCESS_LOG() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSSMTPL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSSMTPL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_SM_TRN_PROCESS_LOG BEFORE INSERT OR UPDATE  ON NPSS_SM_TRN_PROCESS_LOG FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_SM_TRN_PROCESS_LOG();  ALTER TABLE NPSS_SM_TRN_PROCESS_LOG ENABLE TRIGGER HTG_NPSS_SM_TRN_PROCESS_LOG ; ","params" : [] },{"query" : "CREATE TABLE NPSS_MERCHANT_ACCOUNTS ( NPSSMA_ID INTEGER NOT NULL , PRODUCT_CODE CHARACTER VARYING(16) NULL, BANKUSERID CHARACTER VARYING(16) NOT NULL , IBAN CHARACTER VARYING(35) NOT NULL , CURRENCY CHARACTER VARYING(3) NULL, DEFAULT_ACCOUNT CHARACTER VARYING(5) NULL, EXHF_ID INTEGER NULL, NPSSMP_ID INTEGER NOT NULL , ACCOUNT_ID CHARACTER VARYING(64) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_MERCHANT_ACCOUNTS INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_MERCHANT_ACCOUNTS ALTER COLUMN NPSSMA_ID SET DEFAULT nextval(''SEQ_NPSS_MERCHANT_ACCOUNTS'');  ALTER TABLE NPSS_MERCHANT_ACCOUNTS ADD CONSTRAINT NPSS_MERCHANT_ACCOUNTS_pkey primary key(NPSSMA_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_MERCHANT_ACCOUNTS() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSMA_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSMA_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_MERCHANT_ACCOUNTS BEFORE INSERT OR UPDATE  ON NPSS_MERCHANT_ACCOUNTS FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_MERCHANT_ACCOUNTS();  ALTER TABLE NPSS_MERCHANT_ACCOUNTS ENABLE TRIGGER HTG_NPSS_MERCHANT_ACCOUNTS ; ","params" : [] },{"query" : "CREATE TABLE NPSS_MERCHANT_SHOPS ( NPSSMS_ID INTEGER NOT NULL , PRODUCT_CODE CHARACTER VARYING(16) NULL, BANKUSERID CHARACTER VARYING(16) NOT NULL , SHOP_NAME CHARACTER VARYING(100) NOT NULL , SHOP_MID CHARACTER VARYING(8) NULL, SHOP_ID CHARACTER VARYING(16) NULL, SHOP_TYPE CHARACTER VARYING(30) NOT NULL , SHOP_MCC CHARACTER VARYING(4) NULL, SHOP_IBAN CHARACTER VARYING(35) NULL, BUILDING CHARACTER VARYING(50) NULL, STREET CHARACTER VARYING(50) NULL, CITY CHARACTER VARYING(50) NULL, POSTAL_CODE CHARACTER VARYING(10) NULL, COUNTY CHARACTER VARYING(50) NULL, COUNTRY CHARACTER VARYING(50) NULL, EXHF_ID INTEGER NULL, NPSSMP_ID INTEGER NOT NULL , SHOP_ACCOUNT_ID CHARACTER VARYING(64) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_MERCHANT_SHOPS INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_MERCHANT_SHOPS ALTER COLUMN NPSSMS_ID SET DEFAULT nextval(''SEQ_NPSS_MERCHANT_SHOPS'');  ALTER TABLE NPSS_MERCHANT_SHOPS ADD CONSTRAINT NPSS_MERCHANT_SHOPS_pkey primary key(NPSSMS_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_MERCHANT_SHOPS() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSMS_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSMS_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_MERCHANT_SHOPS BEFORE INSERT OR UPDATE  ON NPSS_MERCHANT_SHOPS FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_MERCHANT_SHOPS();  ALTER TABLE NPSS_MERCHANT_SHOPS ENABLE TRIGGER HTG_NPSS_MERCHANT_SHOPS ; ","params" : [] },{"query" : "CREATE TABLE NPSS_MERCHANT_CASHDESK ( NPSSMC_ID INTEGER NOT NULL , PRODUCT_CODE CHARACTER VARYING(16) NULL, BANKUSERID CHARACTER VARYING(16) NOT NULL , CASHDESK_OVERLAY_ID CHARACTER VARYING(30) NULL, CASHDESK_ID CHARACTER VARYING(16) NOT NULL , EXHF_ID INTEGER NULL, NPSSMS_ID INTEGER NOT NULL , CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_MERCHANT_CASHDESK INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_MERCHANT_CASHDESK ALTER COLUMN NPSSMC_ID SET DEFAULT nextval(''SEQ_NPSS_MERCHANT_CASHDESK'');  ALTER TABLE NPSS_MERCHANT_CASHDESK ADD CONSTRAINT NPSS_MERCHANT_CASHDESK_pkey primary key(NPSSMC_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_MERCHANT_CASHDESK() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSMC_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSMC_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_MERCHANT_CASHDESK BEFORE INSERT OR UPDATE  ON NPSS_MERCHANT_CASHDESK FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_MERCHANT_CASHDESK();  ALTER TABLE NPSS_MERCHANT_CASHDESK ENABLE TRIGGER HTG_NPSS_MERCHANT_CASHDESK ; ","params" : [] },{"query" : "CREATE TABLE NPSS_API_SIM_PACS008 ( NPSSASP_ID INTEGER NOT NULL , HDR_MSG_ID CHARACTER VARYING(64) NULL, HDR_CREATED_DATE TIMESTAMP WITHOUT TIME ZONE NULL, HDR_TOTAL_RECORDS INTEGER NULL, HDR_TOTAL_AMOUNT INTEGER NULL, VALUE_DATE TIMESTAMP WITHOUT TIME ZONE NULL, PROCESS_TYPE CHARACTER VARYING(2) NULL, UETR CHARACTER VARYING(64) NULL, CHANNEL_ID CHARACTER VARYING(128) NULL, DBTR_PHONE_NO CHARACTER VARYING(64) NULL, DBTR_EMAIL_ID CHARACTER VARYING(64) NULL, DBTR_DOCUMENT_ID CHARACTER VARYING(64) NULL, CDTR_PHONE_NO CHARACTER VARYING(64) NULL, CDTR_EMAIL_ID CHARACTER VARYING(64) NULL, CDTR_DOCUMENT_ID CHARACTER VARYING(64) NULL, CDTR_IBAN CHARACTER VARYING(64) NULL, INTRBK_STTLM_AMNT BIGINT NULL, DR_SORT_CODE CHARACTER VARYING(11) NULL, TRAN_REF_ID CHARACTER VARYING(35) NULL, DBTR_ACCT_NO CHARACTER VARYING(20) NULL, CDTR_ACCT_NO CHARACTER VARYING(20) NULL, DBTR_ACCT_NAME CHARACTER VARYING(128) NULL, CDTR_ACCT_NAME CHARACTER VARYING(100) NULL, BASE_AMOUNT BIGINT NULL, PAYMENT_ENDTOEND_ID CHARACTER VARYING(64) NULL, PRODUCT_CODE CHARACTER VARYING(16) NULL, DBTR_IBAN CHARACTER VARYING(64) NULL, BASE_CURRENCY CHARACTER VARYING(3) NULL, CR_SORT_CODE CHARACTER VARYING(11) NULL, INTRBK_STTLM_CUR CHARACTER VARYING(3) NULL, RATE_CODE CHARACTER VARYING(4) NULL, EXCHANGE_RATE INTEGER NULL, CATEGORY_PURPOSE CHARACTER VARYING(64) NULL, HDR_SETTLEMENT_DATE TIMESTAMP WITHOUT TIME ZONE NULL, HDR_SETTLEMENT_METHOD CHARACTER VARYING(64) NULL, HDR_CLEARING_SYSTEM CHARACTER VARYING(64) NULL, INSTRUMENT_TYPE CHARACTER VARYING(35) NULL, CHARGE_BEARER CHARACTER VARYING(16) NULL, MESSAGE_DATA CHARACTER VARYING(80000) NULL, EXHF_ID INTEGER NULL, DBTR_CUST_TYPE CHARACTER VARYING(4) NULL, CHANNEL_REFNO CHARACTER VARYING(128) NULL, CHANNEL_USERID CHARACTER VARYING(128) NULL, CHANNEL_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_SUB_PRODUCT CHARACTER VARYING(128) NULL, CHANNEL_TRAN_CODE CHARACTER VARYING(3) NULL, TRAN_INFO CHARACTER VARYING(43) NULL, INSTRUCTION_ID CHARACTER VARYING(35) NULL, CATEGORY_PURPOSE_PRTY CHARACTER VARYING(35) NULL, EXT_ORG_ID_CODE CHARACTER VARYING(4) NULL, ISSUER_TYPE_CODE CHARACTER VARYING(35) NULL, DBTR_BIRTH_DATE TIMESTAMP WITHOUT TIME ZONE NULL, DBTR_CITY_BIRTH CHARACTER VARYING(35) NULL, DBTR_COUNTRY CHARACTER VARYING(2) NULL, EXT_PERSON_ID_CODE CHARACTER VARYING(4) NULL, EXT_ACCT_ID_CODE CHARACTER VARYING(4) NULL, CR_ACCT_IDENTIFICATION CHARACTER VARYING(34) NULL, CR_ACCT_ID_CODE CHARACTER VARYING(4) NULL, EXT_PURPOSE_CODE CHARACTER VARYING(4) NULL, EXT_PURPOSE_PRTY CHARACTER VARYING(35) NULL, REMITTANCE_INFO CHARACTER VARYING(140) NULL, INWARD_FILE_NAME CHARACTER VARYING(256) NULL, ACCP_DATE_TIME TIMESTAMP WITHOUT TIME ZONE NULL, DEPARTMENT_CODE CHARACTER VARYING(32) NULL, CBS_REF_NO CHARACTER VARYING(40) NULL, DBTR_PRVT_ID CHARACTER VARYING(35) NULL, DBTR_OTHER_ISSUER CHARACTER VARYING(35) NULL, MIDDLEWARE_REF_NO CHARACTER VARYING(40) NULL, CBS_POSTING_FLAG CHARACTER VARYING(10) NULL, ACCOUNT_CURRENCY CHARACTER VARYING(3) NULL, INDIVIDUALIDENTIFICATIONCODE CHARACTER VARYING(20) NULL, OTHERACCOUNT CHARACTER VARYING(20) NULL, COMPANYCODE CHARACTER VARYING(20) NULL, CORETRANSACTIONTYPE CHARACTER VARYING(20) NULL, BENEFICIARYCUSTOMER CHARACTER VARYING(64) NULL, CHARGEACCOUNT CHARACTER VARYING(20) NULL, CHARGECODE CHARACTER VARYING(20) NULL, CHARGETYPE CHARACTER VARYING(20) NULL, CHARGEAMOUNT CHARACTER VARYING(20) NULL, CHARGENARRATION CHARACTER VARYING(20) NULL, VATACCOUNT CHARACTER VARYING(20) NULL, VATAMOUNT CHARACTER VARYING(20) NULL, VATNARRATION CHARACTER VARYING(20) NULL, EXCHANGERATE CHARACTER VARYING(20) NULL, CUSTOMERRATE CHARACTER VARYING(20) NULL, TREASURYRATE CHARACTER VARYING(20) NULL, CUSTOMERSPREAD CHARACTER VARYING(20) NULL, CLRSYSREF CHARACTER VARYING(35) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_API_SIM_PACS008 INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_API_SIM_PACS008 ALTER COLUMN NPSSASP_ID SET DEFAULT nextval(''SEQ_NPSS_API_SIM_PACS008'');  ALTER TABLE NPSS_API_SIM_PACS008 ADD CONSTRAINT NPSS_API_SIM_PACS008_pkey primary key(NPSSASP_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_API_SIM_PACS008() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSASP_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSASP_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_API_SIM_PACS008 BEFORE INSERT OR UPDATE  ON NPSS_API_SIM_PACS008 FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_API_SIM_PACS008();  ALTER TABLE NPSS_API_SIM_PACS008 ENABLE TRIGGER HTG_NPSS_API_SIM_PACS008 ; ","params" : [] },{"query" : "CREATE TABLE NPSS_CORE_API_PROCESS_LOG ( NPSSCAPL_ID INTEGER NOT NULL , PROCESS_NAME CHARACTER VARYING(64) NULL, PROCESSING_SYSTEM CHARACTER VARYING(64) NULL, CURRENCY CHARACTER VARYING(3) NULL, ACCOUNTHOLDERBIC CHARACTER VARYING(32) NULL, ACCOUNTNUMBER CHARACTER VARYING(32) NULL, DATETIME TIMESTAMP WITHOUT TIME ZONE NULL, CYCLENUMBER CHARACTER VARYING(32) NULL, SENDERBIC CHARACTER VARYING(32) NULL, FROMDATE TIMESTAMP WITHOUT TIME ZONE NULL, TODATE TIMESTAMP WITHOUT TIME ZONE NULL, REFTYPE CHARACTER VARYING(64) NULL, REF CHARACTER VARYING(64) NULL, RESPONSE_CODE CHARACTER VARYING(64) NULL, PROCESS_REF_NO CHARACTER VARYING(64) NULL, REQUEST_DATA_JSON CHARACTER VARYING(80000) NULL, RESPONSE_DATA_JSON CHARACTER VARYING(300000) NULL, DATASOURCE CHARACTER VARYING(64) NULL, PL_STATUS CHARACTER VARYING(256) NULL, FROMTIME CHARACTER VARYING(16) NULL, TOTIME CHARACTER VARYING(16) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_CORE_API_PROCESS_LOG INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_CORE_API_PROCESS_LOG ALTER COLUMN NPSSCAPL_ID SET DEFAULT nextval(''SEQ_NPSS_CORE_API_PROCESS_LOG'');  ALTER TABLE NPSS_CORE_API_PROCESS_LOG ADD CONSTRAINT NPSS_CORE_API_PROCESS_LOG_pkey primary key(NPSSCAPL_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_CORE_API_PROCESS_LOG() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSCAPL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSCAPL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_CORE_API_PROCESS_LOG BEFORE INSERT OR UPDATE  ON NPSS_CORE_API_PROCESS_LOG FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_CORE_API_PROCESS_LOG();  ALTER TABLE NPSS_CORE_API_PROCESS_LOG ENABLE TRIGGER HTG_NPSS_CORE_API_PROCESS_LOG ; ","params" : [] },{"query" : "CREATE TABLE NPSS_CAMT_ACCOUNT_REPORT ( NCAR_ID INTEGER NOT NULL , REPORT_ID CHARACTER VARYING(35) NULL, RPT_CREATED_DATETIME CHARACTER VARYING(35) NULL, IBAN CHARACTER VARYING(35) NULL, ACCOUNT_CURRENCY CHARACTER VARYING(3) NULL, BIC CHARACTER VARYING(35) NULL, CR_DR_INDICATOR CHARACTER VARYING(35) NULL, HEADER_MSG_ID CHARACTER VARYING(35) NULL, ACCOUNT_NAME CHARACTER VARYING(70) NULL, BALANCE_TYPE_CODE CHARACTER VARYING(35) NULL, BALANCE_AMOUNT NUMERIC(18,2) NULL, RPT_BAL_DATETIME CHARACTER VARYING(35) NULL, MESSAGE_DATA CHARACTER VARYING(80000) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_CAMT_ACCOUNT_REPORT INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_CAMT_ACCOUNT_REPORT ALTER COLUMN NCAR_ID SET DEFAULT nextval(''SEQ_NPSS_CAMT_ACCOUNT_REPORT'');  ALTER TABLE NPSS_CAMT_ACCOUNT_REPORT ADD CONSTRAINT NPSS_CAMT_ACCOUNT_REPORT_pkey primary key(NCAR_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_CAMT_ACCOUNT_REPORT() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NCAR_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NCAR_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_CAMT_ACCOUNT_REPORT BEFORE INSERT OR UPDATE  ON NPSS_CAMT_ACCOUNT_REPORT FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_CAMT_ACCOUNT_REPORT();  ALTER TABLE NPSS_CAMT_ACCOUNT_REPORT ENABLE TRIGGER HTG_NPSS_CAMT_ACCOUNT_REPORT ; ","params" : [] },{"query" : "CREATE TABLE NPSS_CAMT_ACC_CRDR_NTFN ( NCACN_ID INTEGER NOT NULL , NOTIFICATION_ID CHARACTER VARYING(35) NULL, NTFN_CREATED_DATETIME CHARACTER VARYING(35) NULL, IBAN CHARACTER VARYING(35) NULL, CURRENCY CHARACTER VARYING(3) NULL, CR_DR_INDICATOR CHARACTER VARYING(35) NULL, END_TO_END_ID CHARACTER VARYING(35) NULL, HEADER_MSG_ID CHARACTER VARYING(35) NULL, LIMIT_AMOUNT NUMERIC(18,2) NULL, NTFN_STATUS CHARACTER VARYING(35) NULL, BOOKING_DATETIME CHARACTER VARYING(35) NULL, MESSAGE_DATA CHARACTER VARYING(80000) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_CAMT_ACC_CRDR_NTFN INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_CAMT_ACC_CRDR_NTFN ALTER COLUMN NCACN_ID SET DEFAULT nextval(''SEQ_NPSS_CAMT_ACC_CRDR_NTFN'');  ALTER TABLE NPSS_CAMT_ACC_CRDR_NTFN ADD CONSTRAINT NPSS_CAMT_ACC_CRDR_NTFN_pkey primary key(NCACN_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_CAMT_ACC_CRDR_NTFN() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NCACN_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NCACN_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_CAMT_ACC_CRDR_NTFN BEFORE INSERT OR UPDATE  ON NPSS_CAMT_ACC_CRDR_NTFN FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_CAMT_ACC_CRDR_NTFN();  ALTER TABLE NPSS_CAMT_ACC_CRDR_NTFN ENABLE TRIGGER HTG_NPSS_CAMT_ACC_CRDR_NTFN ; ","params" : [] },{"query" : "CREATE TABLE NPSS_NOTIFICATION_LOGS ( NPSSNL_ID INTEGER NOT NULL , CHANNEL_ID CHARACTER VARYING(32) NULL, CHANNEL_REF_NO CHARACTER VARYING(32) NULL, STATUS_CODE CHARACTER VARYING(32) NULL, UETR CHARACTER VARYING(64) NULL, ORDER_CUST_ACC_NO CHARACTER VARYING(32) NULL, AMOUNT CHARACTER VARYING(32) NULL, STATUS_DESCRIPTION CHARACTER VARYING(256) NULL, KAFKA_MESSAGE CHARACTER VARYING(80000) NULL, COMMPD_ID INTEGER NULL, COMMPM_ID INTEGER NULL, COMMPML_ID INTEGER NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_NOTIFICATION_LOGS INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_NOTIFICATION_LOGS ALTER COLUMN NPSSNL_ID SET DEFAULT nextval(''SEQ_NPSS_NOTIFICATION_LOGS'');  ALTER TABLE NPSS_NOTIFICATION_LOGS ADD CONSTRAINT NPSS_NOTIFICATION_LOGS_pkey primary key(NPSSNL_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_NOTIFICATION_LOGS() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSNL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSNL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_NOTIFICATION_LOGS BEFORE INSERT OR UPDATE  ON NPSS_NOTIFICATION_LOGS FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_NOTIFICATION_LOGS();  ALTER TABLE NPSS_NOTIFICATION_LOGS ENABLE TRIGGER HTG_NPSS_NOTIFICATION_LOGS ; ","params" : [] },{"query" : "CREATE TABLE NPSS_EXCEPTIONS ( NPSSE_ID INTEGER NOT NULL , UETR CHARACTER VARYING(64) NULL, MESSAGE_DATA CHARACTER VARYING(80000) NULL, REQ_DATA CHARACTER VARYING(80000) NULL, RES_DATA CHARACTER VARYING(80000) NULL, ERR_DATACORE CHARACTER VARYING(80000) NULL, PROCESS_NAME CHARACTER VARYING(64) NULL, PROCESS_SYSTEM CHARACTER VARYING(64) NULL, CORE CHARACTER VARYING(64) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_EXCEPTIONS INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_EXCEPTIONS ALTER COLUMN NPSSE_ID SET DEFAULT nextval(''SEQ_NPSS_EXCEPTIONS'');  ALTER TABLE NPSS_EXCEPTIONS ADD CONSTRAINT NPSS_EXCEPTIONS_pkey primary key(NPSSE_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_EXCEPTIONS() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSE_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSE_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_EXCEPTIONS BEFORE INSERT OR UPDATE  ON NPSS_EXCEPTIONS FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_EXCEPTIONS();  ALTER TABLE NPSS_EXCEPTIONS ENABLE TRIGGER HTG_NPSS_EXCEPTIONS ; ","params" : [] },{"query" : "CREATE TABLE NPSS_PAY_STATUS_REPORT ( NPSSPSR_ID INTEGER NOT NULL , TIMESTAMP TIMESTAMP WITHOUT TIME ZONE NULL, ORIGINATOR_REFERENCE CHARACTER VARYING(128) NULL, SENDER CHARACTER VARYING(32) NULL, PAYER CHARACTER VARYING(32) NULL, RECEIVER CHARACTER VARYING(32) NULL, BENEFICIARY CHARACTER VARYING(32) NULL, AMOUNT NUMERIC(19,2) NULL, CURRENCY CHARACTER VARYING(3) NULL, SOURCE CHARACTER VARYING(64) NULL, SENDER_REF CHARACTER VARYING(128) NULL, SYSTEM_REF CHARACTER VARYING(128) NULL, BATCH_REF CHARACTER VARYING(128) NULL, PAYMENT_STATUS CHARACTER VARYING(32) NULL, RETURN_ID CHARACTER VARYING(64) NULL, RETURN_REF CHARACTER VARYING(128) NULL, TRANSACTION_ID CHARACTER VARYING(64) NULL, UETR CHARACTER VARYING(64) NULL, MESSAGE_TYPE CHARACTER VARYING(64) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_PAY_STATUS_REPORT INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_PAY_STATUS_REPORT ALTER COLUMN NPSSPSR_ID SET DEFAULT nextval(''SEQ_NPSS_PAY_STATUS_REPORT'');  ALTER TABLE NPSS_PAY_STATUS_REPORT ADD CONSTRAINT NPSS_PAY_STATUS_REPORT_pkey primary key(NPSSPSR_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_PAY_STATUS_REPORT() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSPSR_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSPSR_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_PAY_STATUS_REPORT BEFORE INSERT OR UPDATE  ON NPSS_PAY_STATUS_REPORT FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_PAY_STATUS_REPORT();  ALTER TABLE NPSS_PAY_STATUS_REPORT ENABLE TRIGGER HTG_NPSS_PAY_STATUS_REPORT ; ","params" : [] },{"query" : "CREATE TABLE NPSS_SER_BILLING_REPORT ( NPSSSBR_ID INTEGER NOT NULL , SERVICE_NAME CHARACTER VARYING(256) NULL, VOLUME_VALUE_SIZE INTEGER NULL, TOTAL_CHARGE_AMOUNT NUMERIC(19,2) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_SER_BILLING_REPORT INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_SER_BILLING_REPORT ALTER COLUMN NPSSSBR_ID SET DEFAULT nextval(''SEQ_NPSS_SER_BILLING_REPORT'');  ALTER TABLE NPSS_SER_BILLING_REPORT ADD CONSTRAINT NPSS_SER_BILLING_REPORT_pkey primary key(NPSSSBR_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_SER_BILLING_REPORT() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSSBR_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSSBR_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_SER_BILLING_REPORT BEFORE INSERT OR UPDATE  ON NPSS_SER_BILLING_REPORT FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_SER_BILLING_REPORT();  ALTER TABLE NPSS_SER_BILLING_REPORT ENABLE TRIGGER HTG_NPSS_SER_BILLING_REPORT ; ","params" : [] },{"query" : "CREATE TABLE NPSS_BATCH_FILE_STS_REPORT ( NPSSBFSR_ID INTEGER NOT NULL , BATCH_REFERENCE CHARACTER VARYING(128) NULL, CYCLE_NUMBER INTEGER NULL, FSVD CHARACTER VARYING(32) NULL, SUBMISSION_TIME CHARACTER VARYING(32) NULL, COMPLETION_TIME CHARACTER VARYING(32) NULL, NUMBER_OF_FSIS INTEGER NULL, NUMBER_OF_PAYMENTS INTEGER NULL, AMOUNT NUMERIC(19,2) NULL, BATCH_FILE_STATUS CHARACTER VARYING(32) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_BATCH_FILE_STS_REPORT INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_BATCH_FILE_STS_REPORT ALTER COLUMN NPSSBFSR_ID SET DEFAULT nextval(''SEQ_NPSS_BATCH_FILE_STS_REPORT'');  ALTER TABLE NPSS_BATCH_FILE_STS_REPORT ADD CONSTRAINT NPSS_BATCH_FILE_STS_REPORT_pkey primary key(NPSSBFSR_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_BATCH_FILE_STS_REPORT() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSBFSR_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSBFSR_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_BATCH_FILE_STS_REPORT BEFORE INSERT OR UPDATE  ON NPSS_BATCH_FILE_STS_REPORT FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_BATCH_FILE_STS_REPORT();  ALTER TABLE NPSS_BATCH_FILE_STS_REPORT ENABLE TRIGGER HTG_NPSS_BATCH_FILE_STS_REPORT ; ","params" : [] },{"query" : "CREATE TABLE NPSS_NP_PROCESS_LOG ( NPSSNPPL_ID INTEGER NOT NULL , MSG_ID CHARACTER VARYING(64) NULL, UETR CHARACTER VARYING(64) NULL, NPSSTRRD_REFNO CHARACTER VARYING(64) NULL, PROCESS_NAME CHARACTER VARYING(64) NULL, PROCESSING_SYSTEM CHARACTER VARYING(64) NULL, RESPONSE_CODE CHARACTER VARYING(64) NULL, PROCESS_REF_NO CHARACTER VARYING(64) NULL, T24_RETURN_CODE CHARACTER VARYING(64) NULL, CBUAE_RETURN_CODE CHARACTER VARYING(1024) NULL, REVERSAL_CODE CHARACTER VARYING(16) NULL, RESPONSE_DATA CHARACTER VARYING(80000) NULL, REQUEST_DATA_JSON CHARACTER VARYING(80000) NULL, RESPONSE_DATA_JSON CHARACTER VARYING(80000) NULL, ADDITIONAL_INFO CHARACTER VARYING(1024) NULL, V_CODE CHARACTER VARYING(32) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_NP_PROCESS_LOG INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_NP_PROCESS_LOG ALTER COLUMN NPSSNPPL_ID SET DEFAULT nextval(''SEQ_NPSS_NP_PROCESS_LOG'');  ALTER TABLE NPSS_NP_PROCESS_LOG ADD CONSTRAINT NPSS_NP_PROCESS_LOG_pkey primary key(NPSSNPPL_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_NP_PROCESS_LOG() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSNPPL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSNPPL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_NP_PROCESS_LOG BEFORE INSERT OR UPDATE  ON NPSS_NP_PROCESS_LOG FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_NP_PROCESS_LOG();  ALTER TABLE NPSS_NP_PROCESS_LOG ENABLE TRIGGER HTG_NPSS_NP_PROCESS_LOG ; ","params" : [] },{"query" : "CREATE TABLE NPSS_API_LOGS ( NAL_ID INTEGER NOT NULL , X_REQ_ID CHARACTER VARYING(128) NULL, REF_NO CHARACTER VARYING(128) NULL, REQUEST_DATA_JSON CHARACTER VARYING(80000) NULL, RESPONSE_DATA_JSON CHARACTER VARYING(80000) NULL, PROCESS_DATE CHARACTER VARYING(64) NULL, API_NAME CHARACTER VARYING(80000) NULL, PROCESSING_SYSTEM CHARACTER VARYING(32) NULL, CHANNEL_ID CHARACTER VARYING(16) NULL, CDTR_IBAN CHARACTER VARYING(23) NULL, RESPONSE_CODE CHARACTER VARYING(16) NULL, ADDITIONAL_INFO CHARACTER VARYING(128) NULL, STATUS_CODE CHARACTER VARYING(256) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_API_LOGS INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_API_LOGS ALTER COLUMN NAL_ID SET DEFAULT nextval(''SEQ_NPSS_API_LOGS'');  ALTER TABLE NPSS_API_LOGS ADD CONSTRAINT NPSS_API_LOGS_pkey primary key(NAL_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_API_LOGS() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NAL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NAL_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_API_LOGS BEFORE INSERT OR UPDATE  ON NPSS_API_LOGS FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_API_LOGS();  ALTER TABLE NPSS_API_LOGS ENABLE TRIGGER HTG_NPSS_API_LOGS ; ","params" : [] },{"query" : "CREATE TABLE NPSS_PACT_NOTIFICATIONS ( NPSSPN_ID INTEGER NOT NULL , NPSST_ID INTEGER NULL, UETR CHARACTER VARYING(64) NULL, PROCESS_GROUP CHARACTER VARYING(32) NULL, PROCESS_NAME CHARACTER VARYING(64) NULL, LOG_CREATED_DATE TIMESTAMP WITHOUT TIME ZONE NULL, NOTIFICATION_STATUS CHARACTER VARYING(1) NULL, NOTIFICATION_DATA CHARACTER VARYING(80000) NULL, SORT_ORDER INTEGER NULL, STATUS_CODE CHARACTER VARYING(64) NULL, STATUS_DESCRIPTION CHARACTER VARYING(256) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_PACT_NOTIFICATIONS INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_PACT_NOTIFICATIONS ALTER COLUMN NPSSPN_ID SET DEFAULT nextval(''SEQ_NPSS_PACT_NOTIFICATIONS'');  ALTER TABLE NPSS_PACT_NOTIFICATIONS ADD CONSTRAINT NPSS_PACT_NOTIFICATIONS_pkey primary key(NPSSPN_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_PACT_NOTIFICATIONS() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSPN_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSPN_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_PACT_NOTIFICATIONS BEFORE INSERT OR UPDATE  ON NPSS_PACT_NOTIFICATIONS FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_PACT_NOTIFICATIONS();  ALTER TABLE NPSS_PACT_NOTIFICATIONS ENABLE TRIGGER HTG_NPSS_PACT_NOTIFICATIONS ; ","params" : [] },{"query" : "CREATE TABLE NPSS_PACT_NOTIFICATION_BKP ( NPSSPNB_ID INTEGER NOT NULL , NPSSPN_ID INTEGER NULL, NPSST_ID INTEGER NULL, UETR CHARACTER VARYING(64) NULL, PROCESS_GROUP CHARACTER VARYING(32) NULL, PROCESS_NAME CHARACTER VARYING(64) NULL, LOG_CREATED_DATE TIMESTAMP WITHOUT TIME ZONE NULL, NOTIFICATION_STATUS CHARACTER VARYING(1) NULL, NOTIFICATION_DATA CHARACTER VARYING(80000) NULL, SORT_ORDER INTEGER NULL, STATUS_CODE CHARACTER VARYING(64) NULL, STATUS_DESCRIPTION CHARACTER VARYING(256) NULL, CREATED_BY CHARACTER VARYING(256) NOT NULL,  CREATED_BY_NAME CHARACTER VARYING(256) , CREATED_DATE timestamp without time zone NOT NULL, MODIFIED_BY CHARACTER VARYING(256), MODIFIED_BY_NAME CHARACTER VARYING(256), MODIFIED_DATE timestamp without time zone, SYSTEM_ID CHARACTER VARYING(256),  SYSTEM_NAME CHARACTER VARYING(256),  PRCT_ID CHARACTER VARYING(256), CREATED_BY_STS_ID CHARACTER VARYING(256),  MODIFIED_BY_STS_ID CHARACTER VARYING(256),  STATUS CHARACTER VARYING(256), PROCESS_STATUS CHARACTER VARYING(256), DT_CODE CHARACTER VARYING(256), DT_DESCRIPTION CHARACTER VARYING(256) , DTT_CODE CHARACTER VARYING(256), DTT_DESCRIPTION CHARACTER VARYING(256), APP_ID CHARACTER VARYING(256), ROUTINGKEY CHARACTER VARYING(256), CREATED_CLIENTIP CHARACTER VARYING(256), CREATED_TZ CHARACTER VARYING(256), CREATED_TZ_OFFSET CHARACTER VARYING(256), CREATED_BY_SESSIONID CHARACTER VARYING(512), MODIFIED_CLIENTIP CHARACTER VARYING(256), MODIFIED_TZ CHARACTER VARYING(256), MODIFIED_TZ_OFFSET CHARACTER VARYING(256), MODIFIED_BY_SESSIONID CHARACTER VARYING(512), FX_RESV_DATE1 timestamp without time zone, FX_RESV_DATE2 timestamp without time zone, FX_RESV_DATE3 timestamp without time zone, FX_RESV_DATE4 timestamp without time zone, FX_RESV_DATE5 timestamp without time zone, FX_RESV_TEXT1 CHARACTER VARYING(256), FX_RESV_TEXT2 CHARACTER VARYING(256), FX_RESV_TEXT3 CHARACTER VARYING(256), FX_RESV_TEXT4 CHARACTER VARYING(256), FX_RESV_TEXT5 CHARACTER VARYING(256), CREATED_DATE_UTC timestamp without time zone, MODIFIED_DATE_UTC timestamp without time zone, VERSION_NO integer DEFAULT 0, TENANT_ID CHARACTER VARYING(256) , AI_ID CHARACTER VARYING(256)  ); CREATE SEQUENCE SEQ_NPSS_PACT_NOTIFICATION_BKP INCREMENT 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 20;  ALTER TABLE NPSS_PACT_NOTIFICATION_BKP ALTER COLUMN NPSSPNB_ID SET DEFAULT nextval(''SEQ_NPSS_PACT_NOTIFICATION_BKP'');  ALTER TABLE NPSS_PACT_NOTIFICATION_BKP ADD CONSTRAINT NPSS_PACT_NOTIFICATION_BKP_pkey primary key(NPSSPNB_ID); ","params" : [] },{"query" : "CREATE OR REPLACE FUNCTION TRG_FN_NPSS_PACT_NOTIFICATION_BKP() RETURNS trigger  LANGUAGE ''plpgsql''  COST 100  VOLATILE NOT LEAKPROOF  AS  $BODY$  DECLARE  BEGIN IF TG_OP = ''INSERT'' THEN  NEW.version_no = 1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSPNB_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW),NEW.CREATED_BY,NEW.CREATED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW; ELSIF TG_OP = ''UPDATE'' THEN  NEW.version_no = OLD.version_no +1;  INSERT INTO HST_TRAN_DATA(TRAN_ID,PRCT_ID,VERSION_NO,DTT_CODE,STATUS,PROCESS_STATUS,TABLE_NAME, DTT_DESCRIPTION, NEW_DATA_JSON,OLD_DATA_JSON,CREATED_BY,CREATED_DATE,APP_ID,TENANT_ID,ROUTINGKEY)  SELECT NEW.NPSSPNB_ID,NEW.PRCT_ID,NEW.VERSION_NO,NEW.DTT_CODE,NEW.STATUS,NEW.PROCESS_STATUS,TG_TABLE_NAME, NEW.DTT_DESCRIPTION,ROW_TO_JSON(ROW), ROW_TO_JSON(ROW1),NEW.MODIFIED_BY,NEW.MODIFIED_DATE,NEW.APP_ID,NEW.TENANT_ID,NEW.ROUTINGKEY FROM (SELECT NEW.*)ROW ,(SELECT OLD.*)ROW1; END IF; RETURN NEW; END; $BODY$;  CREATE TRIGGER HTG_NPSS_PACT_NOTIFICATION_BKP BEFORE INSERT OR UPDATE  ON NPSS_PACT_NOTIFICATION_BKP FOR EACH ROW  EXECUTE PROCEDURE TRG_FN_NPSS_PACT_NOTIFICATION_BKP();  ALTER TABLE NPSS_PACT_NOTIFICATION_BKP ENABLE TRIGGER HTG_NPSS_PACT_NOTIFICATION_BKP ; ","params" : [] }]