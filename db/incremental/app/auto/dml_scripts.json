[{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1666862675236_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673093401100~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1673093401100$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1666863771649~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1666863771649$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select remarks,npsst_id,tenant_id  from npss_transactions nt $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_8$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1666863057903~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1666863057903$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.DBTR_IBAN,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CR_ACCT_IDENTIFICATION,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.REVERSAL_AMOUNT,   case    when NT.CDTR_IBAN is not null    and NT.CR_ACCT_IDENTIFICATION is null then NT.ACCOUNT_CURRENCY    when NT.CDTR_IBAN is null    and NT.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   NT.PROCESS_TYPE,   NTPL.reversal_code,   NT.PROCESS_GROUP  from   NPSS_TRANSACTIONS NT  inner join npss_trn_process_log NTPL on   NT.UETR = NTPL.UETR and NT.STATUS = NTPL.STATUS  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1666863233602~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1666863233602$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct UETR,  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  REVERSAL_DESCRIPTION,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  BUY_RATE,  TRAN_CHARGE,  BUY_MARGIN,  TRAN_AMOUNT,  SELL_MARGIN,  SELL_RATE from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   A.ACCOUNT_CURRENCY,   A.BUY_RATE,   A.TRAN_CHARGE,   A.BUY_MARGIN,   A.TRAN_AMOUNT,   A.SELL_MARGIN,   A.SELL_RATE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(NTPL.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   NPSS_TRANSACTIONS A  left join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and ntpl.status = $SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  left join <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = ntpl.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~E_1671117277660~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671118207740~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1671118207740$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select distinct UETR,  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  REMARKS,  REVERSAL_AMOUNT from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.CR_ACCT_IDENTIFICATION,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   A.REMARKS,   A.REVERSAL_AMOUNT,   NTPL.reversal_code  from   NPSS_TRANSACTIONS A  inner join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1671117277660$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~E_1690883609635~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1690883708662~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1690883708662$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  exchange_rate,  gm_margin,  REVERSAL_CODE,  PROCESS_REF_NO,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  createddate,  CHARGEAMOUNT,  BuyRate,  gmmargin,  SELL_MARGIN,  SELL_RATE,  force_post_flag from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Maker Accepted Transaction$SQ$    when A.status = $SQ$IP_RCT_REV_REQ_REJECTED$SQ$ then $SQ$Maker Rejected Transaction$SQ$    else $SQ$others$SQ$   end as Status,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Y$SQ$   end as force_post_flag,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   NTPL.BUY_CURRENCY,   NTPL.SELL_CURRENCY,   NTPL.PROCESS_REF_NO,   NTPL.AMOUNT_CREDITED,   NTPL.AMT_CR_LOC_CUR,   NTPL.CHARGE_AMOUNT,   NTPL.CONTRA_AMOUNT,   NTPL.DEALT_AMOUNT,   A.ACCOUNT_CURRENCY,   A.SELL_MARGIN,   A.SELL_RATE,   PL.exchange_rate,   PL.gm_margin,   PRL.created_date as createddate,   ICP.charge_amount as CHARGEAMOUNT,   NPSSPL.EXCHANGE_RATE as BuyRate,   NPSSPL.gm_margin as gmmargin  from   NPSS_TRANSACTIONS A  inner join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and A.STATUS = NTPL.STATUS  left join npss_trn_process_log PL on   A.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and pl.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log NPSSPL on   A.UETR = NPSSPL.UETR   and NPSSPL.STATUS = $SQ$IP_RCT_REV_DEAL_RECEIVED$SQ$   and NPSSPL.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log PRL on   A.UETR = PRL.UETR   and PRL.process_name = $SQ$Receive Pacs007$SQ$  left join npss_trn_process_log ICP on   A.UETR = ICP.UETR   and PRL.process_name = $SQ$Inward Credit Posting$SQ$  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1690883609635$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_39$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~E_1690883504550~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1690883827485~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1690883827485$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  exchange_rate,  gm_margin,  REVERSAL_CODE,  PROCESS_REF_NO,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  createddate,  CHARGEAMOUNT,  BuyRate,  gmmargin,  SELL_MARGIN,  SELL_RATE,  force_post_flag from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Maker Accepted Transaction$SQ$    when A.status = $SQ$IP_RCT_REV_REQ_REJECTED$SQ$ then $SQ$Maker Rejected Transaction$SQ$    else $SQ$others$SQ$   end as Status,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Y$SQ$   end as force_post_flag,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   NTPL.BUY_CURRENCY,   NTPL.SELL_CURRENCY,   NTPL.PROCESS_REF_NO,   NTPL.AMOUNT_CREDITED,   NTPL.AMT_CR_LOC_CUR,   NTPL.CHARGE_AMOUNT,   NTPL.CONTRA_AMOUNT,   NTPL.DEALT_AMOUNT,   A.ACCOUNT_CURRENCY,   A.SELL_MARGIN,   A.SELL_RATE,   PL.exchange_rate,   PL.gm_margin,   PRL.created_date as createddate,   ICP.charge_amount as CHARGEAMOUNT,   NPSSPL.EXCHANGE_RATE as BuyRate,   NPSSPL.gm_margin as gmmargin  from   NPSS_TRANSACTIONS A  inner join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and A.STATUS = NTPL.STATUS  left join npss_trn_process_log PL on   A.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and pl.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log NPSSPL on   A.UETR = NPSSPL.UETR   and NPSSPL.STATUS = $SQ$IP_RCT_REV_DEAL_RECEIVED$SQ$   and NPSSPL.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log PRL on   A.UETR = PRL.UETR   and PRL.process_name = $SQ$Receive Pacs007$SQ$  left join npss_trn_process_log ICP on   A.UETR = ICP.UETR   and PRL.process_name = $SQ$Inward Credit Posting$SQ$  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1690883504550$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_38$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674106680765~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1674106680765$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  ACCOUNT_NUMBER,  NPSST_ID,  ACCOUNT_NAME,  TENANT_ID from  (  select   case when cnca.alternate_account_type in ($SQ$VA.IBAN$SQ$,$SQ$VA.BBAN$SQ$) then ACCOUNT_NUMBER         else null         end as account_number,         case when cnca.alternate_account_type in ($SQ$VA.IBAN$SQ$,$SQ$VA.BBAN$SQ$) then ACCOUNT_NAME         else null         end as account_name,   CNCA.ALTERNATE_ACCOUNT_ID,   NT.TENANT_ID,   NT.CDTR_IBAN,   NT.NPSST_ID,   NT.DTT_CODE,   NT.DT_CODE  from   <tran_db>.CORE_NC_CBS_ACCOUNTS CNCA  inner join NPSS_TRANSACTIONS NT on   CNCA.ALTERNATE_ACCOUNT_ID = NT.CDTR_IBAN)V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_37$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1669384391224~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1669384391224$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_18$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678261913315~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1678261913315$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  exchange_rate,  gm_margin,  customer_posting_restriction_description,  customer_posting_restriction_code,  posting_restriction_code,  account_postring_type_description,  REVERSAL_CODE,  PROCESS_REF_NO,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  account_number,  createddate,  CHARGEAMOUNT,  BuyRate,  gmmargin,  SELL_MARGIN,  SELL_RATE,  force_post_flag from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Maker Accepted Transaction$SQ$    when A.status = $SQ$IP_RCT_REV_REQ_REJECTED$SQ$ then $SQ$Maker Rejected Transaction$SQ$    else $SQ$others$SQ$   end as Status,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Y$SQ$   end as force_post_flag,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   NTPL.BUY_CURRENCY,   NTPL.SELL_CURRENCY,   NTPL.PROCESS_REF_NO,   NTPL.AMOUNT_CREDITED,   NTPL.AMT_CR_LOC_CUR,   NTPL.CHARGE_AMOUNT,   NTPL.CONTRA_AMOUNT,   NTPL.DEALT_AMOUNT,   A.ACCOUNT_CURRENCY,   A.SELL_MARGIN,   A.SELL_RATE,   PL.exchange_rate,   PL.gm_margin,   CNCA.customer_posting_restriction_description,   CNCA.customer_posting_restriction_code,   CNCA.posting_restriction_code,   CNCA.account_postring_type_description,   cnca.account_number,   PRL.created_date as createddate,   ICP.charge_amount as CHARGEAMOUNT,   NPSSPL.EXCHANGE_RATE as BuyRate,   NPSSPL.gm_margin as gmmargin  from   NPSS_TRANSACTIONS A  inner join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and A.STATUS = NTPL.STATUS  left join npss_trn_process_log PL on   A.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and pl.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log NPSSPL on   A.UETR = NPSSPL.UETR   and NPSSPL.STATUS = $SQ$IP_RCT_REV_DEAL_RECEIVED$SQ$   and NPSSPL.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log PRL on   A.UETR = PRL.UETR   and PRL.process_name = $SQ$Receive Pacs007$SQ$  left join npss_trn_process_log ICP on   A.UETR = ICP.UETR   and PRL.process_name = $SQ$Inward Credit Posting$SQ$  left join <tran_db>.core_nc_cbs_accounts cnca on   cnca.alternate_account_id = A.CDTR_IBAN  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_39$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673093439023~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1673093439023$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~E_1671116806678~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671117829324~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1671117829324$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM, PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.DBTR_IBAN,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.VALUE_DATE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.REVERSAL_AMOUNT,   NT.PROCESS_TYPE,   NTPL.reversal_code  from   NPSS_TRANSACTIONS NT  inner join npss_trn_process_log NTPL on   NT.UETR = NTPL.UETR   and NT.STATUS = NTPL.STATUS  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1671116806678$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1666863318385~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1666863318385$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1669384350002~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1669384350002$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_16$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862675236_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1677670972659~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862675236_0$DQ$,$DQ$DS_1677670972659$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  exchange_rate,  gm_margin,  customer_posting_restriction_description,  customer_posting_restriction_code,  posting_restriction_code,  account_postring_type_description,  REVERSAL_CODE,  PROCESS_REF_NO,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  account_number,  createddate,  CHARGEAMOUNT,  BuyRate,  gmmargin,  SELL_MARGIN,  SELL_RATE,  force_post_flag from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Maker Accepted Transaction$SQ$    when A.status = $SQ$IP_RCT_REV_REQ_REJECTED$SQ$ then $SQ$Maker Rejected Transaction$SQ$    else $SQ$others$SQ$   end as Status,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Y$SQ$   end as force_post_flag,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   NTPL.BUY_CURRENCY,   NTPL.SELL_CURRENCY,   NTPL.PROCESS_REF_NO,   NTPL.AMOUNT_CREDITED,   NTPL.AMT_CR_LOC_CUR,   NTPL.CHARGE_AMOUNT,   NTPL.CONTRA_AMOUNT,   NTPL.DEALT_AMOUNT,   A.ACCOUNT_CURRENCY,   A.SELL_MARGIN,   A.SELL_RATE,   PL.exchange_rate,   PL.gm_margin,   CNCA.customer_posting_restriction_description,   CNCA.customer_posting_restriction_code,   CNCA.posting_restriction_code,   CNCA.account_postring_type_description,   cnca.account_number,   PRL.created_date as createddate,   ICP.charge_amount as CHARGEAMOUNT,   NPSSPL.EXCHANGE_RATE as BuyRate,   NPSSPL.gm_margin as gmmargin  from   NPSS_TRANSACTIONS A  inner join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and A.STATUS = NTPL.STATUS  left join npss_trn_process_log PL on   A.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and pl.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log NPSSPL on   A.UETR = NPSSPL.UETR   and NPSSPL.STATUS = $SQ$IP_RCT_REV_DEAL_RECEIVED$SQ$   and NPSSPL.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log PRL on   A.UETR = PRL.UETR   and PRL.process_name = $SQ$Receive Pacs007$SQ$  left join npss_trn_process_log ICP on   A.UETR = ICP.UETR   and PRL.process_name = $SQ$Inward Credit Posting$SQ$  left join <tran_db>.core_nc_cbs_accounts cnca on   cnca.alternate_account_id = A.CDTR_IBAN  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_38$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862798769_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1666862798769_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1666862798769_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1669371659729~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862798769_0$DQ$,$DQ$DS_1669371659729$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862798769_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669216427305~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862798769_0$DQ$,$DQ$DS_1669216427305$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_8$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862798769_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1670668032760~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862798769_0$DQ$,$DQ$DS_1670668032760$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.VALUE_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   NTPL.PROCESS_NAME,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.PROCESS_GROUP,   NT.INTRBK_STTLM_AMNT,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.CR_ACCT_IDENTIFICATION ,   NT.CDTR_ACCT_NO ,   NT.CDTR_IBAN ,   NT.DBTR_ACCT_NO ,   NT.DBTR_IBAN,   NT.TRAN_REF_ID,   NT.PROCESS_TYPE  from   NPSS_TRANSACTIONS NT  inner join (   select    UETR,    PROCESS_NAME,    STATUS,    PROCESS_STATUS,    NPSSTPL_ID,    ROW_NUM   from    (    select     UETR,     PROCESS_NAME,     STATUS,     PROCESS_STATUS,     NPSSTPL_ID,     row_number() over(partition by UETR    order by     NPSSTPL_ID desc) as ROW_NUM    from     npss_trn_process_log) pl   where    PL.ROW_NUM = 1    and PL.PROCESS_NAME = $SQ$Place Pacs028$SQ$) ntpl on   ntpl.uetr = nt.uetr  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862798769_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1666866107770~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862798769_0$DQ$,$DQ$DS_1666866107770$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  MODIFIED_DATE_UTC,  DATEMI,  VALUE_DATE,  CBS_REF_NO,  CREATED_DATE,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  INTRBK_STTLM_AMNT,  INTRBK_STTLM_CUR,  DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  TRAN_REF_ID,  EXHF_ID,  PROCESS_STATUS,  STATUS,  TENANT_ID,  DT_CODE,  DTT_CODE,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DEPARTMENT_CODE,  PROCESS_GROUP,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  ACCP_DATE_TIME,  PROCESSING_SYSTEM,PROCESS_NAME from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.CBS_REF_NO,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PROCESS_GROUP,   A.PAYMENT_ENDTOEND_ID,   A.ACCP_DATE_TIME,   A.TRAN_REF_ID,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.STATUS,   NTPL.PROCESS_NAME,   A.TENANT_ID,   A.DT_CODE,   A.DTT_CODE,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  inner join (   select    UETR,    PROCESS_NAME,    STATUS,    PROCESS_STATUS,    NPSSTPL_ID,    ROW_NUM   from    (    select     UETR,     PROCESS_NAME,     STATUS,     PROCESS_STATUS,     NPSSTPL_ID,     row_number() over(partition by UETR    order by     NPSSTPL_ID desc) as ROW_NUM    from     npss_trn_process_log) pl   where    PL.ROW_NUM = 1    and PL.PROCESS_NAME = $SQ$Place Pacs028$SQ$) ntpl on   ntpl.uetr = A.uetr  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862798769_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1669371609570~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862798769_0$DQ$,$DQ$DS_1669371609570$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_17$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862798769_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1666866038858~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862798769_0$DQ$,$DQ$DS_1666866038858$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  T24_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATED_DATE_UTC,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  DTT_CODE,  DT_CODE,  TENANT_ID,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.CREATED_DATE_UTC,   A.PROCESS_STATUS,   A.STATUS,   A.DTT_CODE,   A.DT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   A.ADDITIONAL_INFO,   T24RC.RETURN_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.RETURN_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.PAYMENT_ENDTOEND_ID,   case    when NT.EXHF_ID is null then $SQ$RCT$SQ$    else $SQ$BCT$SQ$   end as MEM_PAYMENT_METHOD,   NT.EXHF_ID,   NT.CDTR_IBAN,   NT.DBTR_IBAN,   NT.DBTR_PHONE_NO,   NT.CDTR_PHONE_NO,   NT.INTRBK_STTLM_AMNT,   NT.TRAN_REF_ID,   NT.DEPARTMENT_CODE  from   NPSS_TRN_PROCESS_LOG A  inner join NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  left join <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_RETURN_CODES T24RC on   T24RC.RETURN_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  order by   A.NPSSTPL_ID desc) V where  CREATED_DATE_UTC <= CURRENT_TIMESTAMP - interval $SQ$10 MINUTES$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_5$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1666862798769_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669203662794~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1666862798769_0$DQ$,$DQ$DS_1669203662794$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_6$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668671778906_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1668671778906_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1668671778906_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1668672188150~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668671778906_0$DQ$,$DQ$DS_1668672188150$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  MODIFIED_DATE_UTC,  DATEMI,  VALUE_DATE,  CBS_REF_NO,  CREATED_DATE,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  INTRBK_STTLM_AMNT,  INTRBK_STTLM_CUR,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  TRAN_REF_ID,  EXHF_ID,  PROCESS_STATUS,  STATUS,  TENANT_ID,  DT_CODE,  DTT_CODE,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DEPARTMENT_CODE,  PROCESS_GROUP,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  ACCP_DATE_TIME,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.CBS_REF_NO,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.CR_ACCT_IDENTIFICATION,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.ACCP_DATE_TIME,   A.TRAN_REF_ID,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.STATUS,   A.TENANT_ID,   A.DT_CODE,   A.DTT_CODE,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668671778906_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1669374740324~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668671778906_0$DQ$,$DQ$DS_1669374740324$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668671778906_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669203912228~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668671778906_0$DQ$,$DQ$DS_1669203912228$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668671778906_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669215632609~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668671778906_0$DQ$,$DQ$DS_1669215632609$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_8$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668671778906_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1668672011803~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668671778906_0$DQ$,$DQ$DS_1668672011803$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_5$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668671778906_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1669374687120~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668671778906_0$DQ$,$DQ$DS_1669374687120$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668671778906_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1668672141326~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668671778906_0$DQ$,$DQ$DS_1668672141326$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.VALUE_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.CREATED_DATE_UTC,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.PROCESS_GROUP,   NT.CR_ACCT_IDENTIFICATION ,   NT.CDTR_ACCT_NO ,   NT.CDTR_IBAN ,   NT.DBTR_ACCT_NO ,   NT.DBTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.PROCESS_TYPE  from   NPSS_TRANSACTIONS NT  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <tran_db>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <tran_db>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668774116287_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1668774116287_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1668774116287_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669215498164~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668774116287_0$DQ$,$DQ$DS_1669215498164$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668774116287_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669203778085~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668774116287_0$DQ$,$DQ$DS_1669203778085$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668774116287_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1668774370011~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668774116287_0$DQ$,$DQ$DS_1668774370011$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.PROCESS_TYPE  from   NPSS_TRANSACTIONS NT  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668774116287_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1669449752372~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668774116287_0$DQ$,$DQ$DS_1669449752372$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668774116287_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1669449791233~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668774116287_0$DQ$,$DQ$DS_1669449791233$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_12$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668774116287_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1668774619622~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668774116287_0$DQ$,$DQ$DS_1668774619622$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_card_decrypt_and_mask(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_card_decrypt_and_mask(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   <TRAN_DB>.NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1668774116287_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1668774288064~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1668774116287_0$DQ$,$DQ$DS_1668774288064$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_5$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1669011248151_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1669011248151_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1669011248151_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669013285212~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1669011248151_0$DQ$,$DQ$DS_1669013285212$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_card_decrypt_and_mask(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_card_decrypt_and_mask(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   <TRAN_DB>.NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1669011248151_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669203698344~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1669011248151_0$DQ$,$DQ$DS_1669203698344$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1669011248151_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1678112236457~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1669011248151_0$DQ$,$DQ$DS_1678112236457$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  uetr,  STATUS,  process_status,  process_name,  error_description,  t24_return_code,  tenant_id from  (  select   ntpl.uetr,   ntpl.STATUS,   ntpl.process_status,   ntpl.t24_return_code,   ntpl.process_name,   ntpl.tenant_id,   cnec.error_description  from   npss_trn_process_log ntpl  left join  <tran_db>.core_nc_error_codes cnec on   cnec.error_code = ntpl.t24_return_code   and cnec.NEED_SYNC = $SQ$Y$SQ$)V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1669011248151_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1669452514005~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1669011248151_0$DQ$,$DQ$DS_1669452514005$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1669011248151_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1669011523907~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1669011248151_0$DQ$,$DQ$DS_1669011523907$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_5$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1669011248151_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669011637016~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1669011248151_0$DQ$,$DQ$DS_1669011637016$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.PROCESS_TYPE  from   NPSS_TRANSACTIONS NT  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1669011248151_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1669458777167~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1669011248151_0$DQ$,$DQ$DS_1669458777167$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1669011248151_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1669215559899~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1669011248151_0$DQ$,$DQ$DS_1669215559899$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1670569746242_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1670569746242_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1670569746242_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1670570825681~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1670569746242_0$DQ$,$DQ$DS_1670570825681$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1670569746242_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1670572478503~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1670569746242_0$DQ$,$DQ$DS_1670572478503$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  ACCP_DATE_TIME,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  CBUAE_RETURN_CODE,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.CR_ACCT_IDENTIFICATION,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   A.CATEGORY_PURPOSE,   A.ISSUER_TYPE_CODE,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   NTPL.CBUAE_RETURN_CODE ,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  inner join NPSS_TRN_PROCESS_LOG NTPL on   A.UETR = NTPL.UETR  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1670569746242_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1670569913339~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1670569746242_0$DQ$,$DQ$DS_1670569913339$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  STATUS,  PROCESS_STATUS from  (  select   NT.CREATED_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   T.PROCESS_NAME,   NT.PROCESSING_SYSTEM,   T.ADDITIONAL_INFO,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   T.CBUAE_RETURN_CODE,   NT.PROCESS_TYPE  from   NPSS_TRANSACTIONS NT  inner join NPSS_TRN_PROCESS_LOG T on   NT.UETR = T.UETR  left join TRANSACTION_SET TS on   T.NPSSTPL_ID = TS.TRN_ID   and T.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1670569746242_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1670570534246~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1670569746242_0$DQ$,$DQ$DS_1670570534246$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_8$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1670569746242_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1670570613326~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1670569746242_0$DQ$,$DQ$DS_1670570613326$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1670569746242_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1670570708995~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1670569746242_0$DQ$,$DQ$DS_1670570708995$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_5$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1671083490962_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~E_1690885863532~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1690888490405~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1690888490405$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  exchange_rate,  gm_margin,  REVERSAL_CODE,  PROCESS_REF_NO,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  createddate,  CHARGEAMOUNT,  BuyRate,  gmmargin,  SELL_MARGIN,  SELL_RATE,  force_post_flag from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Maker Accepted Transaction$SQ$    when A.status = $SQ$IP_RCT_REV_REQ_REJECTED$SQ$ then $SQ$Maker Rejected Transaction$SQ$    else $SQ$others$SQ$   end as Status,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Y$SQ$   end as force_post_flag,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   NTPL.BUY_CURRENCY,   NTPL.SELL_CURRENCY,   NTPL.PROCESS_REF_NO,   NTPL.AMOUNT_CREDITED,   NTPL.AMT_CR_LOC_CUR,   NTPL.CHARGE_AMOUNT,   NTPL.CONTRA_AMOUNT,   NTPL.DEALT_AMOUNT,   A.ACCOUNT_CURRENCY,   A.SELL_MARGIN,   A.SELL_RATE,   PL.exchange_rate,   PL.gm_margin,   PRL.created_date as createddate,   ICP.charge_amount as CHARGEAMOUNT,   NPSSPL.EXCHANGE_RATE as BuyRate,   NPSSPL.gm_margin as gmmargin  from   NPSS_TRANSACTIONS A  inner join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and A.STATUS = NTPL.STATUS  left join npss_trn_process_log PL on   A.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and pl.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log NPSSPL on   A.UETR = NPSSPL.UETR   and NPSSPL.STATUS = $SQ$IP_RCT_REV_DEAL_RECEIVED$SQ$   and NPSSPL.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log PRL on   A.UETR = PRL.UETR   and PRL.process_name = $SQ$Receive Pacs007$SQ$  left join npss_trn_process_log ICP on   A.UETR = ICP.UETR   and PRL.process_name = $SQ$Inward Credit Posting$SQ$  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1690885863532$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_38$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~E_1690886017883~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1690888750811~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1690888750811$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  exchange_rate,  gm_margin,  REVERSAL_CODE,  PROCESS_REF_NO,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  createddate,  CHARGEAMOUNT,  BuyRate,  gmmargin,  SELL_MARGIN,  SELL_RATE,  force_post_flag from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Maker Accepted Transaction$SQ$    when A.status = $SQ$IP_RCT_REV_REQ_REJECTED$SQ$ then $SQ$Maker Rejected Transaction$SQ$    else $SQ$others$SQ$   end as Status,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Y$SQ$   end as force_post_flag,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   NTPL.BUY_CURRENCY,   NTPL.SELL_CURRENCY,   NTPL.PROCESS_REF_NO,   NTPL.AMOUNT_CREDITED,   NTPL.AMT_CR_LOC_CUR,   NTPL.CHARGE_AMOUNT,   NTPL.CONTRA_AMOUNT,   NTPL.DEALT_AMOUNT,   A.ACCOUNT_CURRENCY,   A.SELL_MARGIN,   A.SELL_RATE,   PL.exchange_rate,   PL.gm_margin,   PRL.created_date as createddate,   ICP.charge_amount as CHARGEAMOUNT,   NPSSPL.EXCHANGE_RATE as BuyRate,   NPSSPL.gm_margin as gmmargin  from   NPSS_TRANSACTIONS A  inner join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and A.STATUS = NTPL.STATUS  left join npss_trn_process_log PL on   A.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and pl.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log NPSSPL on   A.UETR = NPSSPL.UETR   and NPSSPL.STATUS = $SQ$IP_RCT_REV_DEAL_RECEIVED$SQ$   and NPSSPL.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log PRL on   A.UETR = PRL.UETR   and PRL.process_name = $SQ$Receive Pacs007$SQ$  left join npss_trn_process_log ICP on   A.UETR = ICP.UETR   and PRL.process_name = $SQ$Inward Credit Posting$SQ$  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1690886017883$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_37$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671085360297~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1671085360297$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct UETR,  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  REVERSAL_DESCRIPTION,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  BUY_RATE,  TRAN_CHARGE,  BUY_MARGIN,  TRAN_AMOUNT,  SELL_MARGIN,  SELL_RATE from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   A.ACCOUNT_CURRENCY,   A.BUY_RATE,   A.TRAN_CHARGE,   A.BUY_MARGIN,   A.TRAN_AMOUNT,   A.SELL_MARGIN,   A.SELL_RATE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(NTPL.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   NPSS_TRANSACTIONS A  left join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and ntpl.status = $SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  left join <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = ntpl.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671086881059~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1671086881059$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679295981317~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1679295981317$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select remarks,npsst_id,tenant_id  from npss_transactions nt $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_39$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1671083836508~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1671083836508$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_16$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678262024985~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1678262024985$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  exchange_rate,  gm_margin,  customer_posting_restriction_description,  customer_posting_restriction_code,  posting_restriction_code,  account_postring_type_description,  REVERSAL_CODE,  PROCESS_REF_NO,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  account_number,  createddate,  CHARGEAMOUNT,  BuyRate,  gmmargin,  SELL_MARGIN,  SELL_RATE,  force_post_flag from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Maker Accepted Transaction$SQ$    when A.status = $SQ$IP_RCT_REV_REQ_REJECTED$SQ$ then $SQ$Maker Rejected Transaction$SQ$    else $SQ$others$SQ$   end as Status,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Y$SQ$   end as force_post_flag,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   NTPL.BUY_CURRENCY,   NTPL.SELL_CURRENCY,   NTPL.PROCESS_REF_NO,   NTPL.AMOUNT_CREDITED,   NTPL.AMT_CR_LOC_CUR,   NTPL.CHARGE_AMOUNT,   NTPL.CONTRA_AMOUNT,   NTPL.DEALT_AMOUNT,   A.ACCOUNT_CURRENCY,   A.SELL_MARGIN,   A.SELL_RATE,   PL.exchange_rate,   PL.gm_margin,   CNCA.customer_posting_restriction_description,   CNCA.customer_posting_restriction_code,   CNCA.posting_restriction_code,   CNCA.account_postring_type_description,   cnca.account_number,   PRL.created_date as createddate,   ICP.charge_amount as CHARGEAMOUNT,   NPSSPL.EXCHANGE_RATE as BuyRate,   NPSSPL.gm_margin as gmmargin  from   NPSS_TRANSACTIONS A  inner join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and A.STATUS = NTPL.STATUS  left join npss_trn_process_log PL on   A.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and pl.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log NPSSPL on   A.UETR = NPSSPL.UETR   and NPSSPL.STATUS = $SQ$IP_RCT_REV_DEAL_RECEIVED$SQ$   and NPSSPL.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log PRL on   A.UETR = PRL.UETR   and PRL.process_name = $SQ$Receive Pacs007$SQ$  left join npss_trn_process_log ICP on   A.UETR = ICP.UETR   and PRL.process_name = $SQ$Inward Credit Posting$SQ$  left join <tran_db>.core_nc_cbs_accounts cnca on   cnca.alternate_account_id = A.CDTR_IBAN  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_38$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1677743981882~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1677743981882$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  CURRENCY,  REMARKS,  REVERSAL_AMOUNT,  ACCOUNT_CURRENCY,  exchange_rate,  gm_margin,  customer_posting_restriction_description,  customer_posting_restriction_code,  posting_restriction_code,  account_postring_type_description,  REVERSAL_CODE,  PROCESS_REF_NO,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  account_number,  createddate,  CHARGEAMOUNT,  BuyRate,  gmmargin,  SELL_MARGIN,  SELL_RATE,  force_post_flag from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Maker Accepted Transaction$SQ$    when A.status = $SQ$IP_RCT_REV_REQ_REJECTED$SQ$ then $SQ$Maker Rejected Transaction$SQ$    else $SQ$others$SQ$   end as Status,   case    when A.status = $SQ$IP_RCT_RR_RETURN_READY$SQ$ then $SQ$Y$SQ$   end as force_post_flag,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   case    when A.CDTR_IBAN is not null    and A.CR_ACCT_IDENTIFICATION is null then A.ACCOUNT_CURRENCY    when A.CDTR_IBAN is null    and A.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   A.REMARKS,   A.CR_ACCT_IDENTIFICATION,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   NTPL.BUY_CURRENCY,   NTPL.SELL_CURRENCY,   NTPL.PROCESS_REF_NO,   NTPL.AMOUNT_CREDITED,   NTPL.AMT_CR_LOC_CUR,   NTPL.CHARGE_AMOUNT,   NTPL.CONTRA_AMOUNT,   NTPL.DEALT_AMOUNT,   A.ACCOUNT_CURRENCY,   A.SELL_MARGIN,   A.SELL_RATE,   PL.exchange_rate,   PL.gm_margin,   CNCA.customer_posting_restriction_description,   CNCA.customer_posting_restriction_code,   CNCA.posting_restriction_code,   CNCA.account_postring_type_description,   cnca.account_number,   PRL.created_date as createddate,   ICP.charge_amount as CHARGEAMOUNT,   NPSSPL.EXCHANGE_RATE as BuyRate,   NPSSPL.gm_margin as gmmargin  from   NPSS_TRANSACTIONS A  inner join npss_trn_process_log NTPL on   A.UETR = NTPL.UETR   and A.STATUS = NTPL.STATUS  left join npss_trn_process_log PL on   A.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and pl.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log NPSSPL on   A.UETR = NPSSPL.UETR   and NPSSPL.STATUS = $SQ$IP_RCT_REV_DEAL_RECEIVED$SQ$   and NPSSPL.process_name = $SQ$Get Deal$SQ$  left join npss_trn_process_log PRL on   A.UETR = PRL.UETR   and PRL.process_name = $SQ$Receive Pacs007$SQ$  left join npss_trn_process_log ICP on   A.UETR = ICP.UETR   and PRL.process_name = $SQ$Inward Credit Posting$SQ$  left join <tran_db>.core_nc_cbs_accounts cnca on   cnca.alternate_account_id = A.CDTR_IBAN  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_37$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1671083872939~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1671083872939$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_18$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671085512862~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1671085512862$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671084001824~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1671084001824$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.DBTR_IBAN,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CR_ACCT_IDENTIFICATION,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.REVERSAL_AMOUNT,   case    when NT.CDTR_IBAN is not null    and NT.CR_ACCT_IDENTIFICATION is null then NT.ACCOUNT_CURRENCY    when NT.CDTR_IBAN is null    and NT.CR_ACCT_IDENTIFICATION is not null then UPPER($SQ$AED$SQ$)    else UPPER($SQ$OTHERS$SQ$)   end as CURRENCY,   NT.PROCESS_TYPE,   NTPL.reversal_code,   NT.PROCESS_GROUP  from   NPSS_TRANSACTIONS NT  inner join npss_trn_process_log NTPL on   NT.UETR = NTPL.UETR and NT.STATUS = NTPL.STATUS  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674106844155~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1674106844155$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  ACCOUNT_NUMBER,  NPSST_ID,  ACCOUNT_NAME,  TENANT_ID from  (  select   case when cnca.alternate_account_type in ($SQ$VA.IBAN$SQ$,$SQ$VA.BBAN$SQ$) then ACCOUNT_NUMBER         else null         end as account_number,         case when cnca.alternate_account_type in ($SQ$VA.IBAN$SQ$,$SQ$VA.BBAN$SQ$) then ACCOUNT_NAME         else null         end as account_name,   CNCA.ALTERNATE_ACCOUNT_ID,   NT.TENANT_ID,   NT.CDTR_IBAN,   NT.NPSST_ID,   NT.DTT_CODE,   NT.DT_CODE  from   <tran_db>.CORE_NC_CBS_ACCOUNTS CNCA  inner join NPSS_TRANSACTIONS NT on   CNCA.ALTERNATE_ACCOUNT_ID = NT.CDTR_IBAN)V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_36$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671083490962_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1671083902851~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671083490962_0$DQ$,$DQ$DS_1671083902851$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671186714687_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1671186714687_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1671186714687_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1677756429103~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671186714687_0$DQ$,$DQ$DS_1677756429103$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  uetr,  npsst_id,  NPSSTPL_ID,  dtt_code,  dt_code,  reversal_code,  STATUS,  process_status,  REVERSAL_DESCRIPTION,  CD_DESCRIPTION from  (  select   ntpl.uetr,   ntpl.NPSSTPL_ID,   nt.npsst_id,   nt.dtt_code,   nt.dt_code,   reversal_code,   ntpl.STATUS,   ntpl.process_status,   CONCAT(NTPL.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION,   CD_DESCRIPTION  from   npss_trn_process_log ntpl  inner join npss_transactions nt on   NTPL.UETR = nt.UETR   left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = NTPL.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$)V $WHERE order by NPSSTPL_ID desc limit 1$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_22$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671186714687_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1671191050037~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671186714687_0$DQ$,$DQ$DS_1671191050037$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671186714687_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1671191081541~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671186714687_0$DQ$,$DQ$DS_1671191081541$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_17$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671186714687_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671188720824~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671186714687_0$DQ$,$DQ$DS_1671188720824$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_8$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671186714687_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671187481122~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671186714687_0$DQ$,$DQ$DS_1671187481122$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   distinct UETR,   NPSSTRRD_REFNO,   PROCESS_TYPE,   CREATED_DATE,   STATUS,   PROCESS_STATUS,   PROCESS_REF_NO,   PROCESSING_SYSTEM,   TENANT_ID,   MODIFIED_DATE,   MODIFIED_DATE_UTC,   TS_ID,   LOCKED_BY,   LOCKED_BY_NAME,   CREATED_BY,   CREATED_BY_NAME,   SYSTEM_ID,   ROLE_ID,   QR_APP_ID,   VPH_APP_CODE,   QR_QUEUE_CODE,   QR_SCREEN_NAME,   QR_MENU_GROUP,   QR_MODULE,   QUEUE_DESC,   QUEUE_CODE,   Q_APP_ID,   QS_SORT_ORDER,   Q_SORT_ORDER,   DEPARTMENT_CODE,   PROCESS_GROUP,   VALUE_DATE,   DBTR_ACCT_NO,   CDTR_ACCT_NO,   CDTR_IBAN,   TRAN_REF_ID,   CLRSYSREF,   PAYMENT_ENDTOEND_ID,   INTRBK_STTLM_AMNT,   REVERSAL_AMOUNT,   CR_ACCT_IDENTIFICATION,   DBTR_IBAN  from   (   select    NTPL.UETR,    NT.PROCESS_TYPE,    NT.CREATED_DATE,    NT.STATUS,    NT.PROCESS_STATUS,    NT.PROCESSING_SYSTEM,    NT.TENANT_ID,    NT.MODIFIED_DATE,    NT.MODIFIED_DATE_UTC,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    NT.CREATED_BY,    NT.CREATED_BY_NAME,    NT.SYSTEM_ID,    QR.ROLE_ID,    QR.VPH_APP_ID as QR_APP_ID,    QR.VPH_APP_CODE,    QR.QUEUE_CODE as QR_QUEUE_CODE,    QR.SCREEN_NAME as QR_SCREEN_NAME,    QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,    QR.SCREEN_MODULE as QR_MODULE,    PQ.QUEUE_DESC,    PQ.QUEUE_CODE,    PQ.VPH_APP_ID as Q_APP_ID,    QR.SORT_ORDER as QS_SORT_ORDER,    PQ.SORT_ORDER as Q_SORT_ORDER,    NT.DEPARTMENT_CODE,    NT.PROCESS_GROUP,    NT.VALUE_DATE,    NT.DBTR_ACCT_NO,    NT.CDTR_ACCT_NO,    NT.CDTR_IBAN,    NT.TRAN_REF_ID,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.INTRBK_STTLM_AMNT,    NT.REVERSAL_AMOUNT,    NT.CR_ACCT_IDENTIFICATION,    NTPL.REVERSAL_CODE,    NTPL.NPSSTPL_ID,    NTPL.ADDITIONAL_INFO,    ntpl1. PROCESS_REF_NO,    NTPL.NPSSTRRD_REFNO,    NT.DBTR_IBAN   from    NPSS_TRANSACTIONS NT   inner join NPSS_TRN_PROCESS_LOG NTPL on    NTPL.UETR = NT.UETR   left join npss_trn_process_log ntpl1 on   ntpl1.uetr =nt.uetr and  NTPL1.STATUS = $SQ$IP_RCT_POSTING_SUCCESS$SQ$    and NTPL1.PROCESS_STATUS = $SQ$RCTCompleted$SQ$    left join TRANSACTION_SET TS on    NT.NPSST_ID = TS.TRN_ID    and NT.DTT_CODE = TS.DTT_CODE   inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on    NT.STATUS = QR.PROCESS_QUEUE_STATUS    and NT.PROCESS_STATUS = QR.QUEUE_CODE   inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on    NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW  where   PROCESS_TYPE = $SQ$OP$SQ$ $AND )V1 order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671186714687_0~E_1680525770431~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1680525952924~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671186714687_0$DQ$,$DQ$DS_1680525952924$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   distinct UETR,   NPSSTRRD_REFNO,   PROCESS_TYPE,   CREATED_DATE,   STATUS,   PROCESS_STATUS,   PROCESS_REF_NO,   PROCESSING_SYSTEM,   TENANT_ID,   MODIFIED_DATE,   MODIFIED_DATE_UTC,   TS_ID,   LOCKED_BY,   LOCKED_BY_NAME,   CREATED_BY,   CREATED_BY_NAME,   SYSTEM_ID,   ROLE_ID,   QR_APP_ID,   VPH_APP_CODE,   QR_QUEUE_CODE,   QR_SCREEN_NAME,   QR_MENU_GROUP,   QR_MODULE,   QUEUE_DESC,   QUEUE_CODE,   Q_APP_ID,   QS_SORT_ORDER,   Q_SORT_ORDER,   DEPARTMENT_CODE,   PROCESS_GROUP,   VALUE_DATE,   DBTR_ACCT_NO,   CDTR_ACCT_NO,   CDTR_IBAN,   TRAN_REF_ID,   CLRSYSREF,   PAYMENT_ENDTOEND_ID,   INTRBK_STTLM_AMNT,   REVERSAL_AMOUNT,   CR_ACCT_IDENTIFICATION,   DBTR_IBAN  from   (   select    NTPL.UETR,    NT.PROCESS_TYPE,    NT.CREATED_DATE,    NT.STATUS,    NT.PROCESS_STATUS,    NT.PROCESSING_SYSTEM,    NT.TENANT_ID,    NT.MODIFIED_DATE,    NT.MODIFIED_DATE_UTC,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    NT.CREATED_BY,    NT.CREATED_BY_NAME,    NT.SYSTEM_ID,    QR.ROLE_ID,    QR.VPH_APP_ID as QR_APP_ID,    QR.VPH_APP_CODE,    QR.QUEUE_CODE as QR_QUEUE_CODE,    QR.SCREEN_NAME as QR_SCREEN_NAME,    QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,    QR.SCREEN_MODULE as QR_MODULE,    PQ.QUEUE_DESC,    PQ.QUEUE_CODE,    PQ.VPH_APP_ID as Q_APP_ID,    QR.SORT_ORDER as QS_SORT_ORDER,    PQ.SORT_ORDER as Q_SORT_ORDER,    NT.DEPARTMENT_CODE,    NT.PROCESS_GROUP,    NT.VALUE_DATE,    NT.DBTR_ACCT_NO,    NT.CDTR_ACCT_NO,    NT.CDTR_IBAN,    NT.TRAN_REF_ID,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.INTRBK_STTLM_AMNT,    NT.REVERSAL_AMOUNT,    NT.CR_ACCT_IDENTIFICATION,    NTPL.REVERSAL_CODE,    NTPL.NPSSTPL_ID,    NTPL.ADDITIONAL_INFO,    ntpl1. PROCESS_REF_NO,    NTPL.NPSSTRRD_REFNO,    NT.DBTR_IBAN   from    NPSS_TRANSACTIONS NT   inner join NPSS_TRN_PROCESS_LOG NTPL on    NTPL.UETR = NT.UETR   left join npss_trn_process_log ntpl1 on   ntpl1.uetr =nt.uetr and  NTPL1.STATUS = $SQ$IP_RCT_POSTING_SUCCESS$SQ$    and NTPL1.PROCESS_STATUS = $SQ$RCTCompleted$SQ$    left join TRANSACTION_SET TS on    NT.NPSST_ID = TS.TRN_ID    and NT.DTT_CODE = TS.DTT_CODE   inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on    NT.STATUS = QR.PROCESS_QUEUE_STATUS    and NT.PROCESS_STATUS = QR.QUEUE_CODE   inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on    NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW  where   PROCESS_TYPE = $SQ$OP$SQ$ $AND )V1 order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1680525770431$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671186714687_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671188660865~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671186714687_0$DQ$,$DQ$DS_1671188660865$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_6$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1671186714687_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1671188550885~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1671186714687_0$DQ$,$DQ$DS_1671188550885$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct UETR,  NPSST_ID,  DATEMI,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  REMARKS,  REVERSAL_AMOUNT from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   NTPL.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.CR_ACCT_IDENTIFICATION,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   A.REMARKS,   A.REVERSAL_AMOUNT,   NTPL.REVERSAL_CODE,   NTPL.npsstpl_id,   NTPL.ADDITIONAL_INFO,   NTPL1.PROCESS_REF_NO,   NTPL.NPSSTRRD_REFNO  from   NPSS_TRANSACTIONS A  inner join NPSS_TRN_PROCESS_LOG NTPL on   NTPL.UETR = A.UETR   left join npss_trn_process_log ntpl1 on   ntpl1.uetr =a.uetr and  NTPL1.STATUS = $SQ$IP_RCT_POSTING_SUCCESS$SQ$    and NTPL1.PROCESS_STATUS = $SQ$RCTCompleted$SQ$   left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW where  PROCESS_TYPE = $SQ$OP$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1672490487921_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672490830459~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672490830459$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISTINCT PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS FROM  (SELECT NT.CREATED_DATE,    NT.STATUS,    NT.PROCESS_STATUS,    NT.UETR,    NT.PROCESSING_SYSTEM,    NT.TENANT_ID,    NT.MODIFIED_DATE,    NT.MODIFIED_DATE_UTC,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    NT.CREATED_BY,    NT.CREATED_BY_NAME,    NT.SYSTEM_ID,    QR.ROLE_ID,    QR.VPH_APP_ID AS QR_APP_ID,    QR.VPH_APP_CODE,    QR.QUEUE_CODE,    QR.SCREEN_NAME AS QR_SCREEN_NAME,    QR.SCREEN_MENU_GROUP AS QR_MENU_GROUP,    QR.SCREEN_MODULE AS QR_MODULE,    PQ.QUEUE_DESC,    PQ.QUEUE_CODE,    PQ.VPH_APP_ID AS Q_APP_ID,    QR.SORT_ORDER AS QS_SORT_ORDER,    PQ.SORT_ORDER AS Q_SORT_ORDER,    NT.DEPARTMENT_CODE,    NT.PROCESS_GROUP,    NT.VALUE_DATE,    NT.DBTR_ACCT_NO,    NT.CDTR_ACCT_NO,    NT.CDTR_IBAN,    NT.TRAN_REF_ID,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.INTRBK_STTLM_AMNT,    NT.PROCESS_TYPE,    NT.DBTR_IBAN   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON NT.NPSST_ID = TS.TRN_ID   AND NT.DTT_CODE = TS.DTT_CODE   INNER JOIN <TRAN_DB>.CORE_Q_STATUS_ROLES QR ON NT.STATUS = QR.PROCESS_QUEUE_STATUS   AND NT.PROCESS_STATUS = QR.QUEUE_CODE   INNER JOIN <TRAN_DB>.CORE_APP_Q_SETUP PQ ON NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE ORDER BY PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~E_1675144659777~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1675145025455~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1675145025455$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  TNPSST_ID,  VALUE_DATE,  DBTRIBAN,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  BANK_NAME,  VALUEDATEMI FROM  (SELECT NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN AS DBTRIBAN,    NT.CDTR_ACCT_NAME AS DBTRACCTNAME,    NT.CR_SORT_CODE AS DRSORTCODE,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.DBTR_IBAN AS CDTRIBAN,    NT.DBTR_ACCT_NAME AS CDTRACCTNAME,    NT.DR_SORT_CODE AS CRSORTCODE,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    CMB.BANK_NAME,    NT.NPSST_ID::text AS TNPSST_ID   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1675144659777$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~E_1672490213838~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1675145021503~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1675145021503$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  TNPSST_ID,  VALUE_DATE,  DBTRIBAN,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  VALUEDATEMI,  BANK_NAME,  CUSTOMER_POSTING_RESTRICTION_CODE,  CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,  ACCOUNT_NUMBER,  ACCOUNT_NAME,  RESTRICTION_DESC,  POSTING_RESTRICTION_CODE,  INTRBK_STTLM_CUR,  ACCOUNT_CURRENCY,  FORCE_POST_FLAG FROM  (SELECT NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN AS DBTRIBAN,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    NT.CDTR_ACCT_NAME AS DBTRACCTNAME,    NT.CR_SORT_CODE AS DRSORTCODE,    NT.CLRSYSREF,    NT.INTRBK_STTLM_CUR,    NT.PAYMENT_ENDTOEND_ID,    NT.DBTR_IBAN AS CDTRIBAN,    NT.DBTR_ACCT_NAME AS CDTRACCTNAME,    NT.DR_SORT_CODE AS CRSORTCODE,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    NT.ACCOUNT_CURRENCY,    CNCA.CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,    CNCA.CUSTOMER_POSTING_RESTRICTION_CODE,    CASE        WHEN CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$,                                              $SQ$VA.BBAN$SQ$) THEN ACCOUNT_NUMBER        ELSE NULL    END AS ACCOUNT_NUMBER,    CASE        WHEN CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$,                                              $SQ$VA.BBAN$SQ$) THEN ACCOUNT_NAME        ELSE NULL    END AS ACCOUNT_NAME,    CNCA.POSTING_RESTRICTION_CODE,    CMB.BANK_NAME,    NT.NPSST_ID::text AS TNPSST_ID,    CNCPR.RESTRICTION_ID,    CNCPR.RESTRICTION_DESC,    NT.FORCE_POST_FLAG   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   LEFT JOIN <TRAN_DB>.CORE_NC_CBS_ACCOUNTS CNCA ON NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$   LEFT JOIN <TRAN_DB>.CORE_NC_POST_RESTRICTIONS CNCPR ON CNCPR.RESTRICTION_ID = CNCA.POSTING_RESTRICTION_CODE) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1672490213838$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~E_1675144601561~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1675144852048~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1675144852048$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  CDTR_IBAN,  CDTR_ACCT_NAME,  PROCESS_REF_NO,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  VALUEDATEMI,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE FROM  (SELECT NT.DISPUTE_REF_NO,    NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN,    NT.CDTR_ACCT_NAME,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.INTRBK_STTLM_CUR,    NT.INTRBK_STTLM_AMNT,    NT.DBTR_IBAN,    NT.DBTR_ACCT_NAME,    NT.DR_SORT_CODE,    NT.CR_SORT_CODE,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    CMB.BANK_NAME,    NTPL.PROCESS_REF_NO,    NTPL.CHARGE_AMOUNT,    NT.UETR,    NTPL.STATUS,    NTPL.PROCESS_STATUS,    TO_CHAR(NT.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    NT.DEPARTMENT_CODE,    NT.NPSST_ID::text AS TNPSST_ID   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$   LEFT JOIN <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL ON NT.UETR = NTPL.UETR) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1675144601561$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1672491616867~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491616867$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672491462446~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491462446$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1672491568508~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491568508$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~E_1672490155998~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1675144805481~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1675144805481$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  CDTR_IBAN,  CDTR_ACCT_NAME,  CURRENCY,  PROCESS_REF_NO,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  VALUEDATEMI,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE,  GM_MARGIN,  EXCHANGE_RATE,  TRAN_CHARGE FROM  (SELECT NT.DISPUTE_REF_NO,    NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN,    NT.CDTR_ACCT_NAME,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.INTRBK_STTLM_CUR,    NT.INTRBK_STTLM_AMNT,    NT.DBTR_IBAN,    NT.DBTR_ACCT_NAME,    NT.DR_SORT_CODE,    NT.CR_SORT_CODE,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    CNCA.CURRENCY,    CMB.BANK_NAME,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    NTPL.PROCESS_REF_NO,    NTPL.CHARGE_AMOUNT,    NT.UETR,    NTPL.STATUS,    NTPL.PROCESS_STATUS,    TO_CHAR(NT.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    NT.DEPARTMENT_CODE,    NT.NPSST_ID::text AS TNPSST_ID,    PL.EXCHANGE_RATE,    PL.GM_MARGIN,    NT.TRAN_CHARGE   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   LEFT JOIN <TRAN_DB>.CORE_NC_CBS_ACCOUNTS CNCA ON NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$   LEFT JOIN <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL ON NT.UETR = NTPL.UETR   LEFT JOIN <TRAN_DB>.NPSS_TRN_PROCESS_LOG PL ON NT.UETR = PL.UETR   AND PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   AND PL.PROCESS_NAME = $SQ$Get Deal$SQ$) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1672490155998$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672491181877~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491181877$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  TRAN_INFO,  ACCOUNT_CURRENCY,  SELL_MARGIN,  SELL_RATE,  FORCE_POST_FLAG,  CUST_SPLRATE_FLAG FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.CR_ACCT_IDENTIFICATION,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.PROCESS_GROUP,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    CASE        WHEN A.DBTR_IBAN IS NULL THEN $SQ$$SQ$        ELSE A.DBTR_IBAN    END AS DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM,    A.TRAN_INFO,    A.ACCOUNT_CURRENCY,    A.SELL_MARGIN,    A.SELL_RATE,    A.FORCE_POST_FLAG,    A.CUST_SPLRATE_FLAG   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672491499750~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491499750$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1674563032639_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563747012~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563747012$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674564026543~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674564026543$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  CDTR_IBAN,  CDTR_ACCT_NAME,  CURRENCY,  PROCESS_REF_NO,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  VALUEDATEMI,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE,  GM_MARGIN,  EXCHANGE_RATE,  TRAN_CHARGE FROM  (SELECT NT.DISPUTE_REF_NO,    NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN,    NT.CDTR_ACCT_NAME,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.INTRBK_STTLM_CUR,    NT.INTRBK_STTLM_AMNT,    NT.DBTR_IBAN,    NT.DBTR_ACCT_NAME,    NT.DR_SORT_CODE,    NT.CR_SORT_CODE,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    CNCA.CURRENCY,    CMB.BANK_NAME,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    NTPL.PROCESS_REF_NO,    NTPL.CHARGE_AMOUNT,    NT.UETR,    NTPL.STATUS,    NTPL.PROCESS_STATUS,    TO_CHAR(NT.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    NT.DEPARTMENT_CODE,    NT.NPSST_ID::text AS TNPSST_ID,    PL.EXCHANGE_RATE,    PL.GM_MARGIN,    NT.TRAN_CHARGE   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   LEFT JOIN <TRAN_DB>.CORE_NC_CBS_ACCOUNTS CNCA ON NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$   LEFT JOIN <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL ON NT.UETR = NTPL.UETR   LEFT JOIN <TRAN_DB>.NPSS_TRN_PROCESS_LOG PL ON NT.UETR = PL.UETR   AND PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   AND PL.PROCESS_NAME = $SQ$Get Deal$SQ$) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~E_1680587871240~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1680591890381~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1680591890381$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  TNPSST_ID,  VALUE_DATE,  DBTRIBAN,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  BANK_NAME,  VALUEDATEMI FROM  (SELECT NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN AS DBTRIBAN,    NT.CDTR_ACCT_NAME AS DBTRACCTNAME,    NT.CR_SORT_CODE AS DRSORTCODE,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.DBTR_IBAN AS CDTRIBAN,    NT.DBTR_ACCT_NAME AS CDTRACCTNAME,    NT.DR_SORT_CODE AS CRSORTCODE,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    CMB.BANK_NAME,    NT.NPSST_ID::text AS TNPSST_ID   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1680587871240$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1674563799011~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563799011$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674564114997~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674564114997$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  TNPSST_ID,  VALUE_DATE,  DBTRIBAN,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  BANK_NAME,  CUSTOMER_POSTING_RESTRICTION_CODE,  CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,  ACCOUNT_NUMBER,  ACCOUNT_NAME,  RESTRICTION_DESC,  POSTING_RESTRICTION_CODE,  INTRBK_STTLM_CUR,  ACCOUNT_CURRENCY,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  NPSSTPL_ID,  DT_CODE,  DTT_CODE,  FORCE_POST_FLAG,  VALUEDATEMI FROM  (SELECT NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN AS DBTRIBAN,    NT.CDTR_ACCT_NAME AS DBTRACCTNAME,    NT.CR_SORT_CODE AS DRSORTCODE,    NT.CLRSYSREF,    NT.INTRBK_STTLM_CUR,    NT.PAYMENT_ENDTOEND_ID,    NT.DBTR_IBAN AS CDTRIBAN,    NT.DBTR_ACCT_NAME AS CDTRACCTNAME,    NT.DR_SORT_CODE AS CRSORTCODE,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    NT.ACCOUNT_CURRENCY,    CNCA.CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,    CNCA.CUSTOMER_POSTING_RESTRICTION_CODE,    CASE        WHEN CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$,                                              $SQ$VA.BBAN$SQ$) THEN ACCOUNT_NUMBER        ELSE NULL    END AS ACCOUNT_NUMBER,    CASE        WHEN CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$,                                              $SQ$VA.BBAN$SQ$) THEN ACCOUNT_NAME        ELSE NULL    END AS ACCOUNT_NAME,    CNCA.POSTING_RESTRICTION_CODE,    CMB.BANK_NAME,    NT.NPSST_ID::text AS TNPSST_ID,    CNCPR.RESTRICTION_ID,    CNCPR.RESTRICTION_DESC,    PL.BUY_CURRENCY,    PL.SELL_CURRENCY,    PL.CONTRA_AMOUNT,    PL.DEALT_AMOUNT,    PL.NPSSTPL_ID,    PL.DT_CODE,    PL.ADDITIONAL_INFO,    CASE        WHEN PL.STATUS = $SQ$OP_RCT_REV_DEAL_RECEIVED$SQ$ THEN $SQ$Y$SQ$        ELSE $SQ$others$SQ$    END AS STATUS,    PL.DTT_CODE,    NT.FORCE_POST_FLAG,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   LEFT JOIN <TRAN_DB>.CORE_NC_CBS_ACCOUNTS CNCA ON NT.DBTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$   LEFT JOIN <TRAN_DB>.CORE_NC_POST_RESTRICTIONS CNCPR ON CNCPR.RESTRICTION_ID = CNCA.POSTING_RESTRICTION_CODE   LEFT JOIN <TRAN_DB>.NPSS_TRN_PROCESS_LOG PL ON PL.ADDITIONAL_INFO = NT.UETR) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~E_1680587939881~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1680588471565~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1680588471565$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  CDTR_IBAN,  CDTR_ACCT_NAME,  PROCESS_REF_NO,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  VALUEDATEMI,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE FROM  (SELECT NT.DISPUTE_REF_NO,    NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN,    NT.CDTR_ACCT_NAME,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.INTRBK_STTLM_CUR,    NT.INTRBK_STTLM_AMNT,    NT.DBTR_IBAN,    NT.DBTR_ACCT_NAME,    NT.DR_SORT_CODE,    NT.CR_SORT_CODE,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    CMB.BANK_NAME,    NTPL.PROCESS_REF_NO,    NTPL.CHARGE_AMOUNT,    NT.UETR,    NTPL.STATUS,    NTPL.PROCESS_STATUS,    TO_CHAR(NT.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    NT.DEPARTMENT_CODE,    NT.NPSST_ID::text AS TNPSST_ID   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$   LEFT JOIN <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL ON NT.UETR = NTPL.UETR) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1680587939881$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563260377~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563260377$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISTINCT PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS FROM  (SELECT NT.CREATED_DATE,    NT.STATUS,    NT.PROCESS_STATUS,    NT.UETR,    NT.PROCESSING_SYSTEM,    NT.TENANT_ID,    NT.MODIFIED_DATE,    NT.MODIFIED_DATE_UTC,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    NT.CREATED_BY,    NT.CREATED_BY_NAME,    NT.SYSTEM_ID,    QR.ROLE_ID,    QR.VPH_APP_ID AS QR_APP_ID,    QR.VPH_APP_CODE,    QR.QUEUE_CODE,    QR.SCREEN_NAME AS QR_SCREEN_NAME,    QR.SCREEN_MENU_GROUP AS QR_MENU_GROUP,    QR.SCREEN_MODULE AS QR_MODULE,    PQ.QUEUE_DESC,    PQ.QUEUE_CODE,    PQ.VPH_APP_ID AS Q_APP_ID,    QR.SORT_ORDER AS QS_SORT_ORDER,    PQ.SORT_ORDER AS Q_SORT_ORDER,    NT.DEPARTMENT_CODE,    NT.PROCESS_GROUP,    NT.VALUE_DATE,    NT.DBTR_ACCT_NO,    NT.CDTR_ACCT_NO,    NT.CDTR_IBAN,    NT.TRAN_REF_ID,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.INTRBK_STTLM_AMNT,    NT.PROCESS_TYPE,    NT.DBTR_IBAN   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON NT.NPSST_ID = TS.TRN_ID   AND NT.DTT_CODE = TS.DTT_CODE   INNER JOIN <TRAN_DB>.CORE_Q_STATUS_ROLES QR ON NT.STATUS = QR.PROCESS_QUEUE_STATUS   AND NT.PROCESS_STATUS = QR.QUEUE_CODE   INNER JOIN <TRAN_DB>.CORE_APP_Q_SETUP PQ ON NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE ORDER BY PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563555106~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563555106$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  TRAN_INFO,  ACCOUNT_CURRENCY,  SELL_MARGIN,  SELL_RATE,  FORCE_POST_FLAG,  CUST_SPLRATE_FLAG FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.CR_ACCT_IDENTIFICATION,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.PROCESS_GROUP,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    CASE        WHEN A.DBTR_IBAN IS NULL THEN $SQ$$SQ$        ELSE A.DBTR_IBAN    END AS DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM,    A.TRAN_INFO,    A.ACCOUNT_CURRENCY,    A.SELL_MARGIN,    A.SELL_RATE,    A.FORCE_POST_FLAG,    A.CUST_SPLRATE_FLAG   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1674563911672~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563911672$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~E_1672490213838~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1680591058937~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1680591058937$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  TNPSST_ID,  VALUE_DATE,  DBTRIBAN,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  VALUEDATEMI,  BANK_NAME,  CUSTOMER_POSTING_RESTRICTION_CODE,  CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,  ACCOUNT_NUMBER,  ACCOUNT_NAME,  RESTRICTION_DESC,  POSTING_RESTRICTION_CODE,  INTRBK_STTLM_CUR,  ACCOUNT_CURRENCY,  FORCE_POST_FLAG FROM  (SELECT NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN AS DBTRIBAN,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    NT.CDTR_ACCT_NAME AS DBTRACCTNAME,    NT.CR_SORT_CODE AS DRSORTCODE,    NT.CLRSYSREF,    NT.INTRBK_STTLM_CUR,    NT.PAYMENT_ENDTOEND_ID,    NT.DBTR_IBAN AS CDTRIBAN,    NT.DBTR_ACCT_NAME AS CDTRACCTNAME,    NT.DR_SORT_CODE AS CRSORTCODE,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    NT.ACCOUNT_CURRENCY,    CNCA.CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,    CNCA.CUSTOMER_POSTING_RESTRICTION_CODE,    CASE        WHEN CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$,                                              $SQ$VA.BBAN$SQ$) THEN ACCOUNT_NUMBER        ELSE NULL    END AS ACCOUNT_NUMBER,    CASE        WHEN CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$,                                              $SQ$VA.BBAN$SQ$) THEN ACCOUNT_NAME        ELSE NULL    END AS ACCOUNT_NAME,    CNCA.POSTING_RESTRICTION_CODE,    CMB.BANK_NAME,    NT.NPSST_ID::text AS TNPSST_ID,    CNCPR.RESTRICTION_ID,    CNCPR.RESTRICTION_DESC,    NT.FORCE_POST_FLAG   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   LEFT JOIN <TRAN_DB>.CORE_NC_CBS_ACCOUNTS CNCA ON NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$   LEFT JOIN <TRAN_DB>.CORE_NC_POST_RESTRICTIONS CNCPR ON CNCPR.RESTRICTION_ID = CNCA.POSTING_RESTRICTION_CODE) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1672490213838$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563699965~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563699965$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~E_1672490155998~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1680588169381~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1680588169381$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  CDTR_IBAN,  CDTR_ACCT_NAME,  CURRENCY,  PROCESS_REF_NO,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  VALUEDATEMI,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE,  GM_MARGIN,  EXCHANGE_RATE,  TRAN_CHARGE FROM  (SELECT NT.DISPUTE_REF_NO,    NT.NPSST_ID,    NT.VALUE_DATE,    NT.CDTR_IBAN,    NT.CDTR_ACCT_NAME,    NT.CLRSYSREF,    NT.PAYMENT_ENDTOEND_ID,    NT.INTRBK_STTLM_CUR,    NT.INTRBK_STTLM_AMNT,    NT.DBTR_IBAN,    NT.DBTR_ACCT_NAME,    NT.DR_SORT_CODE,    NT.CR_SORT_CODE,    NT.CR_ACCT_IDENTIFICATION,    NT.DBTR_ACCT_NO,    CNCA.CURRENCY,    CMB.BANK_NAME,    TO_CHAR(NT.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    NTPL.PROCESS_REF_NO,    NTPL.CHARGE_AMOUNT,    NT.UETR,    NTPL.STATUS,    NTPL.PROCESS_STATUS,    TO_CHAR(NT.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    NT.DEPARTMENT_CODE,    NT.NPSST_ID::text AS TNPSST_ID,    PL.EXCHANGE_RATE,    PL.GM_MARGIN,    NT.TRAN_CHARGE   FROM <TRAN_DB>.NPSS_TRANSACTIONS NT   LEFT JOIN <TRAN_DB>.CORE_NC_CBS_ACCOUNTS CNCA ON NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID   INNER JOIN <TRAN_DB>.CORE_MEMBER_BANKS CMB ON NT.DR_SORT_CODE = CMB.BIC_CODE   AND CMB.NEED_SYNC = $SQ$Y$SQ$   LEFT JOIN <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL ON NT.UETR = NTPL.UETR   LEFT JOIN <TRAN_DB>.NPSS_TRN_PROCESS_LOG PL ON NT.UETR = PL.UETR   AND PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   AND PL.PROCESS_NAME = $SQ$Get Deal$SQ$) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1672490155998$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676293893278_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1676293893278_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1676293893278_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1676296002978~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676293893278_0$DQ$,$DQ$DS_1676296002978$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_8$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676293893278_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1676295338480~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676293893278_0$DQ$,$DQ$DS_1676295338480$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.VALUE_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   NTPL.PROCESS_NAME,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.PROCESS_GROUP,   NT.INTRBK_STTLM_AMNT,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.CR_ACCT_IDENTIFICATION ,   NT.CDTR_ACCT_NO ,   NT.CDTR_IBAN ,   NT.DBTR_ACCT_NO ,   NT.DBTR_IBAN,   NT.TRAN_REF_ID,   NT.PROCESS_TYPE  from   NPSS_TRANSACTIONS NT  inner join (   select    UETR,    PROCESS_NAME,    STATUS,    PROCESS_STATUS,    NPSSTPL_ID,    ROW_NUM   from    (    select     UETR,     PROCESS_NAME,     STATUS,     PROCESS_STATUS,     NPSSTPL_ID,     row_number() over(partition by UETR    order by     NPSSTPL_ID desc) as ROW_NUM    from     npss_trn_process_log) pl   WHERE    PL.ROW_NUM = 1    and PL.PROCESS_NAME = $SQ$Place Pacs028$SQ$) ntpl on   ntpl.uetr = nt.uetr  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  INNER join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  INNER join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676293893278_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1676294645842~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676293893278_0$DQ$,$DQ$DS_1676294645842$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_17$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676293893278_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1676295830946~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676293893278_0$DQ$,$DQ$DS_1676295830946$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  MODIFIED_DATE_UTC,  DATEMI,  VALUE_DATE,  CBS_REF_NO,  CREATED_DATE,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  INTRBK_STTLM_AMNT,  INTRBK_STTLM_CUR,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  TRAN_REF_ID,  EXHF_ID,  PROCESS_STATUS,  STATUS,  TENANT_ID,  DT_CODE,  DTT_CODE,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DEPARTMENT_CODE,  PROCESS_GROUP,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  ACCP_DATE_TIME,  PROCESSING_SYSTEM,  PROCESS_NAME from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.CBS_REF_NO,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.CR_ACCT_IDENTIFICATION,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PROCESS_GROUP,   A.PAYMENT_ENDTOEND_ID,   A.ACCP_DATE_TIME,   A.TRAN_REF_ID,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.STATUS,   A.TENANT_ID,   A.DT_CODE,   A.DTT_CODE,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   NTPL.PROCESS_NAME  from   NPSS_TRANSACTIONS A  inner join (   select    UETR,    PROCESS_NAME,    STATUS,    PROCESS_STATUS,    NPSSTPL_ID,    ROW_NUM   from    (    select     UETR,     PROCESS_NAME,     STATUS,     PROCESS_STATUS,     NPSSTPL_ID,     row_number() over(partition by UETR    order by     NPSSTPL_ID desc) as ROW_NUM    from     npss_trn_process_log) pl   where    PL.ROW_NUM = 1    and PL.PROCESS_NAME = $SQ$Place Pacs028$SQ$) ntpl on   ntpl.uetr = A.uetr  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676293893278_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1676295980317~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676293893278_0$DQ$,$DQ$DS_1676295980317$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_6$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676293893278_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1676294750354~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676293893278_0$DQ$,$DQ$DS_1676294750354$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676466045419_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1676466045419_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1676466045419_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1676521960612~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676466045419_0$DQ$,$DQ$DS_1676521960612$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676466045419_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1676522079512~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676466045419_0$DQ$,$DQ$DS_1676522079512$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_5$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676466045419_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1676521806537~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676466045419_0$DQ$,$DQ$DS_1676521806537$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  process_name,  cbuae_return_code,  PL_CHARGE_AMOUNT,  PL_STATUS from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.CR_ACCT_IDENTIFICATION,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   NTPL.process_name,   NTPL.cbuae_return_code,   PL.charge_amount as PL_CHARGE_AMOUNT,   PL.status as PL_STATUS  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  inner join NPSS_TRN_PROCESS_LOG NTPL on   NTPL.UETR = A.UETR   and NTPL.STATUS = A.STATUS  left join NPSS_TRN_PROCESS_LOG PL on   PL.UETR = A.UETR   and PL.STATUS = $SQ$IP_RCT_POSTING_FAILURE$SQ$  order by   A.NPSST_ID desc ) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676466045419_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1676521944468~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676466045419_0$DQ$,$DQ$DS_1676521944468$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676466045419_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1676527658288~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676466045419_0$DQ$,$DQ$DS_1676527658288$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676466045419_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1676897847703~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676466045419_0$DQ$,$DQ$DS_1676897847703$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1676466045419_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1676473125253~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1676466045419_0$DQ$,$DQ$DS_1676473125253$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,NT.CR_ACCT_IDENTIFICATION,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.PROCESS_TYPE,   NT.DBTR_IBAN,   NTPL.process_name,   NTPL.cbuae_return_code,   PL.charge_amount as PL_CHARGE_AMOUNT,   PL.status as PL_STATUS  from   NPSS_TRANSACTIONS NT  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE   inner join NPSS_TRN_PROCESS_LOG NTPL on   NTPL.UETR = NT.UETR   and NTPL.STATUS = NT.STATUS  left join NPSS_TRN_PROCESS_LOG PL on   PL.UETR = NT.UETR and PL.STATUS = $SQ$IP_RCT_POSTING_FAILURE$SQ$ ) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1678779853154_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678866701508~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866701508$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_26$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678866785078~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866785078$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_27$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1678866570423~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866570423$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_15$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679038709562~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679039315939~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679039315939$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Place Pacs004$SQ$ then $SQ$pacs.004$SQ$   end as type,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$)    and nt.process_type = $SQ$OP$SQ$ then $SQ$Total$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$)    and nt.process_type = $SQ$OP$SQ$ then $SQ$Total$SQ$    when ntpl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_type = $SQ$IP$SQ$ then $SQ$Total$SQ$    else $SQ$OTHER$SQ$   end as Pending_Detais_OP  from   npss_transactions nt  inner join (SELECT DISTINCT z.process_name,                z.created_date,                     z.uetr                    FROM npss_trn_process_log z                   WHERE to_date(to_char(z.created_date, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE AND (z.process_name in ($SQ$Place Pacs008$SQ$,$SQ$Place Pacs.007$SQ$,$SQ$Place Pacs004$SQ$,$SQ$PACS.008$SQ$,$SQ$PACS.007$SQ$))) ntpl on   ntpl.uetr = nt.uetr   and to_date(to_char(nt.created_date ,   $SQ$yyyy-mm-dd$SQ$ ),   $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   ntpl.process_name,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Place Pacs004$SQ$ then $SQ$pacs.004$SQ$   end as type,   case    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$IBMB$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$IBMB$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$IBMB$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$RMB$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$RMB$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$RMB$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$RIB$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$RIB$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$RIB$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$CMB$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$CMB$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$CMB$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$CIB$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$CIB$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$CIB$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$CMS$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$CMS$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$CMS$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$NFR$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$NFR$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$NFR$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$CMSCMS$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$CMSCMS$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$CMSCMS$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$IPP$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$IPP$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$IPP$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$CMSINF$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$CMSINF$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$CMSINF$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$MOB$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$MOB$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$MOB$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$MBL$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$MBL$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$MBL$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$CMSCMD$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$CMSCMD$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$CMSCMD$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$IB$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$IB$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$IB$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$RIBINF$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$RIBINF$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$RIBINF$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$AANI$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$AANI$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$AANI$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$GCN$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$GCN$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))) then $SQ$GCN$SQ$    else $SQ$OTHER$SQ$   end as Pending_Detais_OP  from   npss_transactions nt  inner join (SELECT DISTINCT z.process_name,                z.created_date,                     z.uetr                    FROM npss_trn_process_log z                   WHERE to_date(to_char(z.created_date, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE AND (z.process_name in ($SQ$Place Pacs008$SQ$,$SQ$Place Pacs.007$SQ$,$SQ$Place Pacs004$SQ$,$SQ$PACS.008$SQ$,$SQ$PACS.007$SQ$))) ntpl on   ntpl.uetr = nt.uetr   and to_date(to_char(nt.created_date ,   $SQ$yyyy-mm-dd$SQ$ ),   $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   ntpl.process_name,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Place Pacs004$SQ$ then $SQ$pacs.004$SQ$   end as type,   case    when nt.process_type::text = $SQ$OP$SQ$::text     and ntpl.process_name::text = $SQ$Place Pacs008$SQ$     and nt.status in ($SQ$OP_P2B_PAYMENT_INITIATED$SQ$, $SQ$OP_P2P_PAYMENT_INITIATED$SQ$) then $SQ$Manual$SQ$     when nt.process_type::text = $SQ$OP$SQ$::text      and ntpl.process_name::text = $SQ$Place Pacs.007$SQ$      and nt.status in ($SQ$OP_AC_REV_MAN_CLOSED$SQ$) then $SQ$Manual$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_OP    from     npss_transactions nt    inner join (SELECT DISTINCT z.process_name,                z.created_date,                     z.uetr                    FROM npss_trn_process_log z                   WHERE to_date(to_char(z.created_date, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE AND (z.process_name in ($SQ$Place Pacs008$SQ$,$SQ$Place Pacs.007$SQ$,$SQ$Place Pacs004$SQ$,$SQ$PACS.008$SQ$,$SQ$PACS.007$SQ$))) ntpl on     ntpl.uetr = nt.uetr     and to_date(to_char(nt.created_date ,     $SQ$yyyy-mm-dd$SQ$ ),     $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   ntpl.process_name,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Place Pacs004$SQ$ then $SQ$pacs.004$SQ$   end as type,   case    when nt.process_type::text = $SQ$OP$SQ$::text     and ((ntpl.process_name = $SQ$Place Pacs008$SQ$      and nt.status in ($SQ$OP_P2P_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REQ_RECEIVED$SQ$, $SQ$OP_AC_REQ_INVEST_INITIATED$SQ$))      or nt.process_type::text = $SQ$IP$SQ$::text      and (ntpl.process_name = $SQ$Place Pacs004$SQ$       and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_SUSPICIOUS$SQ$))       or nt.process_type::text = $SQ$OP$SQ$::text       and (ntpl.process_name = $SQ$Place Pacs.007$SQ$        and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_AC_REV_POSTING_SUSPICIOUS$SQ$, $SQ$OP_P2P_REV_POSTING_SUSPICIOUS$SQ$))) then $SQ$Pending (Maker)$SQ$     when nt.process_type::text = $SQ$OP$SQ$::text      and ((ntpl.process_name = $SQ$Place Pacs008$SQ$       and nt.process_status = $SQ$RCTExceptionFailure$SQ$       and nt.status in ($SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$, $SQ$OP_RCT_MAN_APPROVED$SQ$))       or nt.process_type::text = $SQ$IP$SQ$::text       and (ntpl.process_name = $SQ$Place Pacs004$SQ$        and nt.process_status = $SQ$RCTExceptionFailure$SQ$        and nt.status in ($SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_RR_POSTING_SUCCESS$SQ$))        or nt.process_type::text = $SQ$OP$SQ$::text        and (ntpl.process_name = $SQ$Place Pacs.007$SQ$         and nt.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$, $SQ$OP_REVERSAL_REQ_APPROVED$SQ$, $SQ$OP_AC_REV_FP_INITIATED$SQ$, $SQ$OP_RCT_RET_RESERVED$SQ$))) then $SQ$Pending (Checker)$SQ$      when nt.process_type::text = $SQ$OP$SQ$::text       and ntpl.process_name = $SQ$Place Pacs008$SQ$       and nt.status in ($SQ$OP_P2B_FILE_PLACED$SQ$, $SQ$OP_AC_FILE_PLACED$SQ$) then $SQ$SEND TO CB$SQ$       when nt.process_type::text = $SQ$IP$SQ$::text        and ntpl.process_name = $SQ$Place Pacs004$SQ$        and nt.status in ($SQ$IP_RCT_RETURNED$SQ$, $SQ$IP_RCT_REVREQ_REJ_REPLIED$SQ$, $SQ$IP_RCT_RR_RETURNED$SQ$) then $SQ$SEND TO CB$SQ$        when nt.process_type::text = $SQ$OP$SQ$::text         and ntpl.process_name = $SQ$Place Pacs008$SQ$         and nt.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$, $SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_RCT_REVERSAL_REJECTED$SQ$, $SQ$OP_P2B_STATUS_ACCEPTED$SQ$, $SQ$OP_AC_STATUS_ACCEPTED$SQ$, $SQ$OP_P2P_STATUS_ACCEPTED$SQ$, $SQ$OP_RETURNED$SQ$) then $SQ$CBACK$SQ$         when nt.process_type::text = $SQ$IP$SQ$::text          and ntpl.process_name = $SQ$Place Pacs004$SQ$          and nt.status in ($SQ$IP_RCT_RETURN_COMPLETED$SQ$, $SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_SUCCESS$SQ$) then $SQ$CBACK$SQ$          when nt.process_type::text = $SQ$OP$SQ$::text           and ntpl.process_name = $SQ$Place Pacs008$SQ$           and nt.status in ($SQ$OP_P2P_REV_POSTING_SUCCESS$SQ$, $SQ$OP_P2B_REV_POSTING_SUCCESS$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_STATUS_REJECTED$SQ$, $SQ$OP_AC_REV_POSTING_SUCCESS$SQ$, $SQ$OP_P2P_STATUS_REJECTED$SQ$, $SQ$OP_P2B_STATUS_REJECTED$SQ$) then $SQ$CBNACK$SQ$           when nt.process_type::text = $SQ$IP$SQ$::text            and ntpl.process_name = $SQ$Place Pacs004$SQ$            and nt.status in ($SQ$IP_RCT_RETURN_REJECTED$SQ$, $SQ$IP_RCT_STATUS_RECEIVED$SQ$) then $SQ$CBNACK$SQ$            when nt.process_type::text = $SQ$OP$SQ$::text             and ntpl.process_name = $SQ$Place Pacs.007$SQ$             and nt.status in ($SQ$OP_RCT_REVERSAL_REJECTED$SQ$) then $SQ$CBNACK$SQ$             else $SQ$OTHER$SQ$            end as Pending_Detais_OP           from            npss_transactions nt           inner join (SELECT DISTINCT z.process_name,                z.created_date,                     z.uetr                    FROM npss_trn_process_log z                   WHERE to_date(to_char(z.created_date, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE AND (z.process_name in ($SQ$Place Pacs008$SQ$,$SQ$Place Pacs.007$SQ$,$SQ$Place Pacs004$SQ$,$SQ$PACS.008$SQ$,$SQ$PACS.007$SQ$))) ntpl on            ntpl.uetr = nt.uetr            and to_date(to_char(nt.created_date ,            $SQ$yyyy-mm-dd$SQ$ ),            $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   ntpl.process_name,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Place Pacs004$SQ$ then $SQ$pacs.004$SQ$   end as type,   case    when nt.process_type::text = $SQ$OP$SQ$::text     and (ntpl.process_name = $SQ$Place Pacs008$SQ$      and nt.status in ($SQ$OP_P2P_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REQ_INVEST_INITIATED$SQ$, $SQ$OP_AC_REQ_RECEIVED$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$, $SQ$OP_RCT_MAN_APPROVED$SQ$)) then $SQ$Pending (T-1)$SQ$     when nt.process_type::text = $SQ$IP$SQ$::text      and (ntpl.process_name = $SQ$Place Pacs004$SQ$       and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_RR_POSTING_SUCCESS$SQ$)) then $SQ$Pending (T-1)$SQ$      when nt.process_type::text = $SQ$OP$SQ$::text       and (ntpl.process_name = $SQ$Place Pacs.007$SQ$        and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_AC_REV_POSTING_SUSPICIOUS$SQ$, $SQ$OP_P2P_REV_POSTING_SUSPICIOUS$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$, $SQ$OP_REVERSAL_REQ_APPROVED$SQ$, $SQ$OP_AC_REV_FP_INITIATED$SQ$, $SQ$OP_RCT_RET_RESERVED$SQ$)) then $SQ$Pending (T-1)$SQ$       else $SQ$OTHER$SQ$      end as Pending_Detais_OP     from      (      select       a.npsst_id,       a.department_code ,       a.UETR,       a.created_date ,       a.process_type ,       a.intrbk_sttlm_cur ,       a.intrbk_sttlm_amnt ,       a.cdtr_iban ,       a.cr_acct_identification ,       a.payment_endtoend_id,       a.channel_refno,       a.dbtr_iban,       a.tenant_id,       a.status,       a.process_status      from       npss_transactions a      where       to_date(to_char(a.created_date ,       $SQ$yyyy-mm-dd$SQ$ ),       $SQ$yyyy-mm-dd$SQ$ ) < current_date        and a.status in ($SQ$OP_P2P_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REQ_INVEST_INITIATED$SQ$, $SQ$OP_AC_REQ_RECEIVED$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$, $SQ$OP_RCT_MAN_APPROVED$SQ$, $SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_RR_POSTING_SUCCESS$SQ$, $SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_AC_REV_POSTING_SUSPICIOUS$SQ$, $SQ$OP_P2P_REV_POSTING_SUSPICIOU S$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$, $SQ$OP_REVERSAL_REQ_APPROVED$SQ$, $SQ$OP_AC_REV_FP_INITIATED$SQ$, $SQ$OP_RCT_RET_RESERVED$SQ$)) nt     inner join (      select       distinct z1.process_name,       z1.created_date,       z1.uetr      from       npss_trn_process_log z1      where       to_date(to_char(z1.created_date,       $SQ$yyyy-mm-dd$SQ$),       $SQ$yyyy-mm-dd$SQ$) < CURRENT_DATE        and z1.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs004$SQ$, $SQ$Place Pacs.007$SQ$)) ntpl on      ntpl.uetr = nt.uetr ) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679038709562$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678787742404~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678787742404$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESS_STATUS) as PROCESS_STATUS_COUNT,  PROCESS_TYPE,  PROCESS_STATUS,  createddate from  (  select   T.CREATED_DATE,   T.PROCESS_TYPE ,   T.TENANT_ID,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS,   to_date(to_char(t.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) as createddate  from   NPSS_TRANSACTIONS T where to_date(to_char(T.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) V $WHERE group by  PROCESS_STATUS,  PROCESS_TYPE,  createddate$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_13$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679038751136~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679039201469~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679039201469$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  npsst_id,  uetr,  CREATED_DATE,  PROCESS_TYPE,  PROCESS_STATUS,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  dbtr_iban,  DATEMI,  createddate,  payment_endtoend_id,  channel_refno from  (  select   t.npsst_id,   t.uetr,   T.CREATED_DATE,   TO_CHAR(T.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   T.PROCESS_TYPE ,   T.TENANT_ID,   t.intrbk_sttlm_cur ,   t.intrbk_sttlm_amnt ,   t.cdtr_iban ,   t.cr_acct_identification ,   t.dbtr_iban ,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS,   to_date(to_char(t.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) as createddate,   t.payment_endtoend_id,   t.channel_refno  from   NPSS_TRANSACTIONS T  where   to_date(to_char(T.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679038751136$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1681974282490~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681974282490$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  X.Pending_Detais,  X.p_count,  X.TYPE from  (  select   A.type,   case    when A.type = $SQ$pacs.008$SQ$    and b.sno is null then 1    when A.type = $SQ$pacs.004$SQ$    and b.sno is null then 2    when A.type = $SQ$pacs.007$SQ$    and b.sno is null then 3    else b.sno   end sno,   coalesce(b.total, 0) as total,   coalesce(b.Pending_Screening, 0) as Pending_Screening,   coalesce(b.PENDING_MAKER, 0) as PENDING_MAKER,   coalesce(b.PENDING_CHECKER, 0) as PENDING_CHECKER,   coalesce(b.payment_rejected, 0) as payment_rejected,   coalesce(b.successfullyposted, 0) as successfullyposted,   coalesce(b.pending_returns_maker, 0) as pending_returns_maker,   coalesce(b.pending_returns_checker, 0) as pending_returns_checker,   coalesce(b.returned, 0) as returned,   coalesce(b.Pending_T_1, 0) as Pending_T_1,   to_char(CURRENT_DATE::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text)::timestamp without time zone as created_date  from   (   select    $SQ$pacs.008$SQ$ as type  union   select    $SQ$pacs.004$SQ$ as type  union   select    $SQ$pacs.007$SQ$ as type) A  left join (   select    sno,    type,    sum(total) as total,    sum(pending_maker) as pending_maker,    sum(pending_checker) as pending_checker,    sum(payment_rejected) as payment_rejected,    sum(pending_screening) as pending_screening,    sum(successfullyposted) as successfullyposted,    sum(pending_returns_maker) as pending_returns_maker,    sum(pending_returns_checker) as pending_returns_checker,    sum(returned) as returned,    sum(pending_t_1) as pending_t_1,    created_date   from    (    select     sno,     type,     total,     pending_maker,     pending_checker,     payment_rejected,     pending_screening,     successfullyposted,     pending_returns_maker,     pending_returns_checker,     returned,     pending_t_1,     created_date,     DEPARTMENT_CODE,     TENANT_ID    from     npss_vw_dashboard_inward_data) T $WHERE   group by    SNO,    type,    CREATED_DATE) B on   B.type = A.type  order by   sno ) AB cross join lateral( values ($SQ$Total$SQ$, AB.total, AB.TYPE), ($SQ$Pending Screening$SQ$, AB.Pending_Screening, AB.TYPE), ($SQ$Pending (Maker)$SQ$, AB.PENDING_MAKER, AB.TYPE), ($SQ$Pending (Checker)$SQ$, AB.PENDING_CHECKER, AB.TYPE), ($SQ$Payment Rejected$SQ$, AB.payment_rejected, AB.TYPE), ($SQ$successfullyposted$SQ$, AB.successfullyposted, AB.TYPE), ($SQ$pending returns maker$SQ$, AB.pending_returns_maker, AB.TYPE), ($SQ$pending returns checker$SQ$, AB.pending_returns_checker, AB.TYPE), ($SQ$returned$SQ$, AB.returned, AB.TYPE), ($SQ$Pending (T-1)$SQ$, AB.Pending_T_1, AB.TYPE)) X (Pending_Detais,  p_count,  type ) where  p_count not in ($SQ$0$SQ$)$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_38$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679651226917~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679651486228~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679651486228$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when ntpl.process_name in ($SQ$Receive Pacs008$SQ$)    and nt.process_type = $SQ$IP$SQ$ then $SQ$Total$SQ$    when ntpl.process_name in ($SQ$Receive Pacs.007$SQ$)    and nt.process_type = $SQ$IP$SQ$ then $SQ$Total$SQ$    when ntpl.process_name in ($SQ$Receive Pacs004$SQ$)    and nt.process_type = $SQ$OP$SQ$ then $SQ$Total$SQ$    else $SQ$OTHER$SQ$   end as Pending_Detais_IP  from   npss_transactions nt  inner join (   select    distinct z.process_name,    z.created_date,    z.uetr   from    npss_trn_process_log z   where    to_date(to_char(z.created_date,    $SQ$yyyy-mm-dd$SQ$::text),    $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE    and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on   ntpl.uetr = nt.uetr   and to_date(to_char(nt.created_date ,   $SQ$yyyy-mm-dd$SQ$ ),   $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_ip <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and NT.STATUS = $SQ$IP_RCT_RECEIVED$SQ$ then $SQ$Pending Screening$SQ$     else $SQ$OTHER$SQ$    end as Pending_Detais_IP   from    npss_transactions nt   inner join (    select     distinct z.process_name,     z.created_date,     z.uetr    from     npss_trn_process_log z    where     to_date(to_char(z.created_date,     $SQ$yyyy-mm-dd$SQ$::text),     $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE      and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on    ntpl.uetr = nt.uetr     and to_date(to_char(nt.created_date ,     $SQ$yyyy-mm-dd$SQ$ ),     $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$OP$SQ$     and ntpl.process_name = $SQ$Receive Pacs004$SQ$     and nt.status = $SQ$OP_AC_RET_RECEIVED$SQ$ then $SQ$returned$SQ$     when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs.007$SQ$     and nt.status = $SQ$IP_RCT_RR_RETURNED$SQ$ then $SQ$returned$SQ$     when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and nt.status in ($SQ$IP_RCT_RETURN_COMPLETED$SQ$, $SQ$IP_BCT_RETURN_FILE_UPLOADED$SQ$, $SQ$IP_RCT_MANUAL_RETURNED$SQ$, $SQ$IP_RCT_RETURNED$SQ$) then $SQ$returned$SQ$     else $SQ$OTHER$SQ$    end as Pending_Detais_IP   from    npss_transactions nt   inner join (    select     distinct z.process_name,     z.created_date,     z.uetr    from     npss_trn_process_log z    where     to_date(to_char(z.created_date,     $SQ$yyyy-mm-dd$SQ$::text),     $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE      and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on    ntpl.uetr = nt.uetr     and to_date(to_char(nt.created_date ,     $SQ$yyyy-mm-dd$SQ$ ),     $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and nt.status in ($SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_CC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUCCESS$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_POSTING_FAILURE$SQ$) then $SQ$Pending (Maker)$SQ$     when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs004$SQ$      and nt.status = $SQ$OP_AC_RET_POSTING_FAILURE$SQ$ then $SQ$Pending (Maker)$SQ$      when nt.process_type = $SQ$IP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.007$SQ$      and (nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$)) then $SQ$Pending (Maker)$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_IP    from     npss_transactions nt    inner join (     select      distinct z.process_name,      z.created_date,      z.uetr     from      npss_trn_process_log z     where      to_date(to_char(z.created_date,      $SQ$yyyy-mm-dd$SQ$::text),      $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE       and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on     ntpl.uetr = nt.uetr      and to_date(to_char(nt.created_date ,      $SQ$yyyy-mm-dd$SQ$ ),      $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and nt.status in ($SQ$IP_RCT_POSTING_RETRY$SQ$, $SQ$IP_RCT_AUTO_POSTING_INITIATED$SQ$, $SQ$IP_RCT_POSTING_REPOST$SQ$) then $SQ$Pending (Checker)$SQ$     when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs004$SQ$      and (nt.status = $SQ$OP_AC_RET_POSTING_RETRY$SQ$ ) then $SQ$Pending (Checker)$SQ$      when nt.process_type = $SQ$IP$SQ$       and ntpl.process_name = $SQ$Receive Pacs.007$SQ$       and (nt.status in ($SQ$IP_RCT_RR_RETURN_READY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_POSTING_FAILURE$SQ$)) then $SQ$Pending (Checker)$SQ$       else $SQ$OTHER$SQ$      end as Pending_Detais_IP     from      npss_transactions nt     inner join (      select       distinct z.process_name,       z.created_date,       z.uetr      from       npss_trn_process_log z      where       to_date(to_char(z.created_date,       $SQ$yyyy-mm-dd$SQ$::text),       $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE        and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on      ntpl.uetr = nt.uetr       and to_date(to_char(nt.created_date ,       $SQ$yyyy-mm-dd$SQ$ ),       $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and nt.status in ($SQ$IP_RCT_STATUS_REPLIED$SQ$, $SQ$IP_RCT_MAN_CLOSED$SQ$) then $SQ$Payment Rejected$SQ$     when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs004$SQ$      and nt.status = $SQ$OP_RCT_REVERSAL_REJECTED$SQ$ then $SQ$Payment Rejected$SQ$      when nt.process_type = $SQ$IP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.007$SQ$      and nt.status in ($SQ$IP_RCT_REVREQ_REJ_REPLIED$SQ$, $SQ$IP_RCT_RR_MAN_CLOSED$SQ$, $SQ$IP_RCT_RR_POSTING_RETRY$SQ$) then $SQ$Payment Rejected$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_IP    from     npss_transactions nt    inner join (     select      distinct z.process_name,      z.created_date,      z.uetr     from      npss_trn_process_log z     where      to_date(to_char(z.created_date,      $SQ$yyyy-mm-dd$SQ$::text),      $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE       and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on     ntpl.uetr = nt.uetr      and to_date(to_char(nt.created_date ,      $SQ$yyyy-mm-dd$SQ$ ),      $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and (nt.status = any (array[$SQ$IP_RCT_PC_T24_POSTING_SUCCESS$SQ$,     $SQ$IP_RCT_POSTING_SUCCESS$SQ$,     $SQ$IP_RCT_CC_POSTING_SUCCESS$SQ$,     $SQ$IP_RCT_ALREADY_POSTED$SQ$,     $SQ$IP_RCT_CC_T24_POSTING_SUCCESS$SQ$,     $SQ$IP_RCT_RETURN_POSTING_SUCCESS$SQ$])) then $SQ$successfullyposted$SQ$     when nt.process_type = $SQ$IP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.007$SQ$      and nt.status = $SQ$IP_RCT_RR_POSTING_SUCCESS$SQ$ then $SQ$successfullyposted$SQ$      when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.004$SQ$      and nt.status in ($SQ$OP_AC_RET_POSTING_SUCCESS$SQ$, $SQ$OP_AC_REV_POSTING_SUCCESS$SQ$, $SQ$OR_P2P_POSTING_SUCCESS$SQ$) then $SQ$successfullyposted$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_IP    from     npss_transactions nt    inner join (     select      distinct z.process_name,      z.created_date,      z.uetr     from      npss_trn_process_log z     where      to_date(to_char(z.created_date,      $SQ$yyyy-mm-dd$SQ$::text),      $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE       and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on     ntpl.uetr = nt.uetr      and to_date(to_char(nt.created_date ,      $SQ$yyyy-mm-dd$SQ$ ),      $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and (nt.status = any (array[$SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$,     $SQ$IP_RCT_RETURN_POSTING_SUCCESS$SQ$ ])) then $SQ$pending returns maker$SQ$     when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs004$SQ$      and (nt.status = any (array[$SQ$OP_AC_RET_POSTING_FAILURE$SQ$,      $SQ$OP_AC_RET_AUTO_POSTING_INITIATED$SQ$,      $SQ$OP_AC_RET_POSTING_SUSPICIOUS$SQ$,      $SQ$OR_P2P_POSTING_FAILURE$SQ$,      $SQ$OR_P2P_POSTING_SUSPICIOUS$SQ$])) then $SQ$pending returns maker$SQ$      when nt.process_type = $SQ$OP$SQ$       and ntpl.process_name = $SQ$Receive Pacs004$SQ$       and (nt.status = any (array[$SQ$OP_AC_RET_POSTING_RETRY$SQ$,       $SQ$IP_RCT_RR_POSTING_RETRY$SQ$,       $SQ$OP_AC_RET_FP_APPROVED$SQ$,       $SQ$OP_AC_RET_FP_INITIATED$SQ$,       $SQ$OP_AC_RET_MAN_CLOSED$SQ$,       $SQ$OP_AC_RET_POSTING_SUCCESS$SQ$,       $SQ$OP_AC_REV_POSTING_SUCCESS$SQ$])) then $SQ$pending returns checker$SQ$       else $SQ$OTHER$SQ$      end as Pending_Detais_IP     from      npss_transactions nt     inner join (      select       distinct z.process_name,       z.created_date,       z.uetr      from       npss_trn_process_log z      where       to_date(to_char(z.created_date,       $SQ$yyyy-mm-dd$SQ$::text),       $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE        and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on      ntpl.uetr = nt.uetr       and to_date(to_char(nt.created_date ,       $SQ$yyyy-mm-dd$SQ$ ),       $SQ$yyyy-mm-dd$SQ$ ) = current_date) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and (nt.status in ($SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_CC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUCCESS$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_POSTING_FAILURE$SQ$, $SQ$IP_RCT_POSTING_RETRY$SQ$, $SQ$IP_RCT_AUTO_POSTING_INITIATED$SQ$, $SQ$IP_RCT_POSTING_REPOST$SQ$)) then $SQ$Pending (T-1)$SQ$     when nt.process_type = $SQ$IP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.007$SQ$      and (nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_POSTING_FAILURE$SQ$)) then $SQ$Pending (T-1)$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_IP    from     npss_transactions nt    inner join ( SELECT distinct z.process_name,z.created_date,     z.uetr    FROM npss_trn_process_log z   WHERE to_date(to_char(z.created_date, $SQ$yyyy-mm-dd$SQ$), $SQ$yyyy-mm-dd$SQ$) < CURRENT_DATE AND z.process_name = $SQ$Receive Pacs008$SQ$) ntpl on     ntpl.uetr = nt.uetr     and to_date(to_char(nt.created_date::date::timestamp with time zone,     $SQ$yyyy-mm-dd$SQ$ ),     $SQ$yyyy-mm-dd$SQ$ ) < CURRENT_DATE     and NT.PROCESS_TYPE = $SQ$IP$SQ$ and nt.status in ($SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_CC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUCCESS$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_POSTING_FAILURE$SQ$, $SQ$IP_RCT_POSTING_RETRY$SQ$, $SQ$IP_RCT_AUTO_POSTING_INITIATED$SQ$, $SQ$IP_RCT_POSTING_REPOST$SQ$, $SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_POSTING_FAILURE$SQ$)) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679651226917$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678780847259~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678780847259$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  A.type,  B.PTYPE,  case   when A.type = $SQ$pacs.008$SQ$   and b.sno is null then 1   when A.type = $SQ$pacs.004$SQ$   and b.sno is null then 2   when A.type = $SQ$pacs.007$SQ$   and b.sno is null then 3   else b.sno  end sno,  coalesce(b.total, 0) as total,  coalesce(b.IBMB, 0) as IBMB,  coalesce(b.RIB, 0) as RIB,  coalesce(b.RMB, 0) as RMB,  coalesce(b.CIB, 0) as CIB,  coalesce(b.CMS, 0) as CMS,  coalesce(b.CMB, 0) as CMB,  coalesce(b.NFR, 0) as NFR,  coalesce(b.CMSCMS, 0) as CMSCMS,  coalesce(b.IPP, 0) as IPP,  coalesce(b.CMSINF, 0) as CMSINF,  coalesce(b.MOB, 0) as MOB,  coalesce(b.MBL, 0) as MBL,  coalesce(b.CMSCMD, 0) as CMSCMD,  coalesce(b.IB, 0) as IB,  coalesce(b.RIBINF, 0) as RIBINF,  coalesce(b.AANI, 0) as AANI,  coalesce(b.GCN, 0) as GCN,  coalesce(b.Manual, 0) as Manual,  coalesce(b.Pending_Screening, 0) as Pending_Screening,  coalesce(b.PENDING_MAKER, 0) as PENDING_MAKER,  coalesce(b.PENDING_CHECKER, 0) as PENDING_CHECKER,  coalesce(b.SEND_TO_CB, 0) as SEND_TO_CB,  coalesce(b.CBACK, 0) as CBACK,  coalesce(b.CBNACK, 0) as CBNACK,  coalesce(b.Pending_T_1, 0) as Pending_T_1,  to_char(CURRENT_DATE::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text)::timestamp without time zone as created_date from  (  select   $SQ$pacs.008$SQ$ as type union  select   $SQ$pacs.004$SQ$ as type union  select   $SQ$pacs.007$SQ$ as type) A left join (  select   SNO,   PTYPE,   type,   SUM(TOTAL) as Total,   SUM(IBMB) as IBMB,   SUM(RIB) as RIB,   SUM(RMB) as RMB ,   SUM(CIB) as CIB,   SUM(CMS) as CMS,   SUM(CMB) as CMB,   SUM(NFR) as NFR,   SUM(CMSCMS) as CMSCMS,   SUM(IPP) as IPP,   SUM(CMSINF) as CMSINF,   SUM(MOB) as MOB,   SUM(MBL) as MBL,   SUM(CMSCMD) as CMSCMD,   SUM(IB) as IB,   SUM(RIBINF) as RIBINF,   SUM(AANI) as AANI,   SUM(GCN) as GCN,   SUM(MANUAL) as Manual,   SUM(PENDING_SCREENING) as Pending_Screening,   SUM(PENDING_MAKER) as Pending_Maker,   SUM(PENDING_CHECKER) as Pending_Checker,   SUM(SEND_TO_CB) as Send_to_CB,   SUM(CBACK) as CBACK,   SUM(CBNACK) as CBNACK,   CREATED_DATE,   SUM(PENDING_T_1) as Pending_T_1  from   (   select    SNO,    type,    Total,    IBMB,    RIB,    RMB ,    CIB,    CMS,    CMB,    NFR,    CMSCMS,    IPP,    CMSINF,    MOB,    MBL,    CMSCMD,    IB,    RIBINF,    AANI,    GCN,    MANUAL,    PENDING_SCREENING,    PENDING_MAKER,    PENDING_CHECKER,    SEND_TO_CB,    CBACK,    CBNACK,    CREATED_DATE,    PENDING_T_1,    DEPARTMENT_CODE,    $SQ$OP$SQ$ as PTYPE   from    npss_vw_dashboard_outward_data) as t $WHERE  group by   SNO,   PTYPE,   type,   CREATED_DATE) B on  B.type = A.type order by  sno$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1681998395232~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681998395232$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  X.Pending_Detais,  x.p_count,  X.Details from  (select  details,  coalesce(sum(res.IBAN_Failures), 0::numeric) as IBAN_Failures,  coalesce(sum(res.P2P_Failures), 0::numeric) as P2P_Failures,  coalesce(sum(res.P2B_Failures), 0::numeric) as P2B_Failures from  (  select   count (case    when ntpl.status in ($SQ$OP_AC_VAL_FAILED$SQ$, $SQ$OP_AC_MAND_VAL_FAILED$SQ$, $SQ$OP_AC_DUPL_VAL_FAILED$SQ$, $SQ$OP_AC_PCODE_VAL_FAILED$SQ$, $SQ$OP_AC_PBANK_VAL_FAILED$SQ$) then ntpl.npsstpl_id    else null   end ) as IBAN_Failures,   count (case    when ntpl.status in ($SQ$OP_P2P_SENDER_IBAN_FAILED$SQ$, $SQ$OP_P2P_PAYMENT_FAILED$SQ$, $SQ$OP_P2P_POSTING_FAILURE$SQ$, $SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$) then ntpl.npsstpl_id    else null   end )as P2P_Failures,   count (case    when ntpl.status in ($SQ$OP_P2B_FUND_UNFREEZED$SQ$, $SQ$OP_P2B_PAYMENT_FAILED$SQ$, $SQ$OP_P2B_FUND_RES_FAILURE$SQ$, $SQ$OP_P2B_FUND_RES_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_FUND_UNFR_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_AUTH_FAILURE$SQ$, $SQ$OP_P2B_FUND_AUTH_SUSPICIOUS$SQ$) then ntpl.npsstpl_id    else null   end) as P2B_Failures,   ntpl.status,   ntpl.tenant_id ,   $SQ$Overlay Failures$SQ$ as details  from   npss_trn_process_log ntpl  where   to_date(to_char(ntpl.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE  group by   status,   tenant_id )res   $WHERE group by  res.details) AB cross join lateral( values ($SQ$IBAN Failures$SQ$, AB.IBAN_Failures, AB.Details), ($SQ$P2P Failures$SQ$, AB.P2P_Failures, AB.Details), ($SQ$P2B Failures$SQ$, AB.P2B_Failures, AB.Details)) X ( Pending_Detais,  p_count,  Details ) where  p_count not in ($SQ$0$SQ$)$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_41$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1681970564121~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681970564121$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  X.Pending_Detais,  x.p_count,  X.TYPE from  (  select   A.type,   case    when A.type = $SQ$pacs.008$SQ$    and b.sno is null then 1    when A.type = $SQ$pacs.004$SQ$    and b.sno is null then 2    when A.type = $SQ$pacs.007$SQ$    and b.sno is null then 3    else b.sno   end sno,   coalesce(b.TOTAL, 0) as TOTAL,   coalesce(b.IBMB, 0) as IBMB,   coalesce(b.RIB, 0) as RIB,   coalesce(b.RMB, 0) as RMB,   coalesce(b.CIB, 0) as CIB,   coalesce(b.CMS, 0) as CMS,   coalesce(b.CMB, 0) as CMB,   coalesce(b.NFR, 0) as NFR,   coalesce(b.CMSCMS, 0) as CMSCMS,   coalesce(b.IPP, 0) as IPP,   coalesce(b.CMSINF, 0) as CMSINF,   coalesce(b.MOB, 0) as MOB,   coalesce(b.MBL, 0) as MBL,   coalesce(b.CMSCMD, 0) as CMSCMD,   coalesce(b.IB, 0) as IB,   coalesce(b.RIBINF, 0) as RIBINF,   coalesce(b.AANI, 0) as AANI,   coalesce(b.GCN, 0) as GCN,   coalesce(b.Manual, 0) as Manual,   coalesce(b.Pending_Screening, 0) as Pending_Screening,   coalesce(b.PENDING_MAKER, 0) as PENDING_MAKER,   coalesce(b.PENDING_CHECKER, 0) as PENDING_CHECKER,   coalesce(b.SEND_TO_CB, 0) as SEND_TO_CB,   coalesce(b.CBACK, 0) as CBACK,   coalesce(b.CBNACK, 0) as CBNACK,   coalesce(b.Pending_T_1, 0) as Pending_T_1,   to_char(CURRENT_DATE::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text)::timestamp without time zone as created_date  from   (   select    $SQ$pacs.008$SQ$ as type  union   select    $SQ$pacs.004$SQ$ as type  union   select    $SQ$pacs.007$SQ$ as type) A  left join (   select    SNO,    type,    SUM(Total) as Total,    SUM(IBMB) as IBMB,    SUM(RIB) as RIB,    SUM(RMB) as RMB ,    SUM(CIB) as CIB,    SUM(CMS) as CMS,    SUM(CMB) as CMB,    SUM(NFR) as NFR,    SUM(CMSCMS) as CMSCMS,    SUM(IPP) as IPP,    SUM(CMSINF) as CMSINF,    SUM(MOB) as MOB,    SUM(MBL) as MBL,    SUM(CMSCMD) as CMSCMD,    SUM(IB) as IB,    SUM(RIBINF) as RIBINF,    SUM(AANI) as AANI,    SUM(GCN) as GCN,    SUM(MANUAL) as Manual,    SUM(PENDING_SCREENING) as Pending_Screening,    SUM(PENDING_MAKER) as Pending_Maker,    SUM(PENDING_CHECKER) as Pending_Checker,    SUM(SEND_TO_CB) as Send_to_CB,    SUM(CBACK) as CBACK,    SUM(CBNACK) as CBNACK,    CREATED_DATE,    SUM(PENDING_T_1) as Pending_T_1   from    (    select     SNO,     type,     Total,     IBMB,     RIB,     RMB ,     CIB,     CMS,     CMB,     NFR,     CMSCMS,     IPP,     CMSINF,     MOB,     MBL,     CMSCMD,     IB,     RIBINF,     AANI,     GCN,     MANUAL,     PENDING_SCREENING,     PENDING_MAKER,     PENDING_CHECKER,     SEND_TO_CB,     CBACK,     CBNACK,     CREATED_DATE,     PENDING_T_1,     DEPARTMENT_CODE,     TENANT_ID    from     npss_vw_dashboard_outward_data) as t $WHERE   group by    SNO,    type,    CREATED_DATE) B on   B.type = A.type  order by   sno ) AB cross join lateral( values ($SQ$TOTAL$SQ$, AB.TOTAL, AB.TYPE), ($SQ$RIB$SQ$, AB.RIB, AB.TYPE), ($SQ$IBMB$SQ$, AB.IBMB, AB.TYPE), ($SQ$RMB$SQ$, AB.RMB, AB.TYPE), ($SQ$CIB$SQ$, AB.CIB, AB.TYPE), ($SQ$CMS$SQ$, AB.CMS, AB.TYPE), ($SQ$CMB$SQ$, AB.CMB, AB.TYPE), ($SQ$NFR$SQ$, AB.NFR, AB.TYPE), ($SQ$CMSCMS$SQ$, AB.CMSCMS, AB.TYPE), ($SQ$IPP$SQ$, AB.IPP, AB.TYPE), ($SQ$CMSINF$SQ$, AB.CMSINF, AB.TYPE), ($SQ$MOB$SQ$, AB.MOB, AB.TYPE), ($SQ$MBL$SQ$, AB.MBL, AB.TYPE), ($SQ$CMSCMD$SQ$, AB.CMSCMD, AB.TYPE), ($SQ$IB$SQ$, AB.IB, AB.TYPE), ($SQ$RIBINF$SQ$, AB.RIBINF, AB.TYPE), ($SQ$AANI$SQ$, AB.AANI, AB.TYPE), ($SQ$GCN$SQ$, AB.GCN, AB.TYPE), ($SQ$Manual$SQ$, AB.Manual, AB.TYPE), ($SQ$Pending (Checker)$SQ$, AB.PENDING_CHECKER, AB.TYPE), ($SQ$Pending Screening$SQ$, AB.Pending_Screening, AB.TYPE), ($SQ$SEND TO CB$SQ$, AB.SEND_TO_CB, AB.TYPE), ($SQ$CBACK$SQ$, AB.CBACK, AB.TYPE), ($SQ$CBNACK$SQ$, AB.CBNACK, AB.TYPE), ($SQ$Pending (T-1)$SQ$, AB.Pending_T_1, AB.TYPE), ($SQ$Pending (Maker)$SQ$, AB.PENDING_MAKER, AB.TYPE)) X ( Pending_Detais,  p_count,  type ) where  p_count not in ($SQ$0$SQ$)$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_30$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678780879597~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678780879597$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  A.type,  B.PTYPE,  case   when A.type = $SQ$pacs.008$SQ$   and b.sno is null then 1   when A.type = $SQ$pacs.004$SQ$   and b.sno is null then 2   when A.type = $SQ$pacs.007$SQ$   and b.sno is null then 3   else b.sno  end sno,  coalesce(b.total, 0) as total,  coalesce(b.Pending_Screening, 0) as Pending_Screening,  coalesce(b.PENDING_MAKER, 0) as PENDING_MAKER,  coalesce(b.PENDING_CHECKER, 0) as PENDING_CHECKER,  coalesce(b.payment_rejected, 0) as payment_rejected,  coalesce(b.successfullyposted, 0) as successfullyposted,  coalesce(b.pending_returns_maker, 0) as pending_returns_maker,  coalesce(b.pending_returns_checker, 0) as pending_returns_checker,  coalesce(b.returned, 0) as returned,  coalesce(b.Pending_T_1, 0) as Pending_T_1,  to_char(CURRENT_DATE::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text)::timestamp without time zone as created_date from  (  select   $SQ$pacs.008$SQ$ as type union  select   $SQ$pacs.004$SQ$ as type union  select   $SQ$pacs.007$SQ$ as type) A left join (  select   sno,   PTYPE,   type,   sum(total) as TOTAL,   sum(pending_maker) as pending_maker,   sum(pending_checker) as pending_checker,   sum(payment_rejected) as payment_rejected,   sum(pending_screening) as pending_screening,   sum(successfullyposted) as successfullyposted,   sum(pending_returns_maker) as pending_returns_maker,   sum(pending_returns_checker) as pending_returns_checker,   sum(returned) as returned,   sum(pending_t_1) as pending_t_1,   created_date  from   (   select    sno,    type,    TOTAL,    pending_maker,    pending_checker,    payment_rejected,    pending_screening,    successfullyposted,    pending_returns_maker,    pending_returns_checker,    returned,    pending_t_1,    created_date,    DEPARTMENT_CODE,    $SQ$IP$SQ$ as PTYPE   from    npss_vw_dashboard_inward_data) T $WHERE  group by   SNO,   ptype,   type,   CREATED_DATE) B on  B.type = A.type order by  sno$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_12$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1681998435687~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681998435687$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  Pending_Detais,  NPSSTPL_ID,  MSG_ID,  UETR,  PROCESS_NAME,  RESPONSE_CODE,  CREATED_DATE,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE,  V_CODE from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   A.PROCESS_NAME,   A.RESPONSE_CODE,   TO_CHAR(A.CREATED_DATE,   $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.V_CODE,   case    when A.status in ($SQ$OP_AC_VAL_FAILED$SQ$, $SQ$OP_AC_MAND_VAL_FAILED$SQ$, $SQ$OP_AC_DUPL_VAL_FAILED$SQ$, $SQ$OP_AC_PCODE_VAL_FAILED$SQ$, $SQ$OP_AC_PBANK_VAL_FAILED$SQ$) then $SQ$IBAN Failures$SQ$    when A.status in ($SQ$OP_P2P_SENDER_IBAN_FAILED$SQ$, $SQ$OP_P2P_PAYMENT_FAILED$SQ$, $SQ$OP_P2P_POSTING_FAILURE$SQ$, $SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$) then $SQ$P2P Failures$SQ$    when A.status in ($SQ$OP_P2B_FUND_UNFREEZED$SQ$, $SQ$OP_P2B_PAYMENT_FAILED$SQ$, $SQ$OP_P2B_FUND_RES_FAILURE$SQ$, $SQ$OP_P2B_FUND_RES_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_FUND_UNFR_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_AUTH_FAILURE$SQ$, $SQ$OP_P2B_FUND_AUTH_SUSPICIOUS$SQ$) then $SQ$P2B Failures$SQ$    else $SQ$OTHER$SQ$   end as Pending_Detais  from   NPSS_TRN_PROCESS_LOG A  where  A.status in ($SQ$OP_AC_VAL_FAILED$SQ$, $SQ$OP_AC_MAND_VAL_FAILED$SQ$, $SQ$OP_AC_DUPL_VAL_FAILED$SQ$, $SQ$OP_AC_PCODE_VAL_FAILED$SQ$, $SQ$OP_AC_PBANK_VAL_FAILED$SQ$,$SQ$OP_P2P_SENDER_IBAN_FAILED$SQ$, $SQ$OP_P2P_PAYMENT_FAILED$SQ$, $SQ$OP_P2P_POSTING_FAILURE$SQ$, $SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$,  $SQ$OP_P2B_FUND_UNFREEZED$SQ$, $SQ$OP_P2B_PAYMENT_FAILED$SQ$, $SQ$OP_P2B_FUND_RES_FAILURE$SQ$, $SQ$OP_P2B_FUND_RES_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_FUND_UNFR_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_AUTH_FAILURE$SQ$, $SQ$OP_P2B_FUND_AUTH_SUSPICIOUS$SQ$) and   to_date(to_char(A.created_date ,   $SQ$yyyy-mm-dd$SQ$ ),   $SQ$yyyy-mm-dd$SQ$ ) = current_date  order by   A.NPSSTPL_ID desc) V where  Pending_Detais <> $SQ$OTHER$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_42$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1681998367336~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681998367336$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  details,  coalesce(sum(res.IBAN_Failures), 0::numeric) as IBAN_Failures,  coalesce(sum(res.P2P_Failures), 0::numeric) as P2P_Failures,  coalesce(sum(res.P2B_Failures), 0::numeric) as P2B_Failures  from  (  select   count (case    when ntpl.status in ($SQ$OP_AC_VAL_FAILED$SQ$, $SQ$OP_AC_MAND_VAL_FAILED$SQ$, $SQ$OP_AC_DUPL_VAL_FAILED$SQ$, $SQ$OP_AC_PCODE_VAL_FAILED$SQ$, $SQ$OP_AC_PBANK_VAL_FAILED$SQ$) then ntpl.npsstpl_id    else null   end ) as IBAN_Failures,   count (case    when ntpl.status in ($SQ$OP_P2P_SENDER_IBAN_FAILED$SQ$, $SQ$OP_P2P_PAYMENT_FAILED$SQ$, $SQ$OP_P2P_POSTING_FAILURE$SQ$, $SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$) then ntpl.npsstpl_id    else null   end )as P2P_Failures,   count (case    when ntpl.status in ($SQ$OP_P2B_FUND_UNFREEZED$SQ$, $SQ$OP_P2B_PAYMENT_FAILED$SQ$, $SQ$OP_P2B_FUND_RES_FAILURE$SQ$, $SQ$OP_P2B_FUND_RES_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_FUND_UNFR_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_AUTH_FAILURE$SQ$, $SQ$OP_P2B_FUND_AUTH_SUSPICIOUS$SQ$) then ntpl.npsstpl_id    else null   end) as P2B_Failures,   ntpl.status,   ntpl.tenant_id ,   $SQ$Overlay Failures$SQ$ as details  from   npss_trn_process_log ntpl  where   to_date(to_char(ntpl.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE  group by   status,   tenant_id   union all  (select   $SQ$0$SQ$ as IBAN_Failures, $SQ$0$SQ$as P2P_Failures,  $SQ$0$SQ$ as P2B_Failures,   ntpl.status,   ntpl.tenant_id ,   $SQ$Overlay Failures$SQ$ as details  from   npss_trn_process_log ntpl  group by   status,   tenant_id  ))res $WHERE group by  res.details$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_40$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1678866622478~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866622478$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1679581628982_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1679581628982_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1679581628982_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679582888768~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1679581628982_0$DQ$,$DQ$DS_1679582888768$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_8$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1679581628982_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679582857052~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1679581628982_0$DQ$,$DQ$DS_1679582857052$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   LEFT JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_6$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1679581628982_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679582835225~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1679581628982_0$DQ$,$DQ$DS_1679582835225$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTPL_ID,  MSG_ID,  UETR,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  CREATED_BY,  CREATED_BY_NAME,  CREATED_DATE,  MODIFIED_BY,  MODIFIED_BY_NAME,  STATUS,  PROCESS_STATUS,  DT_CODE,  DTT_CODE,  APP_ID,  TENANT_ID,  AMOUNT,  DBTR_IBAN,  TRAN_REF_ID,  PROCESS_TYPE,  DATEMI from  (  select   T.NPSSTPL_ID,   T.MSG_ID,   T.UETR,   T.PROCESS_NAME,   T.PROCESSING_SYSTEM,   T.RESPONSE_CODE,   T.PROCESS_REF_NO,   T.CREATED_BY,   T.CREATED_BY_NAME,   T.CREATED_DATE,   TO_CHAR(T.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   T.MODIFIED_BY,   T.MODIFIED_BY_NAME,   T.STATUS,   T.PROCESS_STATUS,   T.DT_CODE,   T.DTT_CODE,   T.APP_ID,   T.TENANT_ID,   T.AMOUNT,   T.DBTR_IBAN,   T.TRAN_REF_ID,   T.PROCESS_TYPE,   T.row_num  from   (   select    A.NPSSTPL_ID,    A.MSG_ID,    A.UETR,    A.PROCESS_NAME,    A.PROCESSING_SYSTEM,    A.RESPONSE_CODE,    A.PROCESS_REF_NO,    A.CREATED_BY,    A.CREATED_BY_NAME,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,    A.MODIFIED_BY,    A.MODIFIED_BY_NAME,    A.STATUS,    A.PROCESS_STATUS,    A.DT_CODE,    A.DTT_CODE,    A.APP_ID,    A.TENANT_ID,    A.AMOUNT,    A.DBTR_IBAN,    A.PROCESS_TYPE,    A.TRAN_REF_ID,    row_number() over( partition by a.uetr   order by    a.npsstpl_id desc) as row_num   from    npss_trn_process_log a ) T ) V where  row_num = 1 $AND order by  npsstpl_id desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1679581628982_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1679582688001~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1679581628982_0$DQ$,$DQ$DS_1679582688001$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   A.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   NPSS_TRN_PROCESS_LOG A  left join $SL$$DQ$ad_gss_tran$SL$$DQ$.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join $SL$$DQ$ad_gss_tran$SL$$DQ$.CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join $SL$$DQ$ad_gss_tran$SL$$DQ$.CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_17$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1679581628982_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1679582796865~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1679581628982_0$DQ$,$DQ$DS_1679582796865$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  STATUS,  PROCESS_STATUS from  (  select   T.NPSSTPL_ID,   T.UETR,   T.PROCESSING_SYSTEM,   T.PROCESS_NAME,   T.STATUS,   T.PROCESS_STATUS,   T.ADDITIONAL_INFO,   T.PROCESS_TYPE,   T.MSG_ID,   T.DBTR_IBAN,   T.AMOUNT,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   T.TENANT_ID,   T.created_date,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   T.row_num  from   (   select    a.npsstpl_id,    a.uetr,    a.created_date,    a.STATUS,    a.PROCESS_STATUS,    a.DTT_CODE,    a.PROCESSING_SYSTEM,    a.PROCESS_NAME,    a.ADDITIONAL_INFO,    a.PROCESS_TYPE,    a.TENANT_ID,    a.MSG_ID,    a.DBTR_IBAN,    a.AMOUNT,      row_number() over( partition by a.uetr   order by    a.npsstpl_id desc) as row_num   from    npss_trn_process_log a ) T  left join TRANSACTION_SET TS on   T.NPSSTPL_ID = TS.TRN_ID   and T.DTT_CODE = TS.DTT_CODE  inner join <tran_db>.CORE_Q_STATUS_ROLES QR on   T.STATUS = QR.PROCESS_QUEUE_STATUS   and T.PROCESS_STATUS = QR.QUEUE_CODE  inner join <tran_db>.CORE_APP_Q_SETUP PQ on   T.PROCESS_STATUS = PQ.QUEUE_CODE) VW where  row_num = 1 $AND order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1679581628982_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1679582743179~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1679581628982_0$DQ$,$DQ$DS_1679582743179$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
}]