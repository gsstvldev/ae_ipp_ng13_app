[{
  "key": "215~WFT_NPSS_P_1304_1708336628425_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1708336628425_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1708336628425_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1708336721553~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1708336628425_0$DQ$,$DQ$DS_1708336721553$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct UETR,  PROCESS_STATUS,  STATUS,  CREATED_DATE,  VALUE_DATE,  VALUEDATE,  DEPARTMENT_CODE,  DBTR_IBAN,  DBTR_ACCT_NAME,  CDTR_IBAN,  CDTR_ACCT_NAME,  CR_SORT_CODE,  CHANNEL_ID,  BENEFICIARY_BANK,  API_SUCCESS_FAILURE,  INTRBK_STTLM_AMNT,  PURPOSE_CODES,  CHANNEL_REFNO,  FN_CARD_DECRYPT_AND_MASK_RPT(CR_ACCT_IDENTIFICATION) as CR_ACCT_IDENTIFICATION,  FN_CARD_DECRYPT_AND_MASK_RPT(DBTR_ACCT_NO) as DBTR_ACCT_NO,  CB_ERRORS,  CORE_BANK_ERRORS,  MAKER,  CHECKER,  PROCESS_GROUP,  TRANSACTION_ID,  CATEGORY_PURPOSE,  FT_CI_REFERENCE_NUMBER,  PROCESS_TYPE,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  Batch_Payment_Flag,  OUTWARD_FILE_NAME from  (  select   NTPL.UETR,   NT.PROCESS_STATUS,   NT.STATUS,   NT.CREATED_DATE,   NT.VALUE_DATE,   to_char(NT.VALUE_DATE, $SQ$DD/MM/YYYY$SQ$) as VALUEDATE,   NT.DEPARTMENT_CODE,   NT.OUTWARD_FILE_NAME,   case    when NT.process_group = $SQ$BCT$SQ$ then $SQ$Y$SQ$    else $SQ$N$SQ$   end as Batch_Payment_Flag,   case    when NT.PROCESS_GROUP = $SQ$IBAN$SQ$ then $SQ$WEBI$SQ$    when NT.PROCESS_GROUP = $SQ$P2P$SQ$ then $SQ$MP2P$SQ$    when NT.PROCESS_GROUP = $SQ$P2B$SQ$ then $SQ$MP2B$SQ$    when NT.PROCESS_GROUP = $SQ$MANUAL$SQ$ then $SQ$WEBI$SQ$   end as PURPOSE_CODES,   NT.PAYMENT_ENDTOEND_ID,   NT.DBTR_IBAN,   NT.DBTR_ACCT_NAME,   NT.CDTR_IBAN,   NT.CDTR_ACCT_NAME,   NT.CR_SORT_CODE,   NT.CHANNEL_ID,   NT.CHANNEL_REFNO,   NT.PROCESS_TYPE,   NT.TENANT_ID,   NT.DT_CODE,   NT.DTT_CODE,   NT.MAKER,   NT.CHECKER,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   NT.PROCESS_GROUP,   NT.CATEGORY_PURPOSE,   NT.INTRBK_STTLM_AMNT,   A13.CBUAERETURNCODE as CB_ERRORS,   A11.T24RETURNCODE as CORE_BANK_ERRORS,   A15.PROCESS_REF_NO as CLRSYSREF,   CMB.BANK_NAME as BENEFICIARY_BANK,   CSE.S_DESCRIPTION,   NTPL.PROCESS_NAME,   case    when NT.PROCESS_GROUP in ($SQ$P2B$SQ$, $SQ$P2P$SQ$) then NT.TRAN_REF_ID    when NT.PROCESS_GROUP in ($SQ$IBAN$SQ$) then NT.MIDDLEWARE_REF_NO   end as TRANSACTION_ID,   case    when NT.PROCESS_GROUP in ($SQ$IBAN$SQ$) then NT.TRAN_REF_ID    when NT.PROCESS_GROUP in ($SQ$P2B$SQ$, $SQ$P2P$SQ$) then NT.PAYMENT_ENDTOEND_ID   end as FT_CI_REFERENCE_NUMBER,   case    when NT.PROCESS_STATUS not in ($SQ$RCTRejected$SQ$) then $SQ$Success$SQ$    when NT.PROCESS_STATUS = $SQ$RCTRejected$SQ$ then $SQ$Failure$SQ$   end as API_SUCCESS_FAILURE  from   <TRAN_DB>.NPSS_TRANSACTIONS NT  inner join <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL on   NT.UETR = NTPL.UETR  left join (   select    NPSSTPL_ID,    UETR,    CBUAERETURNCODE   from    (    select     A3.NPSSTPL_ID,     A3.UETR,     A3.STATUS,     A3.CBUAE_RETURN_CODE,     CONCAT(A3.CBUAE_RETURN_CODE,     $SQ$-$SQ$,     CNEC1.ERROR_DESCRIPTION) as CBUAERETURNCODE    from     (     select      NPSSTPL_ID,      STATUS,      UETR,      CBUAE_RETURN_CODE,      ROW_NUM     from      (      select       NPSSTPL_ID,       UETR,       STATUS,       CBUAE_RETURN_CODE,       row_number() over (partition by UETR      order by       NPSSTPL_ID desc) as ROW_NUM      from       <TRAN_DB>.NPSS_TRN_PROCESS_LOG A01) F     where      ROW_NUM = 1 ) A3    left join CORE_NC_ERROR_CODES CNEC1 on     CNEC1.ERROR_CODE = A3.CBUAE_RETURN_CODE     and CNEC1.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$    where     A3.STATUS in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_STATUS_REJECTED$SQ$, $SQ$OP_P2P_STATUS_REJECTED$SQ$, $SQ$OP_P2B_STATUS_REJECTED$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$)    order by     NPSSTPL_ID desc) A13) A13 on   A13.UETR = NT.UETR  left join (   select    NPSSTPL_ID,    UETR,    T24RETURNCODE   from    (    select     A2.NPSSTPL_ID,     A2.UETR,     A2.T24_RETURN_CODE,     CONCAT(A2.T24_RETURN_CODE,     $SQ$-$SQ$,     CNEC.ERROR_DESCRIPTION) as T24RETURNCODE    from     (     select      NPSSTPL_ID,      UETR,      T24_RETURN_CODE,      ROW_NUM     from      (      select       NPSSTPL_ID,       UETR,       T24_RETURN_CODE,       row_number() over (partition by UETR      order by       NPSSTPL_ID desc) as ROW_NUM      from       <TRAN_DB>.NPSS_TRN_PROCESS_LOG A1) F     where      ROW_NUM = 1 ) A2    left join CORE_NC_ERROR_CODES CNEC on     CNEC.ERROR_CODE = A2.T24_RETURN_CODE    where     A2.T24_RETURN_CODE is not null    order by     NPSSTPL_ID desc) A12) A11 on   A11.UETR = NT.UETR  left join CORE_MEMBER_BANKS CMB on   CMB.BIC_CODE = NT.CR_SORT_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$  left join (   select    A15.NPSSTPL_ID,    A15.UETR,    A15.PROCESS_REF_NO   from    (    select     A5.NPSSTPL_ID,     A5.UETR,     A5.PROCESS_REF_NO    from     (     select      NPSSTPL_ID,      UETR,      PROCESS_REF_NO,      ROW_NUM     from      (      select       NPSSTPL_ID,       UETR,       PROCESS_REF_NO,       row_number() over (partition by UETR      order by       NPSSTPL_ID desc) as ROW_NUM      from       <TRAN_DB>.NPSS_TRN_PROCESS_LOG A05      where       A05.PROCESS_NAME = $SQ$Receive Pacs002$SQ$       and A05.PROCESS_TYPE = $SQ$OP$SQ$ ) F     where      F.ROW_NUM = 1 ) A5    order by     A5.NPSSTPL_ID desc) A15) A15 on   A15.UETR = NT.UETR  inner join CORE_SYSTEM_EXTN CSE on   CSE.DEPARTMENT_CODE = NT.DEPARTMENT_CODE) V1 where  PROCESS_TYPE = $SQ$OP$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1710146843033_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1710146843033_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1710146843033_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1710333951252~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1710146843033_0$DQ$,$DQ$DS_1710333951252$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  CHANNEL_ID,  INTRBK_STTLM_CUR,  REVERSAL_AMOUNT,  EXHF_ID,  VALUE_DATE,  VALUEDATE,  CDTR_ACCT_NO,  DBTR_ACCT_NO,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  PRODUCT_CODE,  PROCESS_TYPE,  CR_ACCT_IDENTIFICATION,  QUEUE,  TRAN_STATUS,  TENANT_ID,  PROCESSING_SYSTEM,  PAYMENT_TYPE,  PROCESS_GROUP,  DEPARTMENT_CODE,  INTRBK_STTLM_AMNT,  SENDER_REFERENCE_NUMBER,  DBTR_IBAN,  DBTR_ACCT_NAME,  CDTR_IBAN,  CDTR_ACCT_NAME,  BENEFICIARY_BANK,  EXT_PURPOSE_CODE,  CLRSYSREF,  CREATED_DATE,  CHANNEL_ID,  ORIGINATOR_REF_NUMBER,  TRAN_AMOUNT from  (  select   A.NPSST_ID,   A.VALUE_DATE,   to_char(A.VALUE_DATE,   $SQ$DD/MM/YYYY$SQ$) as VALUEDATE,   A.CREATED_DATE,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_AMNT as TRAN_AMOUNT,   A.REVERSAL_AMOUNT,   A.INTRBK_STTLM_CUR,   FN_CARD_DECRYPT_AND_MASK_RPT(A.DBTR_ACCT_NO) as DBTR_ACCT_NO,   FN_CARD_DECRYPT_AND_MASK_RPT(A.CR_ACCT_IDENTIFICATION) as CR_ACCT_IDENTIFICATION,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   A.EXT_PURPOSE_CODE,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.PROCESS_TYPE,   A.DBTR_IBAN,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID as SENDER_REFERENCE_NUMBER,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.TENANT_ID,   A.PROCESSING_SYSTEM,   A.TRAN_REF_ID as ORIGINATOR_REF_NUMBER,   case    when A.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   A.PROCESS_GROUP,   NTPL.NPSSTPL_ID,   NTPL.PROCESS_NAME as MESSAGE_TYPE,   NTPL.PROCESS_REF_NO,   TO_CHAR(A.CREATED_DATE,   $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.PROCESS_STATUS as QUEUE,   A.STATUS as TRAN_STATUS,   CMB.BANK_NAME as BENEFICIARY_BANK,   NTPL.T24_RETURN_CODE,   CONCAT(NTPL.T24_RETURN_CODE,   $SQ$-$SQ$,   T24RC.RETURN_DESCRIPTION) as T24_RETURN_DESC,   NTPL.CBUAE_RETURN_CODE,   CONCAT(NTPL.CBUAE_RETURN_CODE,   $SQ$-$SQ$,   CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESC,   NTPL.REVERSAL_CODE,   CONCAT(NTPL.REVERSAL_CODE,   $SQ$-$SQ$,   CCD.CD_DESCRIPTION) as REVERSAL_DESC,   NTPL.PROCESS_TIME  from   NPSS_TRANSACTIONS A  inner join NPSS_TRN_PROCESS_LOG NTPL on   A.UETR = NTPL.UETR  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = NTPL.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES T24RC on   T24RC.RETURN_CODE = NTPL.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = NTPL.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_MEMBER_BANKS CMB on   CMB.BIC_CODE = A.CR_SORT_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$   and NTPL.PROCESS_NAME = $SQ$Place pacs.007$SQ$)VW where  PROCESS_TYPE = $SQ$OP$SQ$ $AND order by  NPSST_ID$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1710147659345_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1710147659345_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1710147659345_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1710334578416~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1710147659345_0$DQ$,$DQ$DS_1710334578416$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct UETR,  process_status ,  status ,  created_date ,  value_date ,  VALUEDATE,  department_code ,  intrbk_sttlm_amnt ,  ext_purpose_code,  payment_endtoend_id ,  dbtr_iban ,  FN_CARD_DECRYPT_AND_MASK_RPT(CR_ACCT_IDENTIFICATION) as CR_ACCT_IDENTIFICATION,  FN_CARD_DECRYPT_AND_MASK_RPT(DBTR_ACCT_NO) as DBTR_ACCT_NO,  dbtr_acct_name ,  cdtr_iban ,  clrsysref,  hdr_msg_id,  category_purpose_prty,  fx_resv_text1,  cdtr_acct_name ,  dr_sort_code ,  SOURCE_CHANNEL,  SENDER_BANK,  CB_ERRORS,  Core_Bank_Errors,  tran_ref_id,  SENDER_REFERENCE_NUMBER,  maker,  PROCESS_GROUP,  checker,  BATCH_PAYMENT_FLAG,  INWARD_FILE_NAME from  (  select   NTPL.UETR,   NT.process_status ,   NT.status ,   NT.created_date ,   NT.value_date ,   to_char(NT.VALUE_DATE, $SQ$DD/MM/YYYY$SQ$) as VALUEDATE,   NT.hdr_msg_id,   NT.category_purpose_prty,   NT.fx_resv_text1,   nt.department_code,   NT.intrbk_sttlm_amnt,   NT.ext_purpose_code,   NT.payment_endtoend_id ,   NT.dbtr_iban,   NT.dbtr_acct_name,   NT.cdtr_iban,   NT.cdtr_acct_name,   NT.dr_sort_code ,   NT.channel_id as SOURCE_CHANNEL ,   NT.tran_ref_id as SENDER_REFERENCE_NUMBER,   NT.tran_ref_id,   NT.channel_refno,   a15.PROCESS_REF_NO as clrsysref,   NT.process_type ,   NT.tenant_id ,   NT.PROCESS_GROUP,   NT.maker,   NT.checker,   NT.cr_acct_identification,   NT.dbtr_acct_no,   NTPL.process_name ,   NT.INWARD_FILE_NAME,   plcduae.CBUAERETURNCODE as CB_ERRORS,   plc.T24RETURNCODE as Core_Bank_Errors,   cmb.bank_name as SENDER_BANK,   cse.s_description,   case    when NT.process_group = $SQ$BCT$SQ$ then $SQ$Y$SQ$    else $SQ$N$SQ$   end as BATCH_PAYMENT_FLAG,   case    when ntpl.process_name = $SQ$Inward Credit Posting$SQ$    and ntpl.status = $SQ$IP_RCT_POSTING_SUCCESS$SQ$    and ntpl.process_type = $SQ$IP$SQ$ then ntpl.PROCESS_REF_NO    else $SQ$Others$SQ$   end as T24_FT_REFERENCE_NUMBER  from   <TRAN_DB>.npss_transactions nt  inner join <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL on   NT.UETR = NTPL.uetr  left join (   select    plr.npsstpl_id,    plr.uetr,    plr.CBUAE_RETURN_CODE,    plr.CBUAERETURNCODE,    plr.row_num   from    (    select     a.npsstpl_id,     a.uetr,     a.CBUAE_RETURN_CODE,     CONCAT (a.CBUAE_RETURN_CODE,     $SQ$-$SQ$,     cnec.error_description) as CBUAERETURNCODE,     row_number() over( partition by a.uetr    order by     a.npsstpl_id desc) as row_num    from     <TRAN_DB>.npss_trn_process_log a    left join core_nc_error_codes cnec on     a.CBUAE_RETURN_CODE = cnec.error_code     and cnec.processing_system = $SQ$CBUAE$SQ$    where     A.CBUAE_RETURN_CODE is not null     and A.status in ($SQ$IP_RCT_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RR_POSTING_FAILURE$SQ$)      and A.process_name in ($SQ$Inward Credit Posting$SQ$, $SQ$IR Return Reversal Posting$SQ$) ) plr   where    plr.row_num = 1) plcduae on   plcduae.uetr = nt.uetr  left join (   select    pl.npsstpl_id,    pl.uetr,    pl.T24_RETURN_CODE,    pl.T24RETURNCODE,    pl.row_num   from    (    select     a1.npsstpl_id,     a1.uetr,     a1.T24_RETURN_CODE,     CONCAT(A1.T24_RETURN_CODE,     $SQ$-$SQ$,     cnec.error_description ) as T24RETURNCODE,     row_number() over (partition by uetr    order by     a1.npsstpl_id desc) as row_num    from     <TRAN_DB>.npss_trn_process_log a1    left join core_nc_error_codes cnec on     cnec.error_code = A1.T24_RETURN_CODE    where     A1.T24_RETURN_CODE is not null     and A1.status in ($SQ$IP_RCT_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RR_POSTING_FAILURE$SQ$)      and A1.process_name in ($SQ$Inward Credit Posting$SQ$, $SQ$IR Return Reversal Posting$SQ$)) pl   where    pl.row_num = 1) plc on   plc.uetr = nt.uetr  left join core_member_banks cmb on   cmb.bic_code = nt.dr_sort_code   and cmb.NEED_SYNC = $SQ$Y$SQ$  left join (   select    A15.npsstpl_id,    A15.uetr,    A15.PROCESS_REF_NO   from    (    select     A5.npsstpl_id,     A5.uetr,     A5.PROCESS_REF_NO    from     (     select      npsstpl_id,      uetr,      PROCESS_REF_NO,      ROW_NUM     from      (      select       npsstpl_id,       uetr,       PROCESS_REF_NO,       row_number() over (partition by uetr      order by       npsstpl_id desc) as row_num      from       <TRAN_DB>.npss_trn_process_log A05      where       A05.process_name = $SQ$Receive Pacs002$SQ$       and A05.process_type = $SQ$IP$SQ$ ) F     where      F.row_num = 1 ) A5    order by     A5.npsstpl_id desc ) A15 ) a15 on   a15.uetr = nt.uetr  inner join CORE_SYSTEM_EXTN CSE on   CSE.department_code = nt.DEPARTMENT_CODE) V where  process_type = $SQ$IP$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1712150828941_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1712150828941_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1712150828941_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1712295462183~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1712150828941_0$DQ$,$DQ$DS_1712295462183$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  FIRST_NAME,  MIDDLE_NAME,  LAST_NAME ,  LOGIN_NAME,  APP_DESCRIPTION,  ROLE_DESCRIPTION,  EMAIL_ID ,  MOBILE_NO ,  STARTACTIVEDATE,  ENDACTIVEDATE,  START_ACTIVE_DATE ,  END_ACTIVE_DATE ,  SESSION_TIMEOUT ,  ALLOCATED_IP ,  DOUBLE_AUTHENTICATION ,  DOUBLE_AUTHENTICATION_MODEL,  ENFORCE_CHANGE_PASSWORD ,  NEED_EXTERNAL_AUTH,  LAST_SUCCESSFUL_LOGIN,  TENANT_ID,  STATUS,  ACCOUNT_LOCKED_DATE,  REMARKS from  (  select   U.FIRST_NAME,   U.MIDDLE_NAME,   U.LAST_NAME ,   U.LOGIN_NAME,   U.EMAIL_ID ,   U.MOBILE_NO ,   to_char(U.START_ACTIVE_DATE,   $SQ$DD/MM/YYYY$SQ$) as STARTACTIVEDATE,   to_char(U.END_ACTIVE_DATE,   $SQ$DD/MM/YYYY$SQ$) as ENDACTIVEDATE,   U.START_ACTIVE_DATE ,   U.END_ACTIVE_DATE ,   U.SESSION_TIMEOUT ,   U.ALLOCATED_IP ,   U.DOUBLE_AUTHENTICATION ,   U.DOUBLE_AUTHENTICATION_MODEL,   U.ENFORCE_CHANGE_PASSWORD ,   U.NEED_EXTERNAL_AUTH,   U.LAST_SUCCESSFUL_LOGIN,   U.TENANT_ID,   U.STATUS,   U.REMARKS,   U.ACCOUNT_LOCKED_DATE,   A.APP_DESCRIPTION,   AR.ROLE_DESCRIPTION  from   USERS U  inner join <CLT_CAS>.APP_USERS AU on   AU.U_ID = U.U_ID  inner join <CLT_CAS>.APP_USER_ROLES AUR on   AUR.APPU_ID = AU.APPU_ID  inner join <CLT_CAS>.APP_ROLES AR on   AR.APPR_ID = AUR.APPR_ID  inner join <CLT_CAS>.APPLICATIONS A on   A.APP_ID = AU.APP_ID)V where  LOGIN_NAME not in ($SQ$VPH_ADMIN$SQ$, $SQ$TORUS_ADMIN$SQ$, $SQ$NPSS_ADMIN$SQ$) $AND order by  LOGIN_NAME asc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1712205099543_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1712205099543_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1712205099543_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1712214850733~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1712205099543_0$DQ$,$DQ$DS_1712214850733$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  USER_NAME,  U_ID,  LOGIN_IP,  LOGON_TIME,  LOGOUT_TIME,  LOGONTIME,  LOGOUTTIME from  (  select   HUS.LOGIN_NAME as USER_NAME,   HUS.U_ID,   HUS.LOGIN_IP, to_char(HUS.LOGON_TIME, $SQ$DD/MM/YYYY$SQ$) as LOGONTIME,  to_char(HUS.LOGOUT_TIME, $SQ$DD/MM/YYYY$SQ$) as LOGOUTTIME,   HUS.LOGON_TIME,   HUS.LOGOUT_TIME,   HUS.CREATED_DATE  from  HST_USER_SESSIONS HUS  inner join USERS U on   HUS.U_ID = U.U_ID)V $WHERE group by  USER_NAME,  U_ID,  LOGIN_IP,  LOGON_TIME,  LOGOUT_TIME,  LOGONTIME,  LOGOUTTIME order by  LOGON_TIME asc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
}]