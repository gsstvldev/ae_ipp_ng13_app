[{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1673434393740_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435163647~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435163647$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  count(processtype) as process_type_count,  processtype,  process_type,  datemi from  (  select   t.created_date,   to_char(t.created_date, $SQ$YYYY-MM-DD$SQ$) as datemi,   t.process_type ,   t.department_code,   case    when process_type = upper($SQ$OP$SQ$) then initcap($SQ$Total Outward Payments$SQ$)    when process_type = upper($SQ$IP$SQ$) then initcap($SQ$Total Inward Payments$SQ$)    when process_type is null then upper($SQ$unknown$SQ$)   end as processtype,   t.tenant_id  from   npss_transactions t  inner join (   select    PLR.NPSSTPL_ID,    PLR.UETR,    PLR.STATUS,    PLR.PROCESS_STATUS,    PLR.ROW_NUM   from    (    select     A.NPSSTPL_ID,     A.DT_CODE,     A.DTT_CODE,     A.UETR,     A.STATUS,     A.PROCESS_NAME,     A.PROCESS_STATUS,     row_number() over( partition by A.UETR    order by     A.NPSSTPL_ID desc) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A )PLR   where    PLR.ROW_NUM = 1) PL on   PL.UETR = T.UETR) v $WHERE group by  processtype,  process_type,  datemi$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_23$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435529122~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435529122$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   fn_card_decrypt_and_mask(A.DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   fn_card_decrypt_and_mask(A.CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1673435004971~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435004971$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSSTRRD_ID,        MSG_ID,        UETR,        PARENT_NPSSTRRD_REFNO,        NPSSTRRD_REFNO,        PROCESS_CODE,        PROCESS_DETAIL,        EXHF_ID,        PROCESS_NAME,        MESSAGE_DESC,        CHANNEL_ID,        CHANNEL_REFNO,        CHANNEL_USERID,        CHANNEL_PRODUCT,        CHANNEL_SUB_PRODUCT,        CHANNEL_TRAN_CODE,        STATUS,        PROCESS_STATUS,        MESSAGE_DATA,        CREATEDDATEMILISEC,        DT_CODE,        DTT_CODE   FROM (SELECT NPSSTRRD.NPSSTRRD_ID,                NPSSTRRD.MSG_ID,                NPSSTRRD.UETR,                NPSSTRRD.PARENT_NPSSTRRD_REFNO,                NPSSTRRD.NPSSTRRD_REFNO,                NPSSTRRD.MESSAGE_DATA,                NPSSTRRD.PROCESS_CODE,                NPSSTRRD.PROCESS_DETAIL,                NPSSTRRD.EXHF_ID,                NPSSTRRD.PROCESS_NAME,                NPSSTRRD.MESSAGE_DESC,                NPSSTRRD.CHANNEL_ID,                NPSSTRRD.CHANNEL_REFNO,                NPSSTRRD.CHANNEL_USERID,                NPSSTRRD.CHANNEL_PRODUCT,                NPSSTRRD.CHANNEL_SUB_PRODUCT,                NPSSTRRD.CHANNEL_TRAN_CODE,                NPSSTRRD.CREATED_BY,                NPSSTRRD.CREATED_BY_NAME,                NPSSTRRD.CREATED_DATE,                NPSSTRRD.DT_CODE,                NPSSTRRD.DT_DESCRIPTION,                NPSSTRRD.DTT_CODE,                NPSSTRRD.DTT_DESCRIPTION,                NPSSTRRD.MODIFIED_BY,                NPSSTRRD.MODIFIED_BY_NAME,                NPSSTRRD.MODIFIED_DATE,                NPSSTRRD.STATUS,                NPSSTRRD.PROCESS_STATUS,                NPSSTRRD.SYSTEM_ID,                NPSSTRRD.SYSTEM_NAME,                NPSSTRRD.TENANT_ID,                NPSSTRRD.APP_ID,                NPSSTRRD.VERSION_NO,                TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC           FROM NPSS_TRN_REQ_RESP_DTLS NPSSTRRD) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435508771~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435508771$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   fn_card_decrypt_and_mask(A.DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   fn_card_decrypt_and_mask(A.CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435071377~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435071377$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PAYMENT_TYPE) as PAYMENT_TYPE_COUNT,  PAYMENT_TYPE from  (  select   T.created_date,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   T.process_type ,case    when t.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else t.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.tenant_id,   case    when T.EXHF_ID is null then $SQ$RCT$SQ$    else $SQ$BCT$SQ$   end as PAYMENT_TYPE  from   npss_transactions T) V $WHERE group by  PAYMENT_TYPE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1673435377054~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435377054$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  CREATIONTIME,  COMPLETIONTIME,  ROUND (d_seconds) as d_seconds,  CHANNEL_ID ,  PROCESS_TYPE ,  TENANT_ID,  UETR,  npsst_id ,  VALUE_DATE,  CDTR_IBAN,  INTRBK_STTLM_AMNT,  INTRBK_STTLM_CUR,  PAYMENT_ENDTOEND_ID,  TRAN_REF_ID,  DEPARTMENT_CODE ,  PROCESSING_SYSTEM,  PAYMENT_TYPE,  PROCESS_STATUS,  STATUS,  CLRSYSREF,  NPSSTPL_ID,  DT_CODE,  DTT_CODE,  request_data_json,  response_data_json from  (  select   TO_CHAR(PL.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as COMPLETIONTIME,   TO_CHAR(PL1.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATIONTIME,   extract(epoch  from   (pl.created_date - pl1.created_date)) as d_seconds,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   T.PROCESS_TYPE ,   T.TENANT_ID,   T.UETR,   T.npsst_id ,   T.VALUE_DATE ,   T.CDTR_IBAN ,   T.INTRBK_STTLM_AMNT ,   T.INTRBK_STTLM_CUR ,   T.PAYMENT_ENDTOEND_ID ,   T.TRAN_REF_ID ,   T.DEPARTMENT_CODE ,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.CLRSYSREF,   case    when T.EXHF_ID is null then $SQ$RCT$SQ$    else $SQ$BCT$SQ$   end as PAYMENT_TYPE,   PL.PROCESS_STATUS,   PL.STATUS,   PL.DT_CODE,   PL.DTT_CODE,   PL.NPSSTPL_ID,   PL.request_data_json,   PL.response_data_json,   T.created_date  from   NPSS_TRANSACTIONS T  inner join (   select    PLR.NPSSTPL_ID,    PLR.UETR,    PLR.STATUS,    PLR.PROCESS_STATUS,    PLR.CREATED_DATE,    PLR.DT_CODE,    PLR.DTT_CODE,    PLR.request_data_json,    PLR.response_data_json,    PLR.ROW_NUM   from    (    select     A.NPSSTPL_ID,     A.DT_CODE,     A.DTT_CODE,     A.UETR,     A.STATUS,     A.PROCESS_STATUS,     A.CREATED_DATE,     A.request_data_json,     A.response_data_json,     row_number() over( partition by A.UETR    order by     A.NPSSTPL_ID desc) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A ) PLR   where    PLR.ROW_NUM = 1) PL on   PL.UETR = T.UETR  inner join (   select    PLR1.NPSSTPL_ID,    PLR1.UETR,    PLR1.STATUS,    PLR1.PROCESS_STATUS,    PLR1.CREATED_DATE,    PLR1.DT_CODE,    PLR1.DTT_CODE,    PLR1.request_data_json,    PLR1.response_data_json,    PLR1.ROW_NUM   from    (    select     A1.NPSSTPL_ID,     A1.DT_CODE,     A1.DTT_CODE,     A1.UETR,     A1.STATUS,     A1.PROCESS_STATUS,     A1.CREATED_DATE,     A1.request_data_json,     A1.response_data_json,     row_number() over( partition by A1.UETR    order by     A1.NPSSTPL_ID) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A1 ) PLR1   where    PLR1.ROW_NUM = 1) PL1 on   PL1.UETR = T.UETR) V $WHERE order by  NPSST_ID desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_22$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435239224~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435239224$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESS_STATUS) as PROCESS_STATUS_COUNT,  PROCESS_STATUS from  (  select   T.CREATED_DATE,   T.CHANNEL_ID ,   T.PROCESS_TYPE ,   T.TENANT_ID,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when PL.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else PL.PROCESS_STATUS   end as PROCESS_STATUS  from   NPSS_TRANSACTIONS T  inner join (   select    PLR.NPSSTPL_ID,    PLR.UETR,    PLR.STATUS,    PLR.PROCESS_STATUS,    PLR.ROW_NUM   from    (    select     A.NPSSTPL_ID,     A.DT_CODE,     A.DTT_CODE,     A.UETR,     A.STATUS,     A.PROCESS_NAME,     A.PROCESS_STATUS,     row_number() over( partition by A.UETR    order by     A.NPSSTPL_ID desc) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A )PLR   where    PLR.ROW_NUM = 1) PL on   PL.UETR = T.UETR) V $WHERE group by  PROCESS_STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_21$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1673434959100~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673434959100$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT REVERSAL_DESCRIPTION,        T24_RETURN_DESCRIPTION,        CBUAE_RETURN_DESCRIPTION,        NPSSTPL_ID,        MSG_ID,        UETR,        NPSSTRRD_REFNO,        PROCESS_NAME,        PROCESSING_SYSTEM,        RESPONSE_CODE,        PROCESS_REF_NO,        RESPONSE_DATA,        CREATED_DATE,        CREATEDDATEMILISEC,        PROCESS_STATUS,        STATUS,        REQUEST_DATA_JSON,        RESPONSE_DATA_JSON,        T24_RETURN_CODE,        CBUAE_RETURN_CODE,        REVERSAL_CODE,        REVERSAL_DESC,        T24_RETURN_DESC,        CBUAE_RETURN_DESC,        TENANT_ID,        DEPARTMENT_CODE,        DT_CODE,        DTT_CODE,AMOUNT_CREDITED,AMT_CR_LOC_CUR,CHARGE_AMOUNT,BUY_CURRENCY,SELL_CURRENCY,DEALT_AMOUNT,EXCHANGE_RATE,CONTRA_AMOUNT   FROM (SELECT A.NPSSTPL_ID,                A.MSG_ID,                A.UETR,                A.NPSSTRRD_REFNO,                A.PROCESS_NAME,                A.PROCESSING_SYSTEM,                A.RESPONSE_CODE,                A.PROCESS_REF_NO,                A.RESPONSE_DATA,                TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS CREATEDDATEMILISEC,                A.CREATED_DATE,                A.PROCESS_STATUS,                A.STATUS,                A.DT_CODE,                A.DTT_CODE,                A.TENANT_ID,                A.REQUEST_DATA_JSON,                A.RESPONSE_DATA_JSON,                A.T24_RETURN_CODE,                NT.DEPARTMENT_CODE,                A.ADDITIONAL_INFO,A.AMOUNT_CREDITED,A.AMT_CR_LOC_CUR,A.CHARGE_AMOUNT,A.BUY_CURRENCY,A.SELL_CURRENCY,A.DEALT_AMOUNT,A.EXCHANGE_RATE,A.CONTRA_AMOUNT,                T24RC.RETURN_DESCRIPTION AS T24_RETURN_DESC,                CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.RETURN_DESCRIPTION) AS T24_RETURN_DESCRIPTION,                A.CBUAE_RETURN_CODE,                CBUAERC.RETURN_DESCRIPTION AS CBUAE_RETURN_DESC,                CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) AS CBUAE_RETURN_DESCRIPTION,                A.REVERSAL_CODE,                CCD.CD_DESCRIPTION AS REVERSAL_DESC,                CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) AS REVERSAL_DESCRIPTION           FROM NPSS_TRN_PROCESS_LOG A           LEFT JOIN <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD ON CCD.CD_CODE =                                                                   A.REVERSAL_CODE                                                               AND CCD.CD_CATEGORY =                                                                   $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$ AND CCD.STATUS = $SQ$APPROVED$SQ$           LEFT JOIN <tran_db>.CORE_NC_RETURN_CODES T24RC ON T24RC.RETURN_CODE =                                                                A.T24_RETURN_CODE                                                            AND T24RC.PROCESSING_SYSTEM =                                                                $SQ$T24$SQ$ AND T24RC.STATUS = $SQ$APPROVED$SQ$           LEFT JOIN <tran_db>.CORE_NC_RETURN_CODES CBUAERC ON CBUAERC.RETURN_CODE =                                                                  A.CBUAE_RETURN_CODE                                                              AND CBUAERC.PROCESSING_SYSTEM =                                                                  $SQ$CBUAE$SQ$ AND CBUAERC.STATUS = $SQ$APPROVED$SQ$          INNER JOIN NPSS_TRANSACTIONS NT ON NT.UETR = A.UETR          ORDER BY A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673434824899~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673434824899$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESSING_SYSTEM) as PROCESSING_SYSTEM_COUNT,  PROCESSING_SYSTEM from  (  select   T.CREATED_DATE,   T.CHANNEL_ID ,   T.PROCESS_TYPE ,   T.TENANT_ID,   T.DEPARTMENT_CODE,   case    when T.EXHF_ID is null then upper($SQ$RCT$SQ$)    else upper($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   PL.PROCESS_STATUS,   case when PL.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$) else pl.PROCESSING_SYSTEM end as PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS T  inner join (   select    PLR.NPSSTPL_ID,    PLR.UETR,    PLR.STATUS,    PLR.PROCESS_STATUS,    PLR.PROCESSING_SYSTEM,    PLR.ROW_NUM   from    (    select     A.NPSSTPL_ID,     A.DT_CODE,     A.DTT_CODE,     A.UETR,     A.STATUS,     A.PROCESS_NAME,     A.PROCESS_STATUS,     A.PROCESSING_SYSTEM,     row_number() over( partition by A.UETR    order by     A.NPSSTPL_ID desc) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A )PLR   where    PLR.ROW_NUM = 1) PL on   PL.UETR = T.UETR) V $WHERE group by  PROCESSING_SYSTEM$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1673438426570_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673440173236~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673438426570_0$DQ$,$DQ$DS_1673440173236$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   fn_card_decrypt_and_mask(A.DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   fn_card_decrypt_and_mask(A.CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1673439335868~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673438426570_0$DQ$,$DQ$DS_1673439335868$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSSTRRD_ID,        MSG_ID,        UETR,        PARENT_NPSSTRRD_REFNO,        NPSSTRRD_REFNO,        PROCESS_CODE,        PROCESS_DETAIL,        EXHF_ID,        PROCESS_NAME,        MESSAGE_DESC,        CHANNEL_ID,        CHANNEL_REFNO,        CHANNEL_USERID,        CHANNEL_PRODUCT,        CHANNEL_SUB_PRODUCT,        CHANNEL_TRAN_CODE,        STATUS,        PROCESS_STATUS,        MESSAGE_DATA,        CREATEDDATEMILISEC,        DT_CODE,        DTT_CODE   FROM (SELECT NPSSTRRD.NPSSTRRD_ID,                NPSSTRRD.MSG_ID,                NPSSTRRD.UETR,                NPSSTRRD.PARENT_NPSSTRRD_REFNO,                NPSSTRRD.NPSSTRRD_REFNO,                NPSSTRRD.MESSAGE_DATA,                NPSSTRRD.PROCESS_CODE,                NPSSTRRD.PROCESS_DETAIL,                NPSSTRRD.EXHF_ID,                NPSSTRRD.PROCESS_NAME,                NPSSTRRD.MESSAGE_DESC,                NPSSTRRD.CHANNEL_ID,                NPSSTRRD.CHANNEL_REFNO,                NPSSTRRD.CHANNEL_USERID,                NPSSTRRD.CHANNEL_PRODUCT,                NPSSTRRD.CHANNEL_SUB_PRODUCT,                NPSSTRRD.CHANNEL_TRAN_CODE,                NPSSTRRD.CREATED_BY,                NPSSTRRD.CREATED_BY_NAME,                NPSSTRRD.CREATED_DATE,                NPSSTRRD.DT_CODE,                NPSSTRRD.DT_DESCRIPTION,                NPSSTRRD.DTT_CODE,                NPSSTRRD.DTT_DESCRIPTION,                NPSSTRRD.MODIFIED_BY,                NPSSTRRD.MODIFIED_BY_NAME,                NPSSTRRD.MODIFIED_DATE,                NPSSTRRD.STATUS,                NPSSTRRD.PROCESS_STATUS,                NPSSTRRD.SYSTEM_ID,                NPSSTRRD.SYSTEM_NAME,                NPSSTRRD.TENANT_ID,                NPSSTRRD.APP_ID,                NPSSTRRD.VERSION_NO,                TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC           FROM NPSS_TRN_REQ_RESP_DTLS NPSSTRRD) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673440158742~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673438426570_0$DQ$,$DQ$DS_1673440158742$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   fn_card_decrypt_and_mask(A.DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   fn_card_decrypt_and_mask(A.CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673439765747~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673438426570_0$DQ$,$DQ$DS_1673439765747$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  PROCESS_STATUS,  COUNT (PROCESS_STATUS) as PROCESS_STATUS_COUNT from  (  select   case    when NTPL.process_name like $SQ$%008%$SQ$ then lower($SQ$pacs008$SQ$)    when NTPL.process_name like $SQ$%028%$SQ$ then lower($SQ$pacs028$SQ$)    when NTPL.process_name like $SQ$%007%$SQ$ then lower($SQ$pacs007$SQ$)    when NTPL.process_name like $SQ$%004%$SQ$ then lower($SQ$pacs004$SQ$)    else upper($SQ$others$SQ$)   end as MESSAGE,   case    when NTPL.process_name like $SQ$%008%$SQ$ then 1    when NTPL.process_name like $SQ$%028%$SQ$ then 4    when NTPL.process_name like $SQ$%007%$SQ$ then 3    when NTPL.process_name like $SQ$%004%$SQ$ then 2    else 5   end as MESSAGE_ORDER,   nt.process_type,   nt.created_date,   nt.uetr,   case    when nt.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else nt.channel_id   end as channel_id,   case    when nt.exhf_id is null then upper($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when nt.process_status is null then UPPER($SQ$UNKOWN$SQ$)    else nt.process_status   end as process_status,   nt.tenant_id,   nt.department_code  from   npss_trn_process_log ntpl  inner join npss_transactions nt on   nt.uetr = ntpl.uetr ) V $WHERE group by  PROCESS_STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_21$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673439194152~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673438426570_0$DQ$,$DQ$DS_1673439194152$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESSING_SYSTEM) as PROCESSING_SYSTEM_COUNT,  PROCESSING_SYSTEM from  (  select   T.CREATED_DATE,   T.CHANNEL_ID ,   T.PROCESS_TYPE ,   T.TENANT_ID,   T.DEPARTMENT_CODE,   case    when T.EXHF_ID is null then upper($SQ$RCT$SQ$)    else upper($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   PL.PROCESS_STATUS,   case when PL.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$) else pl.PROCESSING_SYSTEM end as PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS T  inner join (   select    PLR.NPSSTPL_ID,    PLR.UETR,    PLR.STATUS,    PLR.PROCESS_STATUS,    PLR.PROCESSING_SYSTEM,    PLR.ROW_NUM   from    (    select     A.NPSSTPL_ID,     A.DT_CODE,     A.DTT_CODE,     A.UETR,     A.STATUS,     A.PROCESS_NAME,     A.PROCESS_STATUS,     A.PROCESSING_SYSTEM,     row_number() over( partition by A.UETR    order by     A.NPSSTPL_ID desc) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A )PLR   where    PLR.ROW_NUM = 1) PL on   PL.UETR = T.UETR) V $WHERE group by  PROCESSING_SYSTEM$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673439531499~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673438426570_0$DQ$,$DQ$DS_1673439531499$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  PAYMENT_TYPE,  COUNT (PAYMENT_TYPE) as PAYMENT_TYPE_COUNT from  (  select   case    when NTPL.process_name like $SQ$%008%$SQ$ then lower($SQ$pacs008$SQ$)    when NTPL.process_name like $SQ$%028%$SQ$ then lower($SQ$pacs028$SQ$)    when NTPL.process_name like $SQ$%007%$SQ$ then lower($SQ$pacs007$SQ$)    when NTPL.process_name like $SQ$%004%$SQ$ then lower($SQ$pacs004$SQ$)    else upper($SQ$others$SQ$)   end as MESSAGE,   case    when NTPL.process_name like $SQ$%008%$SQ$ then 1    when NTPL.process_name like $SQ$%028%$SQ$ then 4    when NTPL.process_name like $SQ$%007%$SQ$ then 3    when NTPL.process_name like $SQ$%004%$SQ$ then 2    else 5   end as MESSAGE_ORDER,   nt.process_type,   nt.created_date,   nt.uetr,   case    when nt.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else nt.channel_id   end as channel_id,   case    when nt.exhf_id is null then upper($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   nt.tenant_id ,   nt.department_code   from   npss_trn_process_log ntpl  inner join npss_transactions nt on   nt.uetr = ntpl.uetr ) V $WHERE group by  PAYMENT_TYPE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1673439433830~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673438426570_0$DQ$,$DQ$DS_1673439433830$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  MESSAGE,  MESSAGE_ORDER,  CREATED_DATE,  COUNT (MESSAGE) as MESSAGE_COUNT from  (  select   case    when NTPL.process_name like $SQ$%008%$SQ$ then lower($SQ$pacs008$SQ$)    when NTPL.process_name like $SQ$%028%$SQ$ then lower($SQ$pacs028$SQ$)    when NTPL.process_name like $SQ$%007%$SQ$ then lower($SQ$pacs007$SQ$)    when NTPL.process_name like $SQ$%004%$SQ$ then lower($SQ$pacs004$SQ$)    else upper($SQ$others$SQ$)   end as MESSAGE,   case    when NTPL.process_name like $SQ$%008%$SQ$ then 1    when NTPL.process_name like $SQ$%028%$SQ$ then 4    when NTPL.process_name like $SQ$%007%$SQ$ then 3    when NTPL.process_name like $SQ$%004%$SQ$ then 2    else 5   end as MESSAGE_ORDER,   nt.process_type,   TO_DATE(TO_CHAR(NT.CREATED_DATE, $SQ$DD-MON-YY$SQ$), $SQ$DD-MON-YY$SQ$) as CREATED_DATE,   nt.uetr,   nt.tenant_id,   nt.department_code  from   npss_trn_process_log ntpl  inner join npss_transactions nt on   nt.uetr = ntpl.uetr ) V $WHERE group by  created_date,  MESSAGE,  MESSAGE_ORDER order by  MESSAGE_ORDER$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_23$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1673439295453~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673438426570_0$DQ$,$DQ$DS_1673439295453$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT REVERSAL_DESCRIPTION,        T24_RETURN_DESCRIPTION,        CBUAE_RETURN_DESCRIPTION,        NPSSTPL_ID,        MSG_ID,        UETR,        NPSSTRRD_REFNO,        PROCESS_NAME,        PROCESSING_SYSTEM,        RESPONSE_CODE,        PROCESS_REF_NO,        RESPONSE_DATA,        CREATED_DATE,        CREATEDDATEMILISEC,        PROCESS_STATUS,        STATUS,        REQUEST_DATA_JSON,        RESPONSE_DATA_JSON,        T24_RETURN_CODE,        CBUAE_RETURN_CODE,        REVERSAL_CODE,        REVERSAL_DESC,        T24_RETURN_DESC,        CBUAE_RETURN_DESC,        TENANT_ID,        DEPARTMENT_CODE,        DT_CODE,        DTT_CODE,AMOUNT_CREDITED,AMT_CR_LOC_CUR,CHARGE_AMOUNT,BUY_CURRENCY,SELL_CURRENCY,DEALT_AMOUNT,EXCHANGE_RATE,CONTRA_AMOUNT   FROM (SELECT A.NPSSTPL_ID,                A.MSG_ID,                A.UETR,                A.NPSSTRRD_REFNO,                A.PROCESS_NAME,                A.PROCESSING_SYSTEM,                A.RESPONSE_CODE,                A.PROCESS_REF_NO,                A.RESPONSE_DATA,                TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS CREATEDDATEMILISEC,                A.CREATED_DATE,                A.PROCESS_STATUS,                A.STATUS,                A.DT_CODE,                A.DTT_CODE,                A.TENANT_ID,                A.REQUEST_DATA_JSON,                A.RESPONSE_DATA_JSON,                A.T24_RETURN_CODE,                NT.DEPARTMENT_CODE,                A.ADDITIONAL_INFO,A.AMOUNT_CREDITED,A.AMT_CR_LOC_CUR,A.CHARGE_AMOUNT,A.BUY_CURRENCY,A.SELL_CURRENCY,A.DEALT_AMOUNT,A.EXCHANGE_RATE,A.CONTRA_AMOUNT,                T24RC.RETURN_DESCRIPTION AS T24_RETURN_DESC,                CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.RETURN_DESCRIPTION) AS T24_RETURN_DESCRIPTION,                A.CBUAE_RETURN_CODE,                CBUAERC.RETURN_DESCRIPTION AS CBUAE_RETURN_DESC,                CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) AS CBUAE_RETURN_DESCRIPTION,                A.REVERSAL_CODE,                CCD.CD_DESCRIPTION AS REVERSAL_DESC,                CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) AS REVERSAL_DESCRIPTION           FROM NPSS_TRN_PROCESS_LOG A           LEFT JOIN <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD ON CCD.CD_CODE =                                                                   A.REVERSAL_CODE                                                               AND CCD.CD_CATEGORY =                                                                   $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$ AND CCD.STATUS = $SQ$APPROVED$SQ$           LEFT JOIN <tran_db>.CORE_NC_RETURN_CODES T24RC ON T24RC.RETURN_CODE =                                                                A.T24_RETURN_CODE                                                            AND T24RC.PROCESSING_SYSTEM =                                                                $SQ$T24$SQ$ AND T24RC.STATUS = $SQ$APPROVED$SQ$           LEFT JOIN <tran_db{}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673438426570_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1673439967010~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673438426570_0$DQ$,$DQ$DS_1673439967010$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  CREATIONTIME,  COMPLETIONTIME,  ROUND (d_seconds) as d_seconds,  CHANNEL_ID ,  PROCESS_TYPE ,  TENANT_ID,  UETR,  npsst_id ,  VALUE_DATE,  CDTR_IBAN,  INTRBK_STTLM_AMNT,  INTRBK_STTLM_CUR,  PAYMENT_ENDTOEND_ID,  TRAN_REF_ID,  DEPARTMENT_CODE ,  PROCESSING_SYSTEM,  PAYMENT_TYPE,  PROCESS_STATUS,  STATUS,  CLRSYSREF,  NPSSTPL_ID,  DT_CODE,  DTT_CODE,  request_data_json,  response_data_json from  (  select   TO_CHAR(PL.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as COMPLETIONTIME,   TO_CHAR(PL1.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATIONTIME,   extract(epoch  from   (pl.created_date - pl1.created_date)) as d_seconds,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   T.PROCESS_TYPE ,   T.TENANT_ID,   T.UETR,   T.npsst_id ,   T.VALUE_DATE ,   T.CDTR_IBAN ,   T.INTRBK_STTLM_AMNT ,   T.INTRBK_STTLM_CUR ,   T.PAYMENT_ENDTOEND_ID ,   T.TRAN_REF_ID ,   T.DEPARTMENT_CODE ,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.CLRSYSREF,   case    when T.EXHF_ID is null then $SQ$RCT$SQ$    else $SQ$BCT$SQ$   end as PAYMENT_TYPE,   PL.PROCESS_STATUS,   PL.STATUS,   PL.DT_CODE,   PL.DTT_CODE,   PL.NPSSTPL_ID,   PL.request_data_json,   PL.response_data_json,   T.created_date  from   NPSS_TRANSACTIONS T  inner join (   select    PLR.NPSSTPL_ID,    PLR.UETR,    PLR.STATUS,    PLR.PROCESS_STATUS,    PLR.CREATED_DATE,    PLR.DT_CODE,    PLR.DTT_CODE,    PLR.request_data_json,    PLR.response_data_json,    PLR.ROW_NUM   from    (    select     A.NPSSTPL_ID,     A.DT_CODE,     A.DTT_CODE,     A.UETR,     A.STATUS,     A.PROCESS_STATUS,     A.CREATED_DATE,     A.request_data_json,     A.response_data_json,     row_number() over( partition by A.UETR    order by     A.NPSSTPL_ID desc) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A ) PLR   where    PLR.ROW_NUM = 1) PL on   PL.UETR = T.UETR  inner join (   select    PLR1.NPSSTPL_ID,    PLR1.UETR,    PLR1.STATUS,    PLR1.PROCESS_STATUS,    PLR1.CREATED_DATE,    PLR1.DT_CODE,    PLR1.DTT_CODE,    PLR1.request_data_json,    PLR1.response_data_json,    PLR1.ROW_NUM   from    (    select     A1.NPSSTPL_ID,     A1.DT_CODE,     A1.DTT_CODE,     A1.UETR,     A1.STATUS,     A1.PROCESS_STATUS,     A1.CREATED_DATE,     A1.request_data_json,     A1.response_data_json,     row_number() over( partition by A1.UETR    order by     A1.NPSSTPL_ID) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A1 ) PLR1   where    PLR1.ROW_NUM = 1) PL1 on   PL1.UETR = T.UETR) V $WHERE order by  NPSST_ID desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_22$DQ$] }",
  "qry_type": "I"
}]