[{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1674563032639_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563747012~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563747012$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   INNER JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674564026543~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674564026543$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  CDTR_IBAN,  CDTR_ACCT_NAME,  CURRENCY,  PROCESS_REF_NO,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  VALUEDATEMI,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE,  GM_MARGIN,  EXCHANGE_RATE,  TRAN_CHARGE,  fx_Resv_text2,  org_pay_endtoend_id,  fx_resv_text4,  additional_info from  (  select   NT.DISPUTE_REF_NO,   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN,   NT.CDTR_ACCT_NAME,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.DBTR_IBAN,   NT.DBTR_ACCT_NAME,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   CNCA.CURRENCY,   CMB.BANK_NAME,   TO_CHAR(NT.VALUE_DATE, $SQ$YYYY-MM-DD$SQ$) as VALUEDATEMI,   NTPL.PROCESS_REF_NO,   NTPL.CHARGE_AMOUNT,   NT.UETR,   NTPL.STATUS,   NTPL.PROCESS_STATUS,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   NT.DEPARTMENT_CODE,   NT.NPSST_ID::text as TNPSST_ID,   PL.EXCHANGE_RATE,   PL.GM_MARGIN,   NT.TRAN_CHARGE,   NT.fx_Resv_text2,   NT.org_pay_endtoend_id,   NT.fx_resv_text4,   NTP.additional_info  from   <TRAN_DB>.NPSS_TRANSACTIONS NT  left join CORE_NC_CBS_ACCOUNTS CNCA on   NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID  inner join CORE_MEMBER_BANKS CMB on   NT.CR_SORT_CODE = CMB.BIC_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL on   NT.UETR = NTPL.UETR  left join <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTP on   NT.UETR = NTP.UETR   and NTP.PROCESS_NAME = $SQ$Initiate Dispute Tran$SQ$  left join <TRAN_DB>.NPSS_TRN_PROCESS_LOG PL on   NT.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and PL.PROCESS_NAME = $SQ$Get Deal$SQ$) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~E_1680587871240~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1680591890381~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1680591890381$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  DBTRIBAN,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  BANK_NAME,  VALUEDATEMI from  (  select   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN as DBTRIBAN,   NT.CDTR_ACCT_NAME as DBTRACCTNAME,   NT.CR_SORT_CODE as DRSORTCODE,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.DBTR_IBAN as CDTRIBAN,   NT.DBTR_ACCT_NAME as CDTRACCTNAME,   NT.DR_SORT_CODE as CRSORTCODE,   TO_CHAR(NT.VALUE_DATE,   $SQ$YYYY-MM-DD$SQ$) as VALUEDATEMI,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   CMB.BANK_NAME,   NT.NPSST_ID::text as TNPSST_ID  from   <TRAN_DB>.NPSS_TRANSACTIONS NT  inner join CORE_MEMBER_BANKS CMB on   NT.DR_SORT_CODE = CMB.BIC_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1680587871240$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1674563799011~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563799011$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT,  ADDITIONAL_INFO from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE,   $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE,   $SQ$-$SQ$,   T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE,   $SQ$-$SQ$,   CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE,   $SQ$-$SQ$,   CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674564114997~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674564114997$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  DBTRIBAN,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  BANK_NAME,  CUSTOMER_POSTING_RESTRICTION_CODE,  CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,  ACCOUNT_NUMBER,  ACCOUNT_NAME,  RESTRICTION_DESC,  POSTING_RESTRICTION_CODE,  INTRBK_STTLM_CUR,  ACCOUNT_CURRENCY,  BUY_CURRENCY,  SELL_CURRENCY,  CONTRA_AMOUNT,  DEALT_AMOUNT,  NPSSTPL_ID,  DT_CODE,  DTT_CODE,  FORCE_POST_FLAG,  VALUEDATEMI,  org_pay_endtoend_id from  (  select   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN as DBTRIBAN,   NT.CDTR_ACCT_NAME as DBTRACCTNAME,   NT.CR_SORT_CODE as DRSORTCODE,   NT.CLRSYSREF,   NT.INTRBK_STTLM_CUR,   NT.PAYMENT_ENDTOEND_ID,   NT.DBTR_IBAN as CDTRIBAN,   NT.DBTR_ACCT_NAME as CDTRACCTNAME,   NT.DR_SORT_CODE as CRSORTCODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   NT.ACCOUNT_CURRENCY,   CNCA.CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,   CNCA.CUSTOMER_POSTING_RESTRICTION_CODE,   case    when CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$, $SQ$VA.BBAN$SQ$) then CNCA.ACCOUNT_NUMBER    else null   end as ACCOUNT_NUMBER,   case    when CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$, $SQ$VA.BBAN$SQ$) then CNCA.ACCOUNT_NAME    else null   end as ACCOUNT_NAME,   CNCA.POSTING_RESTRICTION_CODE,   CMB.BANK_NAME,   NT.NPSST_ID::text as TNPSST_ID,   CNCPR.RESTRICTION_ID,   CNCPR.RESTRICTION_DESC,   PL.BUY_CURRENCY,   PL.SELL_CURRENCY,   PL.CONTRA_AMOUNT,   PL.DEALT_AMOUNT,   PL.NPSSTPL_ID,   PL.DT_CODE,   PL.ADDITIONAL_INFO,   NT.org_pay_endtoend_id,   case    when PL.STATUS = $SQ$OP_RCT_REV_DEAL_RECEIVED$SQ$ then $SQ$Y$SQ$    else $SQ$others$SQ$   end as STATUS,   PL.DTT_CODE,   NT.FORCE_POST_FLAG,   TO_CHAR(NT.VALUE_DATE, $SQ$YYYY-MM-DD$SQ$) as VALUEDATEMI  from   <TRAN_DB>.NPSS_TRANSACTIONS NT  left join CORE_NC_CBS_ACCOUNTS CNCA on   NT.DBTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID  inner join CORE_MEMBER_BANKS CMB on   NT.CR_SORT_CODE = CMB.BIC_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_POST_RESTRICTIONS CNCPR on   CNCPR.RESTRICTION_ID = CNCA.POSTING_RESTRICTION_CODE  left join <TRAN_DB>.NPSS_TRN_PROCESS_LOG PL on   PL.ADDITIONAL_INFO = NT.UETR) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~E_1680587939881~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1680588471565~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1680588471565$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  CDTR_IBAN,  CDTR_ACCT_NAME,  PROCESS_REF_NO,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  VALUEDATEMI,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE from  (  select   NT.DISPUTE_REF_NO,   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN,   NT.CDTR_ACCT_NAME,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.DBTR_IBAN,   NT.DBTR_ACCT_NAME,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   TO_CHAR(NT.VALUE_DATE,   $SQ$YYYY-MM-DD$SQ$) as VALUEDATEMI,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   CMB.BANK_NAME,   NTPL.PROCESS_REF_NO,   NTPL.CHARGE_AMOUNT,   NT.UETR,   NTPL.STATUS,   NTPL.PROCESS_STATUS,   TO_CHAR(NT.CREATED_DATE,   $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   NT.DEPARTMENT_CODE,   NT.NPSST_ID::text as TNPSST_ID  from   <TRAN_DB>.NPSS_TRANSACTIONS NT  inner join CORE_MEMBER_BANKS CMB on   NT.DR_SORT_CODE = CMB.BIC_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL on   NT.UETR = NTPL.UETR) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1680587939881$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563260377~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563260377$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.PROCESS_GROUP,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.PROCESS_TYPE,   NT.DBTR_IBAN  from   <TRAN_DB>.NPSS_TRANSACTIONS NT  inner join <TRAN_DB>.TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join  CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563555106~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563555106$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  TRAN_INFO,  ACCOUNT_CURRENCY,  SELL_MARGIN,  SELL_RATE,  FORCE_POST_FLAG,  CUST_SPLRATE_FLAG FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,$SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.CR_ACCT_IDENTIFICATION,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.PROCESS_GROUP,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    CASE        WHEN A.DBTR_IBAN IS NULL THEN $SQ$$SQ$        ELSE A.DBTR_IBAN    END AS DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM,    A.TRAN_INFO,    A.ACCOUNT_CURRENCY,    A.SELL_MARGIN,    A.SELL_RATE,    A.FORCE_POST_FLAG,    A.CUST_SPLRATE_FLAG   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   INNER JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1674563911672~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563911672$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~E_1672490213838~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1680591058937~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1680591058937$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  DBTRIBAN,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  VALUEDATEMI,  BANK_NAME,  CUSTOMER_POSTING_RESTRICTION_CODE,  CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,  ACCOUNT_NUMBER,  ACCOUNT_NAME,  RESTRICTION_DESC,  POSTING_RESTRICTION_CODE,  INTRBK_STTLM_CUR,  ACCOUNT_CURRENCY,  FORCE_POST_FLAG,  org_pay_endtoend_id from  (  select   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN as DBTRIBAN,   TO_CHAR(NT.VALUE_DATE, $SQ$YYYY-MM-DD$SQ$) as VALUEDATEMI,   NT.CDTR_ACCT_NAME as DBTRACCTNAME,   NT.CR_SORT_CODE as DRSORTCODE,   NT.CLRSYSREF,   NT.INTRBK_STTLM_CUR,   NT.PAYMENT_ENDTOEND_ID,   NT.DBTR_IBAN as CDTRIBAN,   NT.DBTR_ACCT_NAME as CDTRACCTNAME,   NT.DR_SORT_CODE as CRSORTCODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   NT.ACCOUNT_CURRENCY,   CNCA.CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,   CNCA.CUSTOMER_POSTING_RESTRICTION_CODE,   case    when CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$, $SQ$VA.BBAN$SQ$) then CNCA.ACCOUNT_NUMBER    else null   end as ACCOUNT_NUMBER,   case    when CNCA.ALTERNATE_ACCOUNT_TYPE in ($SQ$VA.IBAN$SQ$, $SQ$VA.BBAN$SQ$) then CNCA.ACCOUNT_NAME    else null   end as ACCOUNT_NAME,   NT.org_pay_endtoend_id,   CNCA.POSTING_RESTRICTION_CODE,   CMB.BANK_NAME,   NT.NPSST_ID::text as TNPSST_ID,   CNCPR.RESTRICTION_ID,   CNCPR.RESTRICTION_DESC,   NT.FORCE_POST_FLAG  from   <TRAN_DB>.NPSS_TRANSACTIONS NT  left join CORE_NC_CBS_ACCOUNTS CNCA on   NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID  inner join CORE_MEMBER_BANKS CMB on   NT.CR_SORT_CODE = CMB.BIC_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_POST_RESTRICTIONS CNCPR on   CNCPR.RESTRICTION_ID = CNCA.POSTING_RESTRICTION_CODE) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1672490213838$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563699965~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563699965$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   INNER JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~E_1672490155998~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1680588169381~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1680588169381$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE,  CDTR_IBAN,  CDTR_ACCT_NAME,  CURRENCY,  PROCESS_REF_NO,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  VALUEDATEMI,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE,  GM_MARGIN,  EXCHANGE_RATE,  TRAN_CHARGE,  fx_Resv_text2,  org_pay_endtoend_id,  fx_resv_text4,  additional_info from  (  select   NT.DISPUTE_REF_NO,   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN,   NT.CDTR_ACCT_NAME,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.DBTR_IBAN,   NT.DBTR_ACCT_NAME,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   CNCA.CURRENCY,   CMB.BANK_NAME,   TO_CHAR(NT.VALUE_DATE, $SQ$YYYY-MM-DD$SQ$) as VALUEDATEMI,   NTPL.PROCESS_REF_NO,   NTPL.CHARGE_AMOUNT,   NT.UETR,   NTPL.STATUS,   NTPL.PROCESS_STATUS,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   NT.DEPARTMENT_CODE,   NT.NPSST_ID::text as TNPSST_ID,   PL.EXCHANGE_RATE,   PL.GM_MARGIN,   NT.TRAN_CHARGE,   NT.fx_Resv_text2,   NT.org_pay_endtoend_id,   NT.fx_resv_text4,   NTP.additional_info  from   <TRAN_DB>.NPSS_TRANSACTIONS NT  left join CORE_NC_CBS_ACCOUNTS CNCA on   NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID  inner join CORE_MEMBER_BANKS CMB on   NT.CR_SORT_CODE = CMB.BIC_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTPL on   NT.UETR = NTPL.UETR  left join <TRAN_DB>.NPSS_TRN_PROCESS_LOG NTP on   NT.UETR = NTP.UETR   and NTP.PROCESS_NAME = $SQ$Initiate Dispute Tran$SQ$  left join <TRAN_DB>.NPSS_TRN_PROCESS_LOG PL on   NT.UETR = PL.UETR   and PL.STATUS = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and PL.PROCESS_NAME = $SQ$Get Deal$SQ$) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1672490155998$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1678779853154_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678866701508~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866701508$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   INNER JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_26$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678866785078~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866785078$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  FN_PCIDSS_DECRYPT(DBTR_ACCT_NO,    $PCIDSS_KEY) AS DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  CATEGORY_PURPOSE,  ISSUER_TYPE_CODE,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  FN_PCIDSS_DECRYPT(CR_ACCT_IDENTIFICATION,    $PCIDSS_KEY) AS CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM,  VALUEDATEMI FROM  (SELECT A.NPSST_ID,    A.VALUE_DATE,    TO_CHAR(A.VALUE_DATE,      $SQ$YYYY-MM-DD$SQ$) AS VALUEDATEMI,    A.MODIFIED_DATE_UTC,    A.CREATED_DATE,    TO_CHAR(A.CREATED_DATE,      $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,    A.CDTR_ACCT_NO,    A.CDTR_ACCT_NAME,    A.INTRBK_STTLM_AMNT,    A.INTRBK_STTLM_CUR,    A.DBTR_ACCT_NO,    A.DBTR_ACCT_NAME,    A.DR_SORT_CODE,    A.CR_SORT_CODE,    A.DEPARTMENT_CODE,    A.UETR,    A.CATEGORY_PURPOSE,    A.ISSUER_TYPE_CODE,    A.HDR_MSG_ID,    A.PRODUCT_CODE,    A.CHANNEL_ID,    A.CHANNEL_REFNO,    A.CHANNEL_PRODUCT,    A.CHANNEL_SUB_PRODUCT,    A.CHANNEL_TRAN_CODE,    A.PROCESS_TYPE,    A.DBTR_PHONE_NO,    A.DBTR_EMAIL_ID,    A.DBTR_DOCUMENT_ID,    A.DBTR_IBAN,    A.CDTR_PHONE_NO,    A.CDTR_EMAIL_ID,    A.CDTR_DOCUMENT_ID,    A.CDTR_IBAN,    A.CLRSYSREF,    A.PAYMENT_ENDTOEND_ID,    A.TRAN_REF_ID,    A.ACCP_DATE_TIME,    A.EXHF_ID,    A.REMITTANCE_INFO,    A.INWARD_FILE_NAME,    A.PROCESS_STATUS,    A.CBS_REF_NO,    A.STATUS,    A.DT_CODE,    A.DTT_CODE,    A.TENANT_ID,    A.VERSION_NO,    A.DBTR_PRVT_ID,    A.DBTR_OTHER_ISSUER,    A.CR_ACCT_IDENTIFICATION,    TS.TS_ID,    TS.LOCKED_BY,    TS.LOCKED_BY_NAME,    A.PROCESSING_SYSTEM   FROM <TRAN_DB>.NPSS_TRANSACTIONS A   INNER JOIN <TRAN_DB>.TRANSACTION_SET TS ON TS.TRN_ID = A.NPSST_ID   AND TS.DTT_CODE = A.DTT_CODE   ORDER BY A.NPSST_ID DESC) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_27$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1678866570423~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866570423$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT,  ADDITIONAL_INFO from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE,   $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE,   $SQ$-$SQ$,   T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE,   $SQ$-$SQ$,   CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE,   $SQ$-$SQ$,   CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   <TRAN_DB>.NPSS_TRN_PROCESS_LOG A  left join CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_15$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679038709562~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679039315939~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679039315939$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$, $SQ$Create Pacs008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name in ($SQ$Place Pacs004$SQ$, $SQ$Download Pacs004$SQ$) then $SQ$pacs.004$SQ$   end as type,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$)    and nt.process_type = $SQ$OP$SQ$ then $SQ$Total$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$)    and nt.process_type = $SQ$OP$SQ$ then $SQ$Total$SQ$    when (nt.process_type = $SQ$IP$SQ$    and ntpl.process_name in ($SQ$Place Pacs004$SQ$))    or (nt.process_type = $SQ$OP$SQ$    and ntpl.process_name in ($SQ$Download Pacs004$SQ$)) then $SQ$Total$SQ$    else $SQ$OTHER$SQ$   end as Pending_Detais_OP  from   npss_transactions nt  inner join (   select    distinct z.process_name,    z.created_date,    z.uetr   from    npss_trn_process_log z   where    date(Z.created_date) = current_date    and (z.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$, $SQ$Place Pacs004$SQ$, $SQ$Download Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on   ntpl.uetr = nt.uetr   and date(nt.created_date) = current_date ) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   ntpl.process_name,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$, $SQ$Create Pacs008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name in ($SQ$Place Pacs004$SQ$, $SQ$Download Pacs004$SQ$) then $SQ$pacs.004$SQ$   end as type,   case    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$RIB$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$RIB$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))      or (nt.process_type = $SQ$OP$SQ$       and nt.channel_id = $SQ$RIB$SQ$       and ntpl.process_name in ($SQ$Download Pacs004$SQ$))) then $SQ$RIB$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$CMS$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$CMS$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))      or (nt.process_type = $SQ$OP$SQ$       and nt.channel_id = $SQ$CMS$SQ$       and ntpl.process_name in ($SQ$Download Pacs004$SQ$))) then $SQ$CMS$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$NFR$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$NFR$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))      or (nt.process_type = $SQ$OP$SQ$       and nt.channel_id = $SQ$NFR$SQ$       and ntpl.process_name in ($SQ$Download Pacs004$SQ$))) then $SQ$NFR$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$IPP$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$IPP$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))      or (nt.process_type = $SQ$OP$SQ$       and nt.channel_id = $SQ$IPP$SQ$       and ntpl.process_name in ($SQ$Download Pacs004$SQ$))) then $SQ$IPP$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$MOB$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$MOB$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))      or (nt.process_type = $SQ$OP$SQ$       and nt.channel_id = $SQ$MOB$SQ$       and ntpl.process_name in ($SQ$Download Pacs004$SQ$))) then $SQ$MOB$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$MBL$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$MBL$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))      or (nt.process_type = $SQ$OP$SQ$       and nt.channel_id = $SQ$MBL$SQ$       and ntpl.process_name in ($SQ$Download Pacs004$SQ$))) then $SQ$MBL$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$AANI$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$AANI$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))      or (nt.process_type = $SQ$OP$SQ$       and nt.channel_id = $SQ$AANI$SQ$       and ntpl.process_name in ($SQ$Download Pacs004$SQ$))) then $SQ$AANI$SQ$    when ((nt.process_type = $SQ$OP$SQ$     and nt.channel_id = $SQ$GCN$SQ$     and NTPL.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$))     or (nt.process_type = $SQ$IP$SQ$      and nt.channel_id = $SQ$GCN$SQ$      and NTPL.process_name in ($SQ$Place Pacs004$SQ$))      or (nt.process_type = $SQ$OP$SQ$       and nt.channel_id = $SQ$GCN$SQ$       and ntpl.process_name in ($SQ$Download Pacs004$SQ$))) then $SQ$GCN$SQ$    else $SQ$OTHER$SQ$   end as Pending_Detais_OP  from   npss_transactions nt  inner join (   select    distinct z.process_name,    z.created_date,    z.uetr   from    npss_trn_process_log z   where    date(Z.created_date) = current_date     and (z.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$, $SQ$Place Pacs004$SQ$, $SQ$Download Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on   ntpl.uetr = nt.uetr    and date(nt.created_date) = current_date ) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   ntpl.process_name,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$, $SQ$Create Pacs008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name in ($SQ$Place Pacs004$SQ$, $SQ$Download Pacs004$SQ$) then $SQ$pacs.004$SQ$   end as type,   case    when nt.process_type::text = $SQ$OP$SQ$::text     and ntpl.process_name::text = $SQ$Place Pacs008$SQ$     and nt.status in ($SQ$OP_P2B_PAYMENT_INITIATED$SQ$, $SQ$OP_P2P_PAYMENT_INITIATED$SQ$, $SQ$OP_BCT_FILE_UPLOADED$SQ$) then $SQ$Manual$SQ$     when nt.process_type::text = $SQ$OP$SQ$::text      and ntpl.process_name::text = $SQ$Place Pacs.007$SQ$      and nt.status in ($SQ$OP_AC_REV_MAN_CLOSED$SQ$) then $SQ$Manual$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_OP    from     npss_transactions nt    inner join (     select      distinct z.process_name,      z.created_date,      z.uetr     from      npss_trn_process_log z     where      date(Z.created_date) = current_date       and (z.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$, $SQ$Download Pacs004$SQ$, $SQ$Place Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on     ntpl.uetr = nt.uetr      and date(nt.created_date) = current_date ) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   ntpl.process_name,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name in ($SQ$Place Pacs004$SQ$, $SQ$Download Pacs004$SQ$) then $SQ$pacs.004$SQ$   end as type,   case    when nt.process_type::text = $SQ$OP$SQ$::text     and ((ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$)      and nt.status in ($SQ$OP_P2P_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REQ_RECEIVED$SQ$, $SQ$OP_AC_REQ_INVEST_INITIATED$SQ$, $SQ$OP_BCT_REV_POSTING_FAILURE$SQ$))      or nt.process_type::text = $SQ$IP$SQ$::text      and (ntpl.process_name = $SQ$Place Pacs004$SQ$       and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_SUSPICIOUS$SQ$))       or nt.process_type = $SQ$OP$SQ$       and (ntpl.process_name in ($SQ$Download Pacs004$SQ$)        and nt.status in($SQ$OP_BCT_RTN_POSTING_FAILURE$SQ$))        or nt.process_type::text = $SQ$OP$SQ$::text        and (ntpl.process_name = $SQ$Place Pacs.007$SQ$         and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_AC_REV_POSTING_SUSPICIOUS$SQ$, $SQ$OP_P2P_REV_POSTING_SUSPICIOUS$SQ$))) then $SQ$Pending (Maker)$SQ$     when nt.process_type::text = $SQ$OP$SQ$::text      and ((ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$)       and nt.status in ($SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$, $SQ$OP_RCT_MAN_APPROVED$SQ$, $SQ$OP_BCT_REV_POSTING_RETRY$SQ$, $SQ$OP_BCT_REV_FP_INITIATED$SQ$))       or nt.process_type::text = $SQ$IP$SQ$::text       and (ntpl.process_name = $SQ$Place Pacs004$SQ$        and nt.status in ($SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_RR_POSTING_SUCCESS$SQ$))        or nt.process_type = $SQ$OP$SQ$        and (ntpl.process_name in ($SQ$Download Pacs004$SQ$)         and nt.status in($SQ$OP_BCT_RTN_POSTING_RETRY$SQ$, $SQ$OP_BCT_RTN_FP_INITIATED$SQ$))         or nt.process_type::text = $SQ$OP$SQ$::text         and (ntpl.process_name = $SQ$Place Pacs.007$SQ$          and nt.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$, $SQ$OP_REVERSAL_REQ_APPROVED$SQ$, $SQ$OP_AC_REV_FP_INITIATED$SQ$, $SQ$OP_RCT_RET_RESERVED$SQ$))) then $SQ$Pending (Checker)$SQ$      when nt.process_type::text = $SQ$OP$SQ$::text       and ntpl.process_name = $SQ$Place Pacs008$SQ$       and nt.status in ($SQ$OP_P2B_FILE_PLACED$SQ$, $SQ$OP_AC_FILE_PLACED$SQ$) then $SQ$SEND TO CB$SQ$       when nt.process_type::text = $SQ$IP$SQ$::text        and ntpl.process_name = $SQ$Place Pacs004$SQ$        and nt.status in ($SQ$IP_RCT_RETURNED$SQ$, $SQ$IP_RCT_REVREQ_REJ_REPLIED$SQ$, $SQ$IP_RCT_RR_RETURNED$SQ$) then $SQ$SEND TO CB$SQ$        when nt.process_type::text = $SQ$OP$SQ$::text         and ntpl.process_name = $SQ$Place Pacs008$SQ$         and nt.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$, $SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_RCT_REVERSAL_REJECTED$SQ$, $SQ$OP_P2B_STATUS_ACCEPTED$SQ$, $SQ$OP_AC_STATUS_ACCEPTED$SQ$, $SQ$OP_P2P_STATUS_ACCEPTED$SQ$, $SQ$OP_RETURNED$SQ$) then $SQ$CBACK$SQ$         when nt.process_type::text = $SQ$IP$SQ$::text          and ntpl.process_name = $SQ$Place Pacs004$SQ$          and nt.status in ($SQ$IP_RCT_RETURN_COMPLETED$SQ$, $SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_SUCCESS$SQ$) then $SQ$CBACK$SQ$          when nt.process_type::text = $SQ$OP$SQ$::text           and ntpl.process_name = $SQ$Place Pacs008$SQ$           and nt.status in ($SQ$OP_P2P_REV_POSTING_SUCCESS$SQ$, $SQ$OP_P2B_REV_POSTING_SUCCESS$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_STATUS_REJECTED$SQ$, $SQ$OP_AC_REV_POSTING_SUCCESS$SQ$, $SQ$OP_P2P_STATUS_REJECTED$SQ$, $SQ$OP_P2B_STATUS_REJECTED$SQ$) then $SQ$CBNACK$SQ$           when nt.process_type::text = $SQ$IP$SQ$::text            and ntpl.process_name = $SQ$Place Pacs004$SQ$            and nt.status in ($SQ$IP_RCT_RETURN_REJECTED$SQ$, $SQ$IP_RCT_STATUS_RECEIVED$SQ$) then $SQ$CBNACK$SQ$            when nt.process_type::text = $SQ$OP$SQ$::text             and ntpl.process_name = $SQ$Place Pacs.007$SQ$             and nt.status in ($SQ$OP_RCT_REVERSAL_REJECTED$SQ$) then $SQ$CBNACK$SQ$             else $SQ$OTHER$SQ$            end as Pending_Detais_OP           from            npss_transactions nt           inner join (            select             distinct z.process_name,             z.created_date,             z.uetr            from             npss_trn_process_log z            where             date(z.created_date) = current_date              and (z.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs.007$SQ$, $SQ$Place Pacs004$SQ$, $SQ$Download Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on            ntpl.uetr = nt.uetr             and date(nt.created_date) = current_date ) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_OP,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.payment_endtoend_id,   nt.channel_refno,   nt.dbtr_iban,   nt.tenant_id,   ntpl.process_name,   case    when ntpl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$, $SQ$Create Pacs008$SQ$) then $SQ$pacs.008$SQ$    when ntpl.process_name in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$    when ntpl.process_name in ($SQ$Place Pacs004$SQ$, $SQ$Download Pacs004$SQ$) then $SQ$pacs.004$SQ$   end as type,   case    when nt.process_type::text = $SQ$OP$SQ$::text     and (ntpl.process_name = $SQ$Place Pacs008$SQ$      and nt.status in ($SQ$OP_P2P_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REQ_INVEST_INITIATED$SQ$, $SQ$OP_AC_REQ_RECEIVED$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$, $SQ$OP_RCT_MAN_APPROVED$SQ$, $SQ$OP_BCT_TRAN_CREATED$SQ$, $SQ$OP_BCT_FILE_READY$SQ$)) then $SQ$Pending (T-1)$SQ$     when nt.process_type::text = $SQ$IP$SQ$::text      and (ntpl.process_name = $SQ$Place Pacs004$SQ$       and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_RR_POSTING_SUCCESS$SQ$)) then $SQ$Pending (T-1)$SQ$      when nt.process_type::text = $SQ$OP$SQ$::text       and (ntpl.process_name = $SQ$Place Pacs.007$SQ$        and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_AC_REV_POSTING_SUSPICIOUS$SQ$, $SQ$OP_P2P_REV_POSTING_SUSPICIOUS$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$, $SQ$OP_REVERSAL_REQ_APPROVED$SQ$, $SQ$OP_AC_REV_FP_INITIATED$SQ$, $SQ$OP_RCT_RET_RESERVED$SQ$)) then $SQ$Pending (T-1)$SQ$       else $SQ$OTHER$SQ$      end as Pending_Detais_OP     from      (      select       a.npsst_id,       a.department_code ,       a.UETR,       a.created_date ,       a.process_type ,       a.intrbk_sttlm_cur ,       a.intrbk_sttlm_amnt ,       a.cdtr_iban ,       a.cr_acct_identification ,       a.payment_endtoend_id,       a.channel_refno,       a.dbtr_iban,       a.tenant_id,       a.status,       a.process_status      from       npss_transactions a      where       date(a.created_date) < current_date        and a.status in ($SQ$OP_P2P_REV_POSTING_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REQ_INVEST_INITIATED$SQ$, $SQ$OP_AC_REQ_RECEIVED$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$, $SQ$OP_RCT_MAN_APPROVED$SQ$, $SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_RR_POSTING_SUCCESS$SQ$, $SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_AC_REV_POSTING_SUSPICIOUS$SQ$, $SQ$OP_P2P_REV_POSTING_SUSPICIOU S$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$, $SQ$OP_REVERSAL_REQ_APPROVED$SQ$, $SQ$OP_AC_REV_FP_INITIATED$SQ$, $SQ$OP_RCT_RET_RESERVED$SQ$)) nt     inner join (      select       distinct z1.process_name,       z1.created_date,       z1.uetr      from       npss_trn_process_log z1      where       date(z1.created_date) < current_date        and z1.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Create Pacs008$SQ$, $SQ$Place Pacs004$SQ$, $SQ$Place Pacs.007$SQ$, $SQ$Download Pacs004$SQ$)) ntpl on      ntpl.uetr = nt.uetr ) v where  Pending_Detais_OP <> $SQ$OTHER$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679038709562$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678787742404~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678787742404$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESS_STATUS) as PROCESS_STATUS_COUNT,  PROCESS_TYPE,  PROCESS_STATUS,  createddate from  (  select   T.CREATED_DATE,   T.PROCESS_TYPE ,   T.TENANT_ID,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS,   date(t.created_date) as createddate  from   NPSS_TRANSACTIONS T  where   date(T.created_date) = current_date) V $WHERE  group by  PROCESS_STATUS,  PROCESS_TYPE,  createddate$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_13$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679038751136~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679039201469~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679039201469$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  npsst_id,  uetr,  CREATED_DATE,  PROCESS_TYPE,  PROCESS_STATUS,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  dbtr_iban,  DATEMI,  createddate,  payment_endtoend_id,  channel_refno from  (  select   t.npsst_id,   t.uetr,   T.CREATED_DATE,   TO_CHAR(T.CREATED_DATE,   $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   T.PROCESS_TYPE ,   T.TENANT_ID,   t.intrbk_sttlm_cur ,   t.intrbk_sttlm_amnt ,   t.cdtr_iban ,   t.cr_acct_identification ,   t.dbtr_iban ,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS,   date(t.created_date) as createddate,   t.payment_endtoend_id,   t.channel_refno  from   NPSS_TRANSACTIONS T  where   date(T.created_date) = current_date) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679038751136$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1681974282490~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681974282490$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  X.Pending_Detais,  X.p_count,  X.TYPE from  (  select   A.type,   case    when A.type = $SQ$pacs.008$SQ$    and b.sno is null then 1    when A.type = $SQ$pacs.004$SQ$    and b.sno is null then 2    when A.type = $SQ$pacs.007$SQ$    and b.sno is null then 3    else b.sno   end sno,   coalesce(b.total, 0) as total,   coalesce(b.Pending_Screening, 0) as Pending_Screening,   coalesce(b.PENDING_MAKER, 0) as PENDING_MAKER,   coalesce(b.PENDING_CHECKER, 0) as PENDING_CHECKER,   coalesce(b.payment_rejected, 0) as payment_rejected,   coalesce(b.successfullyposted, 0) as successfullyposted,   coalesce(b.pending_returns_maker, 0) as pending_returns_maker,   coalesce(b.pending_returns_checker, 0) as pending_returns_checker,   coalesce(b.returned, 0) as returned,   coalesce(b.Pending_T_1, 0) as Pending_T_1,   to_char(CURRENT_DATE::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text)::timestamp without time zone as created_date  from   (   select    $SQ$pacs.008$SQ$ as type  union   select    $SQ$pacs.004$SQ$ as type  union   select    $SQ$pacs.007$SQ$ as type) A  left join (   select    sno,    type,    sum(total) as total,    sum(pending_maker) as pending_maker,    sum(pending_checker) as pending_checker,    sum(payment_rejected) as payment_rejected,    sum(pending_screening) as pending_screening,    sum(successfullyposted) as successfullyposted,    sum(pending_returns_maker) as pending_returns_maker,    sum(pending_returns_checker) as pending_returns_checker,    sum(returned) as returned,    sum(pending_t_1) as pending_t_1,    created_date   from    (    select     sno,     type,     total,     pending_maker,     pending_checker,     payment_rejected,     pending_screening,     successfullyposted,     pending_returns_maker,     pending_returns_checker,     returned,     pending_t_1,     created_date,     DEPARTMENT_CODE,     TENANT_ID    from     npss_vw_dashboard_inward_data) T $WHERE   group by    SNO,    type,    CREATED_DATE) B on   B.type = A.type  order by   sno ) AB cross join lateral( values ($SQ$Total$SQ$, AB.total, AB.TYPE), ($SQ$Pending Screening$SQ$, AB.Pending_Screening, AB.TYPE), ($SQ$Pending (Maker)$SQ$, AB.PENDING_MAKER, AB.TYPE), ($SQ$Pending (Checker)$SQ$, AB.PENDING_CHECKER, AB.TYPE), ($SQ$Payment Rejected$SQ$, AB.payment_rejected, AB.TYPE), ($SQ$successfullyposted$SQ$, AB.successfullyposted, AB.TYPE), ($SQ$pending returns maker$SQ$, AB.pending_returns_maker, AB.TYPE), ($SQ$pending returns checker$SQ$, AB.pending_returns_checker, AB.TYPE), ($SQ$returned$SQ$, AB.returned, AB.TYPE), ($SQ$Pending (T-1)$SQ$, AB.Pending_T_1, AB.TYPE)) X (Pending_Detais,  p_count,  type ) where  p_count not in ($SQ$0$SQ$)$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_38$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679651226917~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679651486228~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679651486228$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when ntpl.process_name in ($SQ$Receive Pacs008$SQ$)    and nt.process_type = $SQ$IP$SQ$ then $SQ$Total$SQ$    when ntpl.process_name in ($SQ$Receive Pacs.007$SQ$)    and nt.process_type = $SQ$IP$SQ$ then $SQ$Total$SQ$    when ntpl.process_name in ($SQ$Receive Pacs004$SQ$)    and nt.process_type = $SQ$OP$SQ$ then $SQ$Total$SQ$    else $SQ$OTHER$SQ$   end as Pending_Detais_IP  from   npss_transactions nt  inner join (   select    distinct z.process_name,    z.created_date,    z.uetr   from    npss_trn_process_log z    where date(Z.created_date) = current_date    and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on   ntpl.uetr = nt.uetr   and  date(nt.created_date) = current_date   ) v where  Pending_Detais_ip <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and NT.STATUS = $SQ$IP_RCT_RECEIVED$SQ$ then $SQ$Pending Screening$SQ$     else $SQ$OTHER$SQ$    end as Pending_Detais_IP   from    npss_transactions nt   inner join (    select     distinct z.process_name,     z.created_date,     z.uetr    from     npss_trn_process_log z    where date(z.created_date) = current_date      and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on    ntpl.uetr = nt.uetr     and date(nt.created_date) = current_date     ) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$OP$SQ$     and ntpl.process_name = $SQ$Receive Pacs004$SQ$     and nt.status = $SQ$OP_AC_RET_RECEIVED$SQ$ then $SQ$returned$SQ$     when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs.007$SQ$     and nt.status = $SQ$IP_RCT_RR_RETURNED$SQ$ then $SQ$returned$SQ$     when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and nt.status in ($SQ$IP_RCT_RETURN_COMPLETED$SQ$, $SQ$IP_BCT_RETURN_FILE_UPLOADED$SQ$, $SQ$IP_RCT_MANUAL_RETURNED$SQ$, $SQ$IP_RCT_RETURNED$SQ$) then $SQ$returned$SQ$     else $SQ$OTHER$SQ$    end as Pending_Detais_IP   from    npss_transactions nt   inner join (    select     distinct z.process_name,     z.created_date,     z.uetr    from     npss_trn_process_log z    where date(z.created_date) = current_date      and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on    ntpl.uetr = nt.uetr     and date(nt.created_date) = current_date     ) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and nt.status in ($SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_CC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUCCESS$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_POSTING_FAILURE$SQ$) then $SQ$Pending (Maker)$SQ$     when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs004$SQ$      and nt.status = $SQ$OP_AC_RET_POSTING_FAILURE$SQ$ then $SQ$Pending (Maker)$SQ$      when nt.process_type = $SQ$IP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.007$SQ$      and (nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$)) then $SQ$Pending (Maker)$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_IP    from     npss_transactions nt    inner join (     select      distinct z.process_name,      z.created_date,      z.uetr     from      npss_trn_process_log z     where date(z.created_date) = current_date       and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on     ntpl.uetr = nt.uetr      and  date(nt.created_date) = current_date      ) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and nt.status in ($SQ$IP_RCT_POSTING_RETRY$SQ$, $SQ$IP_RCT_AUTO_POSTING_INITIATED$SQ$, $SQ$IP_RCT_POSTING_REPOST$SQ$) then $SQ$Pending (Checker)$SQ$     when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs004$SQ$      and (nt.status = $SQ$OP_AC_RET_POSTING_RETRY$SQ$ ) then $SQ$Pending (Checker)$SQ$      when nt.process_type = $SQ$IP$SQ$       and ntpl.process_name = $SQ$Receive Pacs.007$SQ$       and (nt.status in ($SQ$IP_RCT_RR_RETURN_READY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_POSTING_FAILURE$SQ$)) then $SQ$Pending (Checker)$SQ$       else $SQ$OTHER$SQ$      end as Pending_Detais_IP     from      npss_transactions nt     inner join (      select       distinct z.process_name,       z.created_date,       z.uetr      from       npss_trn_process_log z      where date(z.created_date) = current_date        and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on      ntpl.uetr = nt.uetr       and  date(nt.created_date) = current_date       ) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and nt.status in ($SQ$IP_RCT_STATUS_REPLIED$SQ$, $SQ$IP_RCT_MAN_CLOSED$SQ$) then $SQ$Payment Rejected$SQ$     when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs004$SQ$      and nt.status = $SQ$OP_RCT_REVERSAL_REJECTED$SQ$ then $SQ$Payment Rejected$SQ$      when nt.process_type = $SQ$IP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.007$SQ$      and nt.status in ($SQ$IP_RCT_REVREQ_REJ_REPLIED$SQ$, $SQ$IP_RCT_RR_MAN_CLOSED$SQ$, $SQ$IP_RCT_RR_POSTING_RETRY$SQ$) then $SQ$Payment Rejected$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_IP    from     npss_transactions nt    inner join (     select      distinct z.process_name,      z.created_date,      z.uetr     from      npss_trn_process_log z     where date(z.created_date) = current_date       and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on     ntpl.uetr = nt.uetr      and date(nt.created_date) = current_date      ) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and (nt.status = any (array[$SQ$IP_RCT_PC_T24_POSTING_SUCCESS$SQ$,     $SQ$IP_RCT_POSTING_SUCCESS$SQ$,     $SQ$IP_RCT_CC_POSTING_SUCCESS$SQ$,     $SQ$IP_RCT_ALREADY_POSTED$SQ$,     $SQ$IP_RCT_CC_T24_POSTING_SUCCESS$SQ$,     $SQ$IP_RCT_RETURN_POSTING_SUCCESS$SQ$])) then $SQ$successfullyposted$SQ$     when nt.process_type = $SQ$IP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.007$SQ$      and nt.status = $SQ$IP_RCT_RR_POSTING_SUCCESS$SQ$ then $SQ$successfullyposted$SQ$      when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.004$SQ$      and nt.status in ($SQ$OP_AC_RET_POSTING_SUCCESS$SQ$, $SQ$OP_AC_REV_POSTING_SUCCESS$SQ$, $SQ$OR_P2P_POSTING_SUCCESS$SQ$) then $SQ$successfullyposted$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_IP    from     npss_transactions nt    inner join (     select      distinct z.process_name,      z.created_date,      z.uetr     from      npss_trn_process_log z     where date(z.created_date) = current_date      and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on     ntpl.uetr = nt.uetr      and  date(nt.created_date) = current_date      ) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and (nt.status = any (array[$SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$,     $SQ$IP_RCT_RETURN_POSTING_SUCCESS$SQ$ ])) then $SQ$pending returns maker$SQ$     when nt.process_type = $SQ$OP$SQ$      and ntpl.process_name = $SQ$Receive Pacs004$SQ$      and (nt.status = any (array[$SQ$OP_AC_RET_POSTING_FAILURE$SQ$,      $SQ$OP_AC_RET_AUTO_POSTING_INITIATED$SQ$,      $SQ$OP_AC_RET_POSTING_SUSPICIOUS$SQ$,      $SQ$OR_P2P_POSTING_FAILURE$SQ$,      $SQ$OR_P2P_POSTING_SUSPICIOUS$SQ$])) then $SQ$pending returns maker$SQ$      when nt.process_type = $SQ$OP$SQ$       and ntpl.process_name = $SQ$Receive Pacs004$SQ$       and (nt.status = any (array[$SQ$OP_AC_RET_POSTING_RETRY$SQ$,       $SQ$IP_RCT_RR_POSTING_RETRY$SQ$,       $SQ$OP_AC_RET_FP_APPROVED$SQ$,       $SQ$OP_AC_RET_FP_INITIATED$SQ$,       $SQ$OP_AC_RET_MAN_CLOSED$SQ$,       $SQ$OP_AC_RET_POSTING_SUCCESS$SQ$,       $SQ$OP_AC_REV_POSTING_SUCCESS$SQ$])) then $SQ$pending returns checker$SQ$       else $SQ$OTHER$SQ$      end as Pending_Detais_IP     from      npss_transactions nt     inner join (      select       distinct z.process_name,       z.created_date,       z.uetr      from       npss_trn_process_log z      where date(z.created_date) = current_date        and (z.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$, $SQ$PACS.008$SQ$, $SQ$PACS.007$SQ$))) ntpl on      ntpl.uetr = nt.uetr       and date(nt.created_date) = current_date       ) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND union select  distinct npsst_id,  uetr,  created_date,  type,  process_type,  Pending_Detais_ip,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  payment_endtoend_id,  channel_refno,  dbtr_iban from  (  select   nt.npsst_id,   nt.department_code ,   nt.UETR,   nt.created_date ,   nt.process_type ,   nt.intrbk_sttlm_cur ,   nt.intrbk_sttlm_amnt ,   nt.cdtr_iban ,   nt.cr_acct_identification ,   nt.dbtr_iban,   nt.tenant_id,   nt.payment_endtoend_id,   nt.channel_refno,   ntpl.process_name,   case    when ntpl.process_name = $SQ$Receive Pacs008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$Receive Pacs.007$SQ$ then $SQ$pacs.007$SQ$    when ntpl.process_name = $SQ$Receive Pacs004$SQ$ then $SQ$pacs.004$SQ$    when ntpl.process_name = $SQ$PACS.008$SQ$ then $SQ$pacs.008$SQ$    when ntpl.process_name = $SQ$PACS.007$SQ$ then $SQ$pacs.007$SQ$    else null   end as type,   case    when nt.process_type = $SQ$IP$SQ$     and ntpl.process_name = $SQ$Receive Pacs008$SQ$     and (nt.status in ($SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_CC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUCCESS$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_POSTING_FAILURE$SQ$, $SQ$IP_RCT_POSTING_RETRY$SQ$, $SQ$IP_RCT_AUTO_POSTING_INITIATED$SQ$, $SQ$IP_RCT_POSTING_REPOST$SQ$)) then $SQ$Pending (T-1)$SQ$     when nt.process_type = $SQ$IP$SQ$      and ntpl.process_name = $SQ$Receive Pacs.007$SQ$      and (nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_POSTING_FAILURE$SQ$)) then $SQ$Pending (T-1)$SQ$      else $SQ$OTHER$SQ$     end as Pending_Detais_IP    from     npss_transactions nt    inner join (     select      distinct z.process_name,      z.created_date,      z.uetr     from      npss_trn_process_log z     where date(z.created_date) < CURRENT_DATE       and z.process_name = $SQ$Receive Pacs008$SQ$) ntpl on     ntpl.uetr = nt.uetr     and date(nt.created_date) < CURRENT_DATE      and NT.PROCESS_TYPE = $SQ$IP$SQ$      and nt.status in ($SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_CC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUCCESS$SQ$, $SQ$IP_RCT_CC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_POSTING_FAILURE$SQ$, $SQ$IP_RCT_POSTING_RETRY$SQ$, $SQ$IP_RCT_AUTO_POSTING_INITIATED$SQ$, $SQ$IP_RCT_POSTING_REPOST$SQ$, $SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$, $SQ$IP_RCT_REV_REQ_APPROVED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_POSTING_FAILURE$SQ$)) v where  Pending_Detais_IP <> $SQ$OTHER$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679651226917$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678780847259~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678780847259$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT  TYPE,  $SQ$OP$SQ$ AS PTYPE,  CASE   WHEN TYPE = $SQ$pacs.008$SQ$ THEN 1   WHEN TYPE = $SQ$pacs.004$SQ$ THEN 2   WHEN TYPE = $SQ$pacs.007$SQ$ THEN 3   ELSE SNO  END SNO,  COALESCE(SUM(COALESCE(TOTAL, 0)),0) AS TOTAL,  COALESCE(SUM(COALESCE(RIB, 0)),0) AS RIB,  COALESCE(SUM(COALESCE(CMS, 0)),0) AS CMS,  COALESCE(SUM(COALESCE(NFR, 0)),0) AS NFR,  COALESCE(SUM(COALESCE(IPP, 0)),0) AS IPP,  COALESCE(SUM(COALESCE(MOB, 0)),0) AS MOB,  COALESCE(SUM(COALESCE(MBL, 0)),0) AS MBL,  COALESCE(SUM(COALESCE(AANI, 0)),0) AS AANI,  COALESCE(SUM(COALESCE(GCN, 0)),0) AS GCN,  COALESCE(SUM(COALESCE(MANUAL, 0)),0) AS MANUAL,  COALESCE(SUM(COALESCE(PENDING_SCREENING, 0)),0) AS PENDING_SCREENING,  COALESCE(SUM(COALESCE(PENDING_MAKER, 0)),0) AS PENDING_MAKER,  COALESCE(SUM(COALESCE(PENDING_CHECKER, 0)),0) AS PENDING_CHECKER,  COALESCE(SUM(COALESCE(SEND_TO_CB, 0)),0) AS SEND_TO_CB,  COALESCE(SUM(COALESCE(CBACK, 0)),0) AS CBACK,  COALESCE(SUM(COALESCE(CBNACK, 0)),0) AS CBNACK,  COALESCE(SUM(COALESCE(PENDING_T_1, 0)),0) AS PENDING_T_1,  CURRENT_DATE AS CREATED_DATE FROM NPSS_VW_DASHBOARD_OUTWARD_DATA   GROUP BY    SNO,    PTYPE,    TYPE,    CREATED_DATE ORDER BY  SNO;$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1681998395232~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681998395232$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  X.Pending_Detais,  x.p_count,  X.Details from  (  select   details,   coalesce(sum(res.IBAN_Failures),   0::numeric) as IBAN_Failures,   coalesce(sum(res.P2P_Failures),   0::numeric) as P2P_Failures,   coalesce(sum(res.P2B_Failures),   0::numeric) as P2B_Failures  from   (   select    count (case     when ntpl.status in ($SQ$OP_AC_VAL_FAILED$SQ$, $SQ$OP_AC_MAND_VAL_FAILED$SQ$, $SQ$OP_AC_DUPL_VAL_FAILED$SQ$, $SQ$OP_AC_PCODE_VAL_FAILED$SQ$, $SQ$OP_AC_PBANK_VAL_FAILED$SQ$) then ntpl.npsstpl_id     else null    end ) as IBAN_Failures,    count (case     when ntpl.status in ( $SQ$OP_P2P_PAYMENT_FAILED$SQ$,$SQ$OP_P2P_POSTING_FAILURE$SQ$,$SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$, $SQ$P2P_SENDER_IBAN_FAILED$SQ$,$SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$ ) then ntpl.npsstpl_id     else null    end )as P2P_Failures,    count (case     when ntpl.status in ($SQ$OP_P2B_FUND_UNFREEZED$SQ$, $SQ$OP_P2B_PAYMENT_FAILED$SQ$,$SQ$OP_P2B_FUND_RES_FAILURE$SQ$, $SQ$OP_P2B_FUND_RES_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_FUND_UNFR_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_AUTH_FAILURE$SQ$, $SQ$OP_P2B_FUND_AUTH_SUSPICIOUS$SQ$) then ntpl.npsstpl_id     else null    end) as P2B_Failures,    ntpl.status,    ntpl.tenant_id,    $SQ$Overlay Failures$SQ$ as details   from    npss_trn_process_log ntpl   where    to_date(to_char(ntpl.created_date::date::timestamp with time zone,    $SQ$yyyy-mm-dd$SQ$::text),    $SQ$yyyy-mm-dd$SQ$::text) = CURRENT_DATE   group by    status,    tenant_id )res $WHERE  group by   res.details) AB cross join lateral( values ($SQ$IBAN Failures$SQ$, AB.IBAN_Failures, AB.Details), ($SQ$P2P Failures$SQ$, AB.P2P_Failures, AB.Details), ($SQ$P2B Failures$SQ$, AB.P2B_Failures, AB.Details)) X ( Pending_Detais,  p_count,  Details ) where  p_count not in ($SQ$0$SQ$)$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_41$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1681970564121~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681970564121$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  X.Pending_Detais,  x.p_count,  X.TYPE from  (  select   A.type,   case    when A.type = $SQ$pacs.008$SQ$    and b.sno is null then 1    when A.type = $SQ$pacs.004$SQ$    and b.sno is null then 2    when A.type = $SQ$pacs.007$SQ$    and b.sno is null then 3    else b.sno   end sno,   coalesce(b.TOTAL,   0) as TOTAL,   coalesce(b.RIB,   0) as RIB,   coalesce(b.CMS,   0) as CMS,   coalesce(b.NFR,   0) as NFR,   coalesce(b.IPP,   0) as IPP,   coalesce(b.MOB,   0) as MOB,   coalesce(b.MBL,   0) as MBL,   coalesce(b.AANI,   0) as AANI,   coalesce(b.GCN,   0) as GCN,   coalesce(b.Manual,   0) as Manual,   coalesce(b.Pending_Screening,   0) as Pending_Screening,   coalesce(b.PENDING_MAKER,   0) as PENDING_MAKER,   coalesce(b.PENDING_CHECKER,   0) as PENDING_CHECKER,   coalesce(b.SEND_TO_CB,   0) as SEND_TO_CB,   coalesce(b.CBACK,   0) as CBACK,   coalesce(b.CBNACK,   0) as CBNACK,   coalesce(b.Pending_T_1,   0) as Pending_T_1,   to_char(CURRENT_DATE::timestamp with time zone,   $SQ$yyyy-mm-dd$SQ$::text)::timestamp without time zone as created_date  from   (   select    $SQ$pacs.008$SQ$ as type  union   select    $SQ$pacs.004$SQ$ as type  union   select    $SQ$pacs.007$SQ$ as type) A  left join (   select    SNO,    type,    SUM(Total) as Total,    SUM(RIB) as RIB,    SUM(CMS) as CMS,    SUM(NFR) as NFR,    SUM(IPP) as IPP,    SUM(MOB) as MOB,    SUM(MBL) as MBL,    SUM(AANI) as AANI,    SUM(GCN) as GCN,    SUM(MANUAL) as Manual,    SUM(PENDING_SCREENING) as Pending_Screening,    SUM(PENDING_MAKER) as Pending_Maker,    SUM(PENDING_CHECKER) as Pending_Checker,    SUM(SEND_TO_CB) as Send_to_CB,    SUM(CBACK) as CBACK,    SUM(CBNACK) as CBNACK,    CREATED_DATE,    SUM(PENDING_T_1) as Pending_T_1   from    (    select     SNO,     type,     Total,     RIB,     CMS,     NFR,     IPP,     MOB,     MBL,     AANI,     GCN,     MANUAL,     PENDING_SCREENING,     PENDING_MAKER,     PENDING_CHECKER,     SEND_TO_CB,     CBACK,     CBNACK,     CREATED_DATE,     PENDING_T_1,     DEPARTMENT_CODE,     TENANT_ID    from     npss_vw_dashboard_outward_data) as t $WHERE   group by    SNO,    type,    CREATED_DATE) B on   B.type = A.type  order by   sno ) AB cross join lateral( values ($SQ$TOTAL$SQ$, AB.TOTAL, AB.TYPE), ($SQ$RIB$SQ$, AB.RIB, AB.TYPE), ($SQ$CMS$SQ$, AB.CMS, AB.TYPE), ($SQ$NFR$SQ$, AB.NFR, AB.TYPE), ($SQ$IPP$SQ$, AB.IPP, AB.TYPE), ($SQ$MOB$SQ$, AB.MOB, AB.TYPE), ($SQ$MBL$SQ$, AB.MBL, AB.TYPE), ($SQ$AANI$SQ$, AB.AANI, AB.TYPE), ($SQ$GCN$SQ$, AB.GCN, AB.TYPE), ($SQ$Manual$SQ$, AB.Manual, AB.TYPE), ($SQ$Pending (Checker)$SQ$, AB.PENDING_CHECKER, AB.TYPE), ($SQ$Pending Screening$SQ$, AB.Pending_Screening, AB.TYPE), ($SQ$SEND TO CB$SQ$, AB.SEND_TO_CB, AB.TYPE), ($SQ$CBACK$SQ$, AB.CBACK, AB.TYPE), ($SQ$CBNACK$SQ$, AB.CBNACK, AB.TYPE), ($SQ$Pending (T-1)$SQ$, AB.Pending_T_1, AB.TYPE), ($SQ$Pending (Maker)$SQ$, AB.PENDING_MAKER, AB.TYPE)) X ( Pending_Detais,  p_count,  type ) where  p_count not in ($SQ$0$SQ$)$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_30$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678780879597~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678780879597$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT  TYPE,  $SQ$IP$SQ$ AS PTYPE,  CASE   WHEN TYPE = $SQ$pacs.008$SQ$ THEN 1   WHEN TYPE = $SQ$pacs.004$SQ$ THEN 2   WHEN TYPE = $SQ$pacs.007$SQ$ THEN 3   ELSE SNO  END SNO,  COALESCE(SUM(COALESCE(TOTAL, 0))) AS TOTAL,  COALESCE(SUM(COALESCE(PENDING_SCREENING, 0))) AS PENDING_SCREENING,  COALESCE(SUM(COALESCE(PENDING_MAKER, 0))) AS PENDING_MAKER,  COALESCE(SUM(COALESCE(PENDING_CHECKER, 0))) AS PENDING_CHECKER,  COALESCE(SUM(COALESCE(PAYMENT_REJECTED, 0))) AS PAYMENT_REJECTED,  COALESCE(SUM(COALESCE(SUCCESSFULLYPOSTED, 0))) AS SUCCESSFULLYPOSTED,  COALESCE(SUM(COALESCE(PENDING_RETURNS_MAKER, 0))) AS PENDING_RETURNS_MAKER,  COALESCE(SUM(COALESCE(PENDING_RETURNS_CHECKER, 0))) AS PENDING_RETURNS_CHECKER,  COALESCE(SUM(COALESCE(RETURNED, 0))) AS RETURNED,  COALESCE(SUM(COALESCE(PENDING_T_1, 0))) AS PENDING_T_1,  CURRENT_DATE AS CREATED_DATE FROM NPSS_VW_DASHBOARD_INWARD_DATA   GROUP BY    SNO,    PTYPE,    TYPE,    CREATED_DATE ORDER BY  SNO;$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_12$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1681998435687~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681998435687$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  Pending_Detais,  NPSSTPL_ID,  MSG_ID,  UETR,  PROCESS_NAME,  RESPONSE_CODE,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE,  V_CODE,  CREATED_DATE,  value_date,  amount,  accountCur,  orderingaccount,  beneficiaryaccount,  middlewareReferenceNumber,  coreBankReferenceNumber,  status,  npsstrrd_refno,  process_ref_no from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   B.process_name,   A.RESPONSE_CODE,   TO_CHAR(A.CREATED_DATE,   $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   B.request_data_json,   B.created_date as value_date,   A.V_CODE,   A.status,   A.npsstrrd_refno,   A.process_ref_no,   case    when A.status in ($SQ$OP_AC_VAL_FAILED$SQ$, $SQ$OP_AC_MAND_VAL_FAILED$SQ$, $SQ$OP_AC_DUPL_VAL_FAILED$SQ$, $SQ$OP_AC_PCODE_VAL_FAILED$SQ$, $SQ$OP_AC_PBANK_VAL_FAILED$SQ$) and B.PROCESS_NAME = $SQ$Response Back to Channel$SQ$ then $SQ$IBAN Failures$SQ$     when ((A.status in ($SQ$OP_P2P_PAYMENT_FAILED$SQ$, $SQ$OP_P2P_POSTING_FAILURE$SQ$, $SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$, $SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$) and B.PROCESS_NAME in ($SQ$SctInitiation$SQ$)) or (A.status in ($SQ$P2P_SENDER_IBAN_FAILED$SQ$) and B.PROCESS_NAME in ($SQ$Verify Sender IBAN$SQ$)))  then $SQ$P2P Failures$SQ$    when A.status in ($SQ$OP_P2B_FUND_UNFREEZED$SQ$, $SQ$OP_P2B_PAYMENT_FAILED$SQ$, $SQ$OP_P2B_FUND_RES_FAILURE$SQ$, $SQ$OP_P2B_FUND_RES_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_FUND_UNFR_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_AUTH_FAILURE$SQ$, $SQ$OP_P2B_FUND_AUTH_SUSPICIOUS$SQ$) AND B.PROCESS_NAME = $SQ$Verify Buyer IBAN$SQ$ then $SQ$P2B Failures$SQ$    else $SQ$OTHER$SQ$   end as Pending_Detais,   (fn_pcidss_decrypt(B.request_data_json,   $SQ$Pc!Nps$Key7$SQ$)::json -> $SQ$middlewareReferenceNumber$SQ$)as middlewareReferenceNumber,   (fn_pcidss_decrypt(B.request_data_json,   $SQ$Pc!Nps$Key7$SQ$)::json -> $SQ$coreBankReferenceNumber$SQ$)as coreBankReferenceNumber,   case    when B.process_name = $SQ$Verify Buyer IBAN$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$buyer$SQ$->$SQ$iban$SQ$)    when B.process_name = $SQ$Response Back to Channel$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$orderingCustomer$SQ$->$SQ$account$SQ$)    when B.process_name = $SQ$Verify Sender IBAN$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$sender$SQ$->$SQ$iban$SQ$)    when B.process_name = $SQ$SctInitiation$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json -> $SQ$sender$SQ$->$SQ$iban$SQ$)   end as orderingaccount,   case    when B.process_name = $SQ$Verify Buyer IBAN$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$merchant$SQ$->$SQ$iban$SQ$)    when B.process_name = $SQ$Response Back to Channel$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$beneficiaryCustomer$SQ$->$SQ$Account$SQ$)    when B.process_name = $SQ$Verify Sender IBAN$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$recipient$SQ$->$SQ$iban$SQ$)    when B.process_name = $SQ$SctInitiation$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json -> $SQ$recipient$SQ$->$SQ$iban$SQ$)   end as beneficiaryaccount,   case    when B.process_name = $SQ$Verify Buyer IBAN$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$amount$SQ$->$SQ$currency$SQ$)    when B.process_name = $SQ$Response Back to Channel$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$orderingCustomer$SQ$->$SQ$accountCur$SQ$)    when B.process_name = $SQ$Verify Sender IBAN$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$amount$SQ$->$SQ$currency$SQ$)    when B.process_name = $SQ$SctInitiation$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json -> $SQ$amount$SQ$->$SQ$currency$SQ$)   end as accountCur,   case    when B.process_name = $SQ$Verify Buyer IBAN$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$amount$SQ$->$SQ$requested$SQ$)    when B.process_name = $SQ$Response Back to Channel$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$instructedAmount$SQ$)    when B.process_name = $SQ$Verify Sender IBAN$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json ->$SQ$amount$SQ$->$SQ$requested$SQ$)    when B.process_name = $SQ$SctInitiation$SQ$ then (fn_pcidss_decrypt(B.request_data_json,    $SQ$Pc!Nps$Key7$SQ$)::json -> $SQ$amount$SQ$->$SQ$requested$SQ$)   end as Amount  from   NPSS_TRN_PROCESS_LOG A  left join (   select    B1.PROCESS_NAME,    B1.request_data_json,    B1.UETR,    B1.created_date   from    NPSS_TRN_PROCESS_LOG B1   where    B1.PROCESS_NAME in ($SQ$Verify Sender IBAN$SQ$, $SQ$Verify Buyer IBAN$SQ$, $SQ$SctInitiation$SQ$,$SQ$Response Back to Channel$SQ$)    and to_date(to_char(B1.created_date ,    $SQ$yyyy-mm-dd$SQ$ ),    $SQ$yyyy-mm-dd$SQ$ ) = current_date)B on   a.uetr = b.uetr  where   A.status in ($SQ$OP_AC_VAL_FAILED$SQ$, $SQ$OP_AC_MAND_VAL_FAILED$SQ$, $SQ$OP_AC_DUPL_VAL_FAILED$SQ$, $SQ$OP_AC_PCODE_VAL_FAILED$SQ$, $SQ$OP_AC_PBANK_VAL_FAILED$SQ$, $SQ$P2P_SENDER_IBAN_FAILED$SQ$, $SQ$OP_P2P_PAYMENT_FAILED$SQ$, $SQ$OP_P2P_POSTING_FAILURE$SQ$, $SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_UNFREEZED$SQ$, $SQ$OP_P2B_PAYMENT_FAILED$SQ$, $SQ$OP_P2B_FUND_RES_FAILURE$SQ$, $SQ$OP_P2B_FUND_RES_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_FUND_UNFR_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_AUTH_FAILURE$SQ$, $SQ$OP_P2B_FUND_AUTH_SUSPICIOUS$SQ$, $SQ$OP_P2P_PAYMENT_FAILED$SQ$, $SQ$OP_P2P_POSTING_FAILURE$SQ$, $SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$)   and to_date(to_char(A.created_date ,   $SQ$yyyy-mm-dd$SQ$ ),   $SQ$yyyy-mm-dd$SQ$ ) = current_date) V where  Pending_Detais <> $SQ$OTHER$SQ$ $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_42$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1681998367336~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1681998367336$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  $SQ$Overlay Failures$SQ$ as details,  coalesce(SUM(case when ntpl.status in ($SQ$OP_AC_VAL_FAILED$SQ$, $SQ$OP_AC_MAND_VAL_FAILED$SQ$, $SQ$OP_AC_DUPL_VAL_FAILED$SQ$, $SQ$OP_AC_PCODE_VAL_FAILED$SQ$, $SQ$OP_AC_PBANK_VAL_FAILED$SQ$) then 1 else 0 end),  0) as IBAN_Failures,  coalesce(SUM(case when ntpl.status in ($SQ$OP_P2P_PAYMENT_FAILED$SQ$,$SQ$OP_P2P_POSTING_FAILURE$SQ$,$SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$, $SQ$P2P_SENDER_IBAN_FAILED$SQ$,$SQ$OP_P2P_POSTING_SUSPICIOUS$SQ$) then 1 else 0 end),  0) as P2P_Failures,  coalesce(SUM(case when ntpl.status in ($SQ$OP_P2B_FUND_UNFREEZED$SQ$, $SQ$OP_P2B_PAYMENT_FAILED$SQ$,$SQ$OP_P2B_FUND_RES_FAILURE$SQ$, $SQ$OP_P2B_FUND_RES_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_FUND_UNFR_SUSPICIOUS$SQ$, $SQ$OP_P2B_FUND_AUTH_FAILURE$SQ$, $SQ$OP_P2B_FUND_AUTH_SUSPICIOUS$SQ$) then 1 else 0 end),  0) as P2B_Failures from  npss_trn_process_log ntpl where  ntpl.created_date::date = CURRENT_DATE $AND$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_40$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1678866622478~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866622478$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   <TRAN_DB>.NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join <TRAN_DB>.NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
}]