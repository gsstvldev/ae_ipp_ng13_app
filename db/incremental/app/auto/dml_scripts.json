[{ "key": "D~215~npss_cs_inward_posting_failure_force_to_post", "target" : "APP_CCI_PROJECTS", "content" :"{ \"query\" : \"delete from app_cci_projects where app_id = ?  and project_name = ?;\", \"params\" : [$DQ$215$DQ$, $DQ$npss_cs_inward_posting_failure_force_to_post$DQ$] }", "qry_type" : "D"  },{ "key": "215~npss_cs_inward_posting_failure_force_to_post", "target" : "APP_CCI_PROJECTS", "content" :"{ \"query\" : \"insert into app_cci_projects (app_id,project_name,project_description,project_type,projecttype_desc,server_scripting) values (?,?,?,?,?,?);\", \"params\" : [$DQ$215$DQ$,$DQ$npss_cs_inward_posting_failure_force_to_post$DQ$,$DQ$NPSS (CS) Inward Posting Failure Force to Post$DQ$,$DQ$CLIENT_UI_WITH_API_SERVICE$DQ$,$DQ$Client UI + API Service$DQ$,$DQ$NODE_JS$DQ$] }", "qry_type" : "I"  },{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1678779853154_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678866701508~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866701508$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_26$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678866785078~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866785078$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_27$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1678866570423~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866570423$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   NPSS_TRN_PROCESS_LOG A  left join <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  left join NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_15$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679038709562~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679039315939~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679039315939$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  Pending_Detais_OP,  Pending_Detais_IP,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification_mask,  Fn_card_decrypt_and_mask_rpt(DBTR_ACCT_NO) as dr_acct_identification_mask,  type,  CR_ACCT_IDENTIFICATION,  UETR,  VALUE_DATE,  ACCP_DATE_TIME,  CREATED_DATE,  DATEMI,  EXHF_ID,  CDTR_IBAN,  TENANT_ID,  TRAN_REF_ID,  DEPARTMENT_CODE,  PAYMENT_ENDTOEND_ID,  CLRSYSREF,  CDTR_ACCT_NO,  DBTR_ACCT_NO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  STATUS,  PROCESSING_SYSTEM,  PROCESS_STATUS,  DBTR_ACCT_NAME,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  DBTR_CUST_TYPE,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  CDTR_ACCT_NAME,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  DR_SORT_CODE,  CR_SORT_CODE,  CATEGORY_PURPOSE,  CATEGORY_PURPOSE_PRTY,  BASE_CURRENCY,  BASE_AMOUNT,  HDR_TOTAL_RECORDS,  HDR_TOTAL_AMOUNT,  HDR_CLEARING_SYSTEM,  CHARGE_BEARER,  REMITTANCE_INFO,  ACCOUNT_CURRENCY,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  ISSUER_TYPE_CODE,  CBS_REF_NO,  CBS_POSTING_FLAG,  PROCESS_TYPE,  PROCESS_GROUP from  (  select distinct (ntl.process_name),   NT.NPSST_ID,   NT.UETR,   NT.VALUE_DATE,   NT.ACCP_DATE_TIME,   NT.CREATED_DATE,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   case    when ntl.process_name::text in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$,$SQ$Receive Pacs008$SQ$) then $SQ$pacs.008$SQ$::text    when ntl.process_name::text in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$,$SQ$Receive Pacs.007$SQ$) then $SQ$pacs.007$SQ$::text    when ntl.process_name::text in ($SQ$Receive Pacs004$SQ$,$SQ$Place Pacs004$SQ$) then $SQ$pacs.004$SQ$::text   end as type,   case    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$, $SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_OP,   case    when (ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$ , $SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_IP,    CASE                     WHEN NT.department_code::text = $SQ$$SQ$::text OR NT.department_code IS NULL THEN $SQ$DEFAULT$SQ$::character varying                     ELSE NT.department_code                 END AS department_code,   NT.TENANT_ID,   NT.EXHF_ID,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.PAYMENT_ENDTOEND_ID,   NT.CLRSYSREF,   NT.CDTR_ACCT_NO,   NT.DBTR_ACCT_NO,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.STATUS,   NT.PROCESSING_SYSTEM,   NT.PROCESS_STATUS,   NT.DBTR_ACCT_NAME,   NT.DBTR_PHONE_NO,   NT.DBTR_EMAIL_ID,   NT.DBTR_DOCUMENT_ID,   NT.DBTR_IBAN,   NT.DBTR_CUST_TYPE,   NT.DBTR_PRVT_ID,   NT.DBTR_OTHER_ISSUER,   NT.CDTR_ACCT_NAME,   NT.CDTR_PHONE_NO,   NT.CDTR_EMAIL_ID,   NT.CDTR_DOCUMENT_ID,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CATEGORY_PURPOSE,   NT.CATEGORY_PURPOSE_PRTY,   NT.CR_ACCT_IDENTIFICATION,   NT.BASE_CURRENCY,   NT.BASE_AMOUNT,   NT.HDR_TOTAL_RECORDS,   NT.HDR_TOTAL_AMOUNT,   NT.HDR_CLEARING_SYSTEM,   NT.CHARGE_BEARER,   NT.REMITTANCE_INFO,   NT.ACCOUNT_CURRENCY,   NT.CHANNEL_ID,   NT.CHANNEL_REFNO,   NT.CHANNEL_USERID,   NT.CHANNEL_PRODUCT,   NT.CHANNEL_SUB_PRODUCT,   NT.CHANNEL_TRAN_CODE,   NT.ISSUER_TYPE_CODE,   NT.CBS_REF_NO,   NT.CBS_POSTING_FLAG,   NT.PROCESS_TYPE,   NT.PROCESS_GROUP  from   NPSS_TRANSACTIONS NT  inner join npss_trn_process_log ntl on   ntl.uetr = nt.uetr) V $WHERE order by  NPSST_ID desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679038709562$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678787742404~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678787742404$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESS_STATUS) as PROCESS_STATUS_COUNT,  PROCESS_TYPE,  PROCESS_STATUS,  createddate from  (  select   T.CREATED_DATE,   T.PROCESS_TYPE ,   T.TENANT_ID,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS,   to_date(to_char(t.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) as createddate  from   NPSS_TRANSACTIONS T where to_date(to_char(T.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) V $WHERE group by  PROCESS_STATUS,  PROCESS_TYPE,  createddate$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_13$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679038751136~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679039201469~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679039201469$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  npsst_id,  uetr,  CREATED_DATE,  PROCESS_TYPE,  PROCESS_STATUS,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  dbtr_iban,  DATEMI,  createddate from  (  select   t.npsst_id,   t.uetr,   T.CREATED_DATE,   TO_CHAR(T.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   T.PROCESS_TYPE ,   T.TENANT_ID,   t.intrbk_sttlm_cur ,   t.intrbk_sttlm_amnt ,   t.cdtr_iban ,   t.cr_acct_identification ,   t.dbtr_iban ,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS,   to_date(to_char(t.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) as createddate  from   NPSS_TRANSACTIONS T where to_date(to_char(T.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679038751136$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679641884819~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679642236090~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679642236090$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  Pending_Detais,  count (Pending_Detais) as p_count,  Process_Type,type from  (  select   Process_Name,   type,   Pending_Detais,   Process_Type,   tenant_id,   created_date,   npsst_id ,   department_code  from   (   select    distinct (npl.process_name),    case     when npl.process_name::text in ($SQ$Receive Pacs008$SQ$) then $SQ$pacs.008$SQ$::text     when npl.process_name::text in ($SQ$Receive Pacs.007$SQ$) then $SQ$pacs.007$SQ$::text     when npl.process_name::text = $SQ$Place Pacs004$SQ$::text then $SQ$pacs.004$SQ$::text    end as type,    case     when (npl.process_name = $SQ$Receive Pacs008$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$     when (npl.process_name = $SQ$Place Pacs004$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$     when (npl.process_name = $SQ$Receive Pacs.007$SQ$     and nppst.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$     when ((npl.process_name = $SQ$Receive Pacs008$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)     or (npl.process_name = $SQ$Place Pacs004$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)     or (npl.process_name = $SQ$Receive Pacs.007$SQ$     and nppst.status in ($SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$     when ((npl.process_name = $SQ$Receive Pacs008$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$ , $SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)     or (npl.process_name = $SQ$Place Pacs004$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)     or (npl.process_name = $SQ$Receive Pacs.007$SQ$     and nppst.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$     else $SQ$Others$SQ$    end as Pending_Detais,    nppst.process_type,    nppst.created_date,    nppst.tenant_id,    nppst.npsst_id ,    nppst.department_code   from    npss_transactions nppst   join npss_trn_process_log npl on    npl.uetr = nppst.uetr   where    nppst.process_type = $SQ$IP$SQ$    and (npl.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Place Pacs004$SQ$)) ) as Res  where   Res.Pending_Detais <> $SQ$Others$SQ$) a $WHERE group by  Pending_Detais,type,  Process_Type$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679641884819$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_38$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1678962046937~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679569095202~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679569095202$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  Pending_Detais,  count (Pending_Detais) as p_count,  Process_Type,type from  (  select   Process_Name,   type,   Pending_Detais,   Process_Type,   tenant_id,   created_date,   createddate,   npsst_id,   department_code  from   (   select    distinct (npl.process_name),    case     when npl.process_name::text in ($SQ$Place Pacs008$SQ$) then $SQ$pacs.008$SQ$::text     when npl.process_name::text in ($SQ$Place Pacs.007$SQ$) then $SQ$pacs.007$SQ$::text     when npl.process_name::text = $SQ$Receive Pacs004$SQ$::text then $SQ$pacs.004$SQ$::text    end as type,    case     when ((npl.process_name = $SQ$Place Pacs008$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)     or (npl.process_name = $SQ$Receive Pacs004$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)     or (npl.process_name = $SQ$Place Pacs.007$SQ$     and nppst.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Maker)$SQ$     when ((npl.process_name = $SQ$Place Pacs008$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)     or (npl.process_name = $SQ$Receive Pacs004$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)     or (npl.process_name = $SQ$Place Pacs.007$SQ$     and nppst.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$     when ((npl.process_name = $SQ$Place Pacs008$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)     or (npl.process_name = $SQ$Receive Pacs004$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$, $SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)     or (npl.process_name = $SQ$Place Pacs.007$SQ$     and nppst.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$     else $SQ$Others$SQ$    end as Pending_Detais,    nppst.process_type,    nppst.created_date,    nppst.tenant_id,    nppst.npsst_id,    nppst.department_code,    to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) as createddate   from    npss_transactions nppst   join npss_trn_process_log npl on    npl.uetr = nppst.uetr   where    nppst.process_type = $SQ$OP$SQ$    and (npl.process_name in ($SQ$Place Pacs008$SQ$, $SQ$Place Pacs.007$SQ$, $SQ$Receive Pacs004$SQ$)) ) as Res  where   Res.Pending_Detais <> $SQ$Others$SQ$ ) a $WHERE group by  Pending_Detais,type,  Process_Type$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1678962046937$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_30$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679651226917~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679651486228~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679651486228$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  Pending_Detais_OP,  Pending_Detais_IP,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification_mask,  Fn_card_decrypt_and_mask_rpt(DBTR_ACCT_NO) as dr_acct_identification_mask,  type,  CR_ACCT_IDENTIFICATION,  UETR,  VALUE_DATE,  ACCP_DATE_TIME,  CREATED_DATE,  DATEMI,  EXHF_ID,  CDTR_IBAN,  TENANT_ID,  TRAN_REF_ID,  DEPARTMENT_CODE,  PAYMENT_ENDTOEND_ID,  CLRSYSREF,  CDTR_ACCT_NO,  DBTR_ACCT_NO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  STATUS,  PROCESSING_SYSTEM,  PROCESS_STATUS,  DBTR_ACCT_NAME,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  DBTR_CUST_TYPE,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  CDTR_ACCT_NAME,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  DR_SORT_CODE,  CR_SORT_CODE,  CATEGORY_PURPOSE,  CATEGORY_PURPOSE_PRTY,  BASE_CURRENCY,  BASE_AMOUNT,  HDR_TOTAL_RECORDS,  HDR_TOTAL_AMOUNT,  HDR_CLEARING_SYSTEM,  CHARGE_BEARER,  REMITTANCE_INFO,  ACCOUNT_CURRENCY,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  ISSUER_TYPE_CODE,  CBS_REF_NO,  CBS_POSTING_FLAG,  PROCESS_TYPE,  PROCESS_GROUP from  (  select distinct (ntl.process_name),   NT.NPSST_ID,   NT.UETR,   NT.VALUE_DATE,   NT.ACCP_DATE_TIME,   NT.CREATED_DATE,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   case    when ntl.process_name::text in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$,$SQ$Receive Pacs008$SQ$) then $SQ$pacs.008$SQ$::text    when ntl.process_name::text in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$,$SQ$Receive Pacs.007$SQ$) then $SQ$pacs.007$SQ$::text    when ntl.process_name::text in ($SQ$Receive Pacs004$SQ$,$SQ$Place Pacs004$SQ$) then $SQ$pacs.004$SQ$::text   end as type,   case    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$, $SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_OP,   case    when (ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$ , $SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_IP,    CASE                     WHEN NT.department_code::text = $SQ$$SQ$::text OR NT.department_code IS NULL THEN $SQ$DEFAULT$SQ$::character varying                     ELSE NT.department_code                 END AS department_code,   NT.TENANT_ID,   NT.EXHF_ID,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.PAYMENT_ENDTOEND_ID,   NT.CLRSYSREF,   NT.CDTR_ACCT_NO,   NT.DBTR_ACCT_NO,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.STATUS,   NT.PROCESSING_SYSTEM,   NT.PROCESS_STATUS,   NT.DBTR_ACCT_NAME,   NT.DBTR_PHONE_NO,   NT.DBTR_EMAIL_ID,   NT.DBTR_DOCUMENT_ID,   NT.DBTR_IBAN,   NT.DBTR_CUST_TYPE,   NT.DBTR_PRVT_ID,   NT.DBTR_OTHER_ISSUER,   NT.CDTR_ACCT_NAME,   NT.CDTR_PHONE_NO,   NT.CDTR_EMAIL_ID,   NT.CDTR_DOCUMENT_ID,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CATEGORY_PURPOSE,   NT.CATEGORY_PURPOSE_PRTY,   NT.CR_ACCT_IDENTIFICATION,   NT.BASE_CURRENCY,   NT.BASE_AMOUNT,   NT.HDR_TOTAL_RECORDS,   NT.HDR_TOTAL_AMOUNT,   NT.HDR_CLEARING_SYSTEM,   NT.CHARGE_BEARER,   NT.REMITTANCE_INFO,   NT.ACCOUNT_CURRENCY,   NT.CHANNEL_ID,   NT.CHANNEL_REFNO,   NT.CHANNEL_USERID,   NT.CHANNEL_PRODUCT,   NT.CHANNEL_SUB_PRODUCT,   NT.CHANNEL_TRAN_CODE,   NT.ISSUER_TYPE_CODE,   NT.CBS_REF_NO,   NT.CBS_POSTING_FLAG,   NT.PROCESS_TYPE,   NT.PROCESS_GROUP  from   NPSS_TRANSACTIONS NT  inner join npss_trn_process_log ntl on   ntl.uetr = nt.uetr) V $WHERE order by  NPSST_ID desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679651226917$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678780847259~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678780847259$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select A.type, case when A.type=$SQ$pacs.008$SQ$ and b.sno is null then 1 when A.type=$SQ$pacs.004$SQ$ and b.sno is null then 2  when A.type=$SQ$pacs.007$SQ$ and b.sno is null then 3 else b.sno end sno, COALESCE(b.total,0) as total, COALESCE(b.IBMB,0) as IBMB, COALESCE(b.RIB,0) as RIB, COALESCE(b.RMB,0) as RMB, COALESCE(b.CIB,0) as CIB, COALESCE(b.CMS,0) as CMS, COALESCE(b.CMB,0) as CMB, COALESCE(b.Manual,0) as Manual, COALESCE(b.Pending_Screening,0) as Pending_Screening, COALESCE(b.PENDING_MAKER,0) as PENDING_MAKER, COALESCE(b.PENDING_CHECKER,0) as PENDING_CHECKER, COALESCE(b.SEND_TO_CB,0) as SEND_TO_CB, COALESCE(b.CBACK,0) as CBACK, COALESCE(b.CBNACK,0) as CBNACK, COALESCE(b.Pending_T_1,0) as Pending_T_1, to_char(CURRENT_DATE::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text)::timestamp without time zone AS created_date from (select  $SQ$pacs.008$SQ$ as TYPE union  select  $SQ$pacs.004$SQ$ as TYPE union  select  $SQ$pacs.007$SQ$ as type) A  left join (select  SNO,  type,  SUM(TOTAL) as Total,  SUM(IBMB) as IBMB,  SUM(RIB) as RIB,  SUM(RMB) as RMB ,  SUM(CIB) as CIB,  SUM(CMS) as CMS,  SUM(CMB) as CMB,  SUM(MANUAL) as Manual,  SUM(PENDING_SCREENING) as Pending_Screening,  SUM(PENDING_MAKER) as Pending_Maker,  SUM(PENDING_CHECKER) as Pending_Checker,  SUM(SEND_TO_CB) as Send_to_CB,  SUM(CBACK) as CBACK,  SUM(CBNACK) as CBNACK,  CREATED_DATE,  SUM(PENDING_T_1) as Pending_T_1 from  (  select  SNO,  type,  Total,  IBMB,  RIB,  RMB ,  CIB,  CMS,  CMB,  MANUAL,  PENDING_SCREENING,  PENDING_MAKER,  PENDING_CHECKER,  SEND_TO_CB,  CBACK,  CBNACK,  CREATED_DATE,  PENDING_T_1,  DEPARTMENT_CODE  from   vw_dashboard_outward_data) as t $WHERE group by  SNO,  type,  CREATED_DATE) B on B.type = A.type  order by sno$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678780879597~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678780879597$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select A.type, case when A.type=$SQ$pacs.008$SQ$ and b.sno is null then 1 when A.type=$SQ$pacs.004$SQ$ and b.sno is null then 2  when A.type=$SQ$pacs.007$SQ$ and b.sno is null then 3 else b.sno end sno, COALESCE(b.total,0) as total, COALESCE(b.Pending_Screening,0) as Pending_Screening, COALESCE(b.PENDING_MAKER,0) as PENDING_MAKER, COALESCE(b.PENDING_CHECKER,0) as PENDING_CHECKER, COALESCE(b.successfullyposted,0) as successfullyposted, COALESCE(b.pending_returns_maker,0) as pending_returns_maker, COALESCE(b.pending_returns_checker,0) as pending_returns_checker, COALESCE(b.returned,0) as returned, COALESCE(b.Pending_T_1,0) as Pending_T_1, to_char(CURRENT_DATE::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text)::timestamp without time zone AS created_date from (select  $SQ$pacs.008$SQ$ as TYPE union  select  $SQ$pacs.004$SQ$ as TYPE union  select  $SQ$pacs.007$SQ$ as type) A  left join (select  sno,  type,  sum(total) as TOTAL,  sum(pending_maker) as pending_maker,  sum(pending_checker) as pending_checker,  sum(pending_screening) as pending_screening,  sum(successfullyposted) as successfullyposted,  sum(pending_returns_maker) as pending_returns_maker,  sum(pending_returns_checker) as pending_returns_checker,  sum(returned) as returned,  sum(pending_t_1) as pending_t_1,  created_date from  (  select   sno,   type,   TOTAL,   pending_maker,   pending_checker,   pending_screening,   successfullyposted,   pending_returns_maker,   pending_returns_checker,   returned,   pending_t_1,   created_date,   DEPARTMENT_CODE  from   vw_dashboard_inward_data) T $WHERE group by  SNO,  type,  CREATED_DATE) B on B.type = A.type  order by sno$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_12$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1678866622478~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866622478$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
}]