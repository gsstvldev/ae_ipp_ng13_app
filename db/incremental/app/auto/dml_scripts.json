[{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1672490487921_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672490830459~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672490830459$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.PROCESS_GROUP,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.PROCESS_TYPE,   NT.DBTR_IBAN  from   NPSS_TRANSACTIONS NT  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~E_1675144659777~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1675145025455~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1675145025455$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  TNPSST_ID,  VALUE_DATE ,  DBTRIBAN ,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF ,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID ,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  BANK_NAME from  (  select   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN as DBTRIBAN,   NT.CDTR_ACCT_NAME as DBTRACCTNAME,   NT.CR_SORT_CODE as DRSORTCODE,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.DBTR_IBAN as CDTRIBAN,   NT.DBTR_ACCT_NAME as CDTRACCTNAME,   NT.DR_SORT_CODE as CRSORTCODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   CMB.BANK_NAME,   NT.NPSST_ID::text as TNPSST_ID  from   NPSS_TRANSACTIONS NT  inner join <tran_db>.CORE_MEMBER_BANKS CMB on   NT.DR_SORT_CODE = CMB.BIC_CODE   and cmb.need_sync = $SQ$Y$SQ$) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1675144659777$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~E_1672490213838~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1675145021503~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1675145021503$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  TNPSST_ID,  VALUE_DATE ,  DBTRIBAN ,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF ,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID ,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  BANK_NAME,  CUSTOMER_POSTING_RESTRICTION_CODE,  CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,  ACCOUNT_NUMBER,  ACCOUNT_NAME,  restriction_desc,  POSTING_RESTRICTION_CODE,  INTRBK_STTLM_CUR,ACCOUNT_CURRENCY from  (  select   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN as DBTRIBAN,   NT.CDTR_ACCT_NAME as DBTRACCTNAME,   NT.CR_SORT_CODE as DRSORTCODE,   NT.CLRSYSREF,   NT.INTRBK_STTLM_CUR,   NT.PAYMENT_ENDTOEND_ID,   NT.DBTR_IBAN as CDTRIBAN,   NT.DBTR_ACCT_NAME as CDTRACCTNAME,   NT.DR_SORT_CODE as CRSORTCODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   NT.ACCOUNT_CURRENCY,   CNCA.CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,   CNCA.CUSTOMER_POSTING_RESTRICTION_CODE,   CNCA.ACCOUNT_NUMBER ,   CNCA.ACCOUNT_NAME ,   CNCA.POSTING_RESTRICTION_CODE ,   CMB.BANK_NAME,   NT.NPSST_ID::text as TNPSST_ID,   cncpr.restriction_id,   cncpr.restriction_desc  from   NPSS_TRANSACTIONS NT  left join <tran_db>.CORE_NC_CBS_ACCOUNTS CNCA on   NT.DBTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID  inner join <tran_db>.CORE_MEMBER_BANKS CMB on   NT.DR_SORT_CODE = CMB.BIC_CODE   and cmb.need_sync = $SQ$Y$SQ$  left join CORE_NC_POST_RESTRICTIONS cncpr on   cncpr.restriction_id = CNCA.POSTING_RESTRICTION_CODE ) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1672490213838$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~E_1675144601561~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1675144852048~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1675144852048$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE ,  CDTR_IBAN ,  CDTR_ACCT_NAME,  PROCESS_REF_NO,  CLRSYSREF ,  PAYMENT_ENDTOEND_ID ,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR ,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE from  (  select   NT.DISPUTE_REF_NO,   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN,   NT.CDTR_ACCT_NAME,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.DBTR_IBAN,   NT.DBTR_ACCT_NAME,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   CMB.BANK_NAME,   NTPL.PROCESS_REF_NO,   NTPL.CHARGE_AMOUNT,   NT.UETR,   NTPL.STATUS,   NTPL.PROCESS_STATUS,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   NT.DEPARTMENT_CODE,   NT.NPSST_ID::text as TNPSST_ID  from   NPSS_TRANSACTIONS NT  inner join <tran_db>.CORE_MEMBER_BANKS CMB on   NT.DR_SORT_CODE = CMB.BIC_CODE   and cmb.NEED_SYNC = $SQ$Y$SQ$  left join NPSS_TRN_PROCESS_LOG NTPL on   NT.UETR = NTPL.UETR ) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1675144601561$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1672491616867~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491616867$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672491462446~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491462446$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1672491568508~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491568508$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   NPSS_TRN_PROCESS_LOG A  left join <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  inner join NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~E_1672490155998~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1675144805481~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1675144805481$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE ,  CDTR_IBAN ,  CDTR_ACCT_NAME,  CURRENCY,  PROCESS_REF_NO,  CLRSYSREF ,  PAYMENT_ENDTOEND_ID ,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR ,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE,  gm_margin,  EXCHANGE_RATE,  tran_charge from  (  select   NT.DISPUTE_REF_NO,   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN,   NT.CDTR_ACCT_NAME,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.DBTR_IBAN,   NT.DBTR_ACCT_NAME,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   CNCA.CURRENCY,   CMB.BANK_NAME,   NTPL.PROCESS_REF_NO,   NTPL.CHARGE_AMOUNT,   NT.UETR,   NTPL.STATUS,   NTPL.PROCESS_STATUS,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   NT.DEPARTMENT_CODE,   NT.NPSST_ID::text as TNPSST_ID,   PL.exchange_rate ,   PL.gm_margin,   nt.tran_charge  from   NPSS_TRANSACTIONS NT  left join CORE_NC_CBS_ACCOUNTS CNCA on   NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID  inner join <tran_db>.CORE_MEMBER_BANKS CMB on   NT.DR_SORT_CODE = CMB.BIC_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$  left join NPSS_TRN_PROCESS_LOG NTPL on   NT.UETR = NTPL.UETR  left join NPSS_TRN_PROCESS_LOG PL on   NT.UETR = PL.UETR   and PL.status = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and PL.process_name = $SQ$Get Deal$SQ$ ) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1672490155998$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672491181877~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491181877$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  TRAN_INFO,ACCOUNT_CURRENCY from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.CR_ACCT_IDENTIFICATION,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   A.TRAN_INFO,   A.ACCOUNT_CURRENCY  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672490487921_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672491499750~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672490487921_0$DQ$,$DQ$DS_1672491499750$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1672827991199_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1672828413149~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672827991199_0$DQ$,$DQ$DS_1672828413149$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672904704815~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672827991199_0$DQ$,$DQ$DS_1672904704815$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  count(processtype) as process_type_count,  processtype,  process_type,  datemi,created_date from  (  select   t.created_date,   to_char(t.created_date, $SQ$YYYY-MM-DD$SQ$) as datemi,   t.process_type ,   t.department_code,   case    when process_type = upper($SQ$OP$SQ$) then initcap($SQ$Total Outward Payments$SQ$)    when process_type = upper($SQ$IP$SQ$) then initcap($SQ$Total Inward Payments$SQ$)    when process_type is null then upper($SQ$unknown$SQ$)   end as processtype,   t.tenant_id  from   npss_transactions t) v $WHERE group by  processtype,  process_type,  datemi,created_date$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_23$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1672830939547~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672827991199_0$DQ$,$DQ$DS_1672830939547$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  CREATIONTIME,  COMPLETIONTIME,  ROUND(d_seconds) as d_seconds,  CHANNEL_ID,  PROCESS_TYPE,  TENANT_ID,  UETR,  npsst_id,  VALUE_DATE,  CDTR_IBAN,  INTRBK_STTLM_AMNT,  INTRBK_STTLM_CUR,  PAYMENT_ENDTOEND_ID,  TRAN_REF_ID,  DEPARTMENT_CODE,  PROCESSING_SYSTEM,  PAYMENT_TYPE,  PROCESS_STATUS,  STATUS,  CLRSYSREF,  NPSSTPL_ID,  DT_CODE,  DTT_CODE,  request_data_json,  response_data_json,  process_group from  (  select   TO_CHAR(PL.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as COMPLETIONTIME,   TO_CHAR(PL1.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATIONTIME,   extract(epoch  from   (pl.created_date - pl1.created_date)) as d_seconds,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   T.PROCESS_TYPE,   T.TENANT_ID,   T.UETR,   T.npsst_id,   T.VALUE_DATE,   T.CDTR_IBAN,   T.INTRBK_STTLM_AMNT,   T.INTRBK_STTLM_CUR,   T.PAYMENT_ENDTOEND_ID,   T.TRAN_REF_ID,   T.DEPARTMENT_CODE,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.CLRSYSREF,   case    when T.EXHF_ID is null then $SQ$RCT$SQ$    else $SQ$BCT$SQ$   end as PAYMENT_TYPE,   T.PROCESS_STATUS,   T.STATUS,   PL.DT_CODE,   PL.DTT_CODE,   PL.NPSSTPL_ID,   PL.request_data_json,   PL.response_data_json,   T.created_date,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else T.PROCESS_GROUP   end as PROCESS_GROUP  from   NPSS_TRANSACTIONS T  inner join (   select    PLR.NPSSTPL_ID,    PLR.UETR,    PLR.STATUS,    PLR.PROCESS_STATUS,    PLR.CREATED_DATE,    PLR.DT_CODE,    PLR.DTT_CODE,    PLR.request_data_json,    PLR.response_data_json,    PLR.ROW_NUM   from    (    select     A.NPSSTPL_ID,     A.DT_CODE,     A.DTT_CODE,     A.UETR,     A.STATUS,     A.PROCESS_STATUS,     A.CREATED_DATE,     A.request_data_json,     A.response_data_json,     row_number() over(partition by A.UETR    order by     A.NPSSTPL_ID desc) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A) PLR   where    PLR.ROW_NUM = 1) PL on   PL.UETR = T.UETR  inner join (   select    PLR1.NPSSTPL_ID,    PLR1.UETR,    PLR1.STATUS,    PLR1.PROCESS_STATUS,    PLR1.CREATED_DATE,    PLR1.DT_CODE,    PLR1.DTT_CODE,    PLR1.request_data_json,    PLR1.response_data_json,    PLR1.ROW_NUM   from    (    select     A1.NPSSTPL_ID,     A1.DT_CODE,     A1.DTT_CODE,     A1.UETR,     A1.STATUS,     A1.PROCESS_STATUS,     A1.CREATED_DATE,     A1.request_data_json,     A1.response_data_json,     row_number() over(partition by A1.UETR    order by     A1.NPSSTPL_ID) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A1) PLR1   where    PLR1.ROW_NUM = 1) PL1 on   PL1.UETR = T.UETR) V $WHERE order by  NPSST_ID desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_22$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1672895298011~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672827991199_0$DQ$,$DQ$DS_1672895298011$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   NPSS_TRN_PROCESS_LOG A  left join <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  inner join NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672828181899~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672827991199_0$DQ$,$DQ$DS_1672828181899$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESS_GROUP) as PROCESS_GROUP_COUNT,  PROCESS_GROUP from  (  select   T.created_date,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   T.process_type ,   case    when t.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else t.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.tenant_id,   case    when T.EXHF_ID is null then $SQ$RCT$SQ$    else $SQ$BCT$SQ$   end as PAYMENT_TYPE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   T.DEPARTMENT_CODE  from   npss_transactions T) V $WHERE group by  PROCESS_GROUP$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672828121470~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672827991199_0$DQ$,$DQ$DS_1672828121470$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(channel_id) as CHANNEL_COUNT,  channel_id from  (  select   T.created_date,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   T.process_type ,   T.tenant_id,   T.DEPARTMENT_CODE  from   npss_transactions T) V $WHERE group by  channel_id$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672838507154~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672827991199_0$DQ$,$DQ$DS_1672838507154$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESS_STATUS) as PROCESS_STATUS_COUNT,PROCESS_TYPE,  PROCESS_STATUS,CREATED_DATE from  (  select   T.CREATED_DATE,   T.PROCESS_TYPE ,   T.TENANT_ID,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS  from   NPSS_TRANSACTIONS T) V $WHERE group by  PROCESS_STATUS,PROCESS_TYPE,CREATED_DATE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_21$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672828292746~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672827991199_0$DQ$,$DQ$DS_1672828292746$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION, fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1672827991199_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1672828302961~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1672827991199_0$DQ$,$DQ$DS_1672828302961$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION, fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1673434393740_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435163647~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435163647$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  count(processtype) as process_type_count,  processtype,  process_type,  datemi,created_date from  (  select   t.created_date,   to_char(t.created_date, $SQ$YYYY-MM-DD$SQ$) as datemi,   t.process_type ,   t.department_code,   case    when process_type = upper($SQ$OP$SQ$) then initcap($SQ$Total Outward Payments$SQ$)    when process_type = upper($SQ$IP$SQ$) then initcap($SQ$Total Inward Payments$SQ$)    when process_type is null then upper($SQ$unknown$SQ$)   end as processtype,   t.tenant_id  from   npss_transactions t) v $WHERE group by  processtype,  process_type,  datemi,created_date$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_23$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435529122~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435529122$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION, fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1673435004971~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435004971$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435508771~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435508771$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION, fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435071377~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435071377$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESS_GROUP) as PROCESS_GROUP_COUNT,  PROCESS_GROUP from  (  select   T.created_date,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   T.process_type ,   case    when t.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else t.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.tenant_id,   case    when T.EXHF_ID is null then $SQ$RCT$SQ$    else $SQ$BCT$SQ$   end as PAYMENT_TYPE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   T.DEPARTMENT_CODE  from   npss_transactions T) V $WHERE group by  PROCESS_GROUP$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1673435377054~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435377054$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  CREATIONTIME,  COMPLETIONTIME,  ROUND(d_seconds) as d_seconds,  CHANNEL_ID,  PROCESS_TYPE,  TENANT_ID,  UETR,  npsst_id,  VALUE_DATE,  CDTR_IBAN,  INTRBK_STTLM_AMNT,  INTRBK_STTLM_CUR,  PAYMENT_ENDTOEND_ID,  TRAN_REF_ID,  DEPARTMENT_CODE,  PROCESSING_SYSTEM,  PAYMENT_TYPE,  PROCESS_STATUS,  STATUS,  CLRSYSREF,  NPSSTPL_ID,  DT_CODE,  DTT_CODE,  request_data_json,  response_data_json,  process_group from  (  select   TO_CHAR(PL.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as COMPLETIONTIME,   TO_CHAR(PL1.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATIONTIME,   extract(epoch  from   (pl.created_date - pl1.created_date)) as d_seconds,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   T.PROCESS_TYPE,   T.TENANT_ID,   T.UETR,   T.npsst_id,   T.VALUE_DATE,   T.CDTR_IBAN,   T.INTRBK_STTLM_AMNT,   T.INTRBK_STTLM_CUR,   T.PAYMENT_ENDTOEND_ID,   T.TRAN_REF_ID,   T.DEPARTMENT_CODE,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.CLRSYSREF,   case    when T.EXHF_ID is null then $SQ$RCT$SQ$    else $SQ$BCT$SQ$   end as PAYMENT_TYPE,   T.PROCESS_STATUS,   T.STATUS,   PL.DT_CODE,   PL.DTT_CODE,   PL.NPSSTPL_ID,   PL.request_data_json,   PL.response_data_json,   T.created_date,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else T.PROCESS_GROUP   end as PROCESS_GROUP  from   NPSS_TRANSACTIONS T  inner join (   select    PLR.NPSSTPL_ID,    PLR.UETR,    PLR.STATUS,    PLR.PROCESS_STATUS,    PLR.CREATED_DATE,    PLR.DT_CODE,    PLR.DTT_CODE,    PLR.request_data_json,    PLR.response_data_json,    PLR.ROW_NUM   from    (    select     A.NPSSTPL_ID,     A.DT_CODE,     A.DTT_CODE,     A.UETR,     A.STATUS,     A.PROCESS_STATUS,     A.CREATED_DATE,     A.request_data_json,     A.response_data_json,     row_number() over(partition by A.UETR    order by     A.NPSSTPL_ID desc) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A) PLR   where    PLR.ROW_NUM = 1) PL on   PL.UETR = T.UETR  inner join (   select    PLR1.NPSSTPL_ID,    PLR1.UETR,    PLR1.STATUS,    PLR1.PROCESS_STATUS,    PLR1.CREATED_DATE,    PLR1.DT_CODE,    PLR1.DTT_CODE,    PLR1.request_data_json,    PLR1.response_data_json,    PLR1.ROW_NUM   from    (    select     A1.NPSSTPL_ID,     A1.DT_CODE,     A1.DTT_CODE,     A1.UETR,     A1.STATUS,     A1.PROCESS_STATUS,     A1.CREATED_DATE,     A1.request_data_json,     A1.response_data_json,     row_number() over(partition by A1.UETR    order by     A1.NPSSTPL_ID) as ROW_NUM    from     NPSS_TRN_PROCESS_LOG A1) PLR1   where    PLR1.ROW_NUM = 1) PL1 on   PL1.UETR = T.UETR) V $WHERE order by  NPSST_ID desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_22$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1673435239224~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673435239224$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESS_STATUS) as PROCESS_STATUS_COUNT,PROCESS_TYPE,  PROCESS_STATUS,CREATED_DATE from  (  select   T.CREATED_DATE,   T.PROCESS_TYPE ,   T.TENANT_ID,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS  from   NPSS_TRANSACTIONS T) V $WHERE group by  PROCESS_STATUS,PROCESS_TYPE,CREATED_DATE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_21$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1673434393740_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1673434959100~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1673434393740_0$DQ$,$DQ$DS_1673434959100$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   NPSS_TRN_PROCESS_LOG A  left join <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  inner join NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1674563032639_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563747012~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563747012$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_9$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674564026543~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674564026543$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  DISPUTE_REF_NO,  NPSST_ID,  TNPSST_ID,  VALUE_DATE ,  CDTR_IBAN ,  CDTR_ACCT_NAME,  CURRENCY,  PROCESS_REF_NO,  CLRSYSREF ,  PAYMENT_ENDTOEND_ID ,  INTRBK_STTLM_AMNT,  CHARGE_AMOUNT,  INTRBK_STTLM_CUR ,  DBTR_IBAN,  DBTR_ACCT_NAME,  BANK_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  UETR,  STATUS,  PROCESS_STATUS,  DATEMI,  DEPARTMENT_CODE,  gm_margin,  EXCHANGE_RATE,  tran_charge from  (  select   NT.DISPUTE_REF_NO,   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN,   NT.CDTR_ACCT_NAME,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.DBTR_IBAN,   NT.DBTR_ACCT_NAME,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   CNCA.CURRENCY,   CMB.BANK_NAME,   NTPL.PROCESS_REF_NO,   NTPL.CHARGE_AMOUNT,   NT.UETR,   NTPL.STATUS,   NTPL.PROCESS_STATUS,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   NT.DEPARTMENT_CODE,   NT.NPSST_ID::text as TNPSST_ID,   PL.exchange_rate ,   PL.gm_margin,   nt.tran_charge  from   NPSS_TRANSACTIONS NT  left join CORE_NC_CBS_ACCOUNTS CNCA on   NT.CDTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID  inner join <tran_db>.CORE_MEMBER_BANKS CMB on   NT.DR_SORT_CODE = CMB.BIC_CODE   and CMB.NEED_SYNC = $SQ$Y$SQ$  left join NPSS_TRN_PROCESS_LOG NTPL on   NT.UETR = NTPL.UETR  left join NPSS_TRN_PROCESS_LOG PL on   NT.UETR = PL.UETR   and PL.status = $SQ$IP_RCT_DEAL_RECEIVED$SQ$   and PL.process_name = $SQ$Get Deal$SQ$ ) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_19$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1674563799011~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563799011$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   NPSS_TRN_PROCESS_LOG A  left join <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  inner join NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_11$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674564114997~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674564114997$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  TNPSST_ID,  VALUE_DATE ,  DBTRIBAN ,  DBTRACCTNAME,  DRSORTCODE,  CLRSYSREF ,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  PAYMENT_ENDTOEND_ID ,  CDTRIBAN,  CDTRACCTNAME,  CRSORTCODE,  BANK_NAME,  CUSTOMER_POSTING_RESTRICTION_CODE,  CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,  ACCOUNT_NUMBER,  ACCOUNT_NAME,  restriction_desc,  POSTING_RESTRICTION_CODE,  INTRBK_STTLM_CUR,ACCOUNT_CURRENCY from  (  select   NT.NPSST_ID,   NT.VALUE_DATE,   NT.CDTR_IBAN as DBTRIBAN,   NT.CDTR_ACCT_NAME as DBTRACCTNAME,   NT.CR_SORT_CODE as DRSORTCODE,   NT.CLRSYSREF,   NT.INTRBK_STTLM_CUR,   NT.PAYMENT_ENDTOEND_ID,   NT.DBTR_IBAN as CDTRIBAN,   NT.DBTR_ACCT_NAME as CDTRACCTNAME,   NT.DR_SORT_CODE as CRSORTCODE,   NT.CR_ACCT_IDENTIFICATION,   NT.DBTR_ACCT_NO,   NT.ACCOUNT_CURRENCY,   CNCA.CUSTOMER_POSTING_RESTRICTION_DESCRIPTION,   CNCA.CUSTOMER_POSTING_RESTRICTION_CODE,   CNCA.ACCOUNT_NUMBER ,   CNCA.ACCOUNT_NAME ,   CNCA.POSTING_RESTRICTION_CODE ,   CMB.BANK_NAME,   NT.NPSST_ID::text as TNPSST_ID,   cncpr.restriction_id,   cncpr.restriction_desc  from   NPSS_TRANSACTIONS NT  left join <tran_db>.CORE_NC_CBS_ACCOUNTS CNCA on   NT.DBTR_IBAN = CNCA.ALTERNATE_ACCOUNT_ID  inner join <tran_db>.CORE_MEMBER_BANKS CMB on   NT.DR_SORT_CODE = CMB.BIC_CODE   and cmb.need_sync = $SQ$Y$SQ$  left join CORE_NC_POST_RESTRICTIONS cncpr on   cncpr.restriction_id = CNCA.POSTING_RESTRICTION_CODE ) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563260377~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563260377$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  distinct PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS from  (  select   NT.CREATED_DATE,   NT.STATUS,   NT.PROCESS_STATUS,   NT.UETR,   NT.PROCESSING_SYSTEM,   NT.TENANT_ID,   NT.MODIFIED_DATE,   NT.MODIFIED_DATE_UTC,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   NT.CREATED_BY,   NT.CREATED_BY_NAME,   NT.SYSTEM_ID,   QR.ROLE_ID,   QR.VPH_APP_ID as QR_APP_ID,   QR.VPH_APP_CODE,   QR.QUEUE_CODE,   QR.SCREEN_NAME as QR_SCREEN_NAME,   QR.SCREEN_MENU_GROUP as QR_MENU_GROUP,   QR.SCREEN_MODULE as QR_MODULE,   PQ.QUEUE_DESC,   PQ.QUEUE_CODE,   PQ.VPH_APP_ID as Q_APP_ID,   QR.SORT_ORDER as QS_SORT_ORDER,   PQ.SORT_ORDER as Q_SORT_ORDER,   NT.DEPARTMENT_CODE,   NT.PROCESS_GROUP,   NT.VALUE_DATE,   NT.DBTR_ACCT_NO,   NT.CDTR_ACCT_NO,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.CLRSYSREF,   NT.PAYMENT_ENDTOEND_ID,   NT.INTRBK_STTLM_AMNT,   NT.PROCESS_TYPE,   NT.DBTR_IBAN  from   NPSS_TRANSACTIONS NT  left join TRANSACTION_SET TS on   NT.NPSST_ID = TS.TRN_ID   and NT.DTT_CODE = TS.DTT_CODE  inner join <TRAN_DB>.CORE_Q_STATUS_ROLES QR on   NT.STATUS = QR.PROCESS_QUEUE_STATUS   and NT.PROCESS_STATUS = QR.QUEUE_CODE  inner join <TRAN_DB>.CORE_APP_Q_SETUP PQ on   NT.PROCESS_STATUS = PQ.QUEUE_CODE) VW $WHERE order by  PROCESSING_SYSTEM,  PROCESS_STATUS,  STATUS$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_1$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563555106~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563555106$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  PROCESS_GROUP,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,  $PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  fn_pcidss_decrypt(DBTR_ACCT_NO,  $PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  TRAN_REF_ID,  PROCESSING_SYSTEM,  TRAN_INFO,ACCOUNT_CURRENCY from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.CR_ACCT_IDENTIFICATION,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.PROCESS_GROUP,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM,   A.TRAN_INFO,   A.ACCOUNT_CURRENCY  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1674563911672~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563911672$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_10$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1674563032639_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1674563699965~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1674563032639_0$DQ$,$DQ$DS_1674563699965$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_7$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" DELETE FROM QRY_INFO WHERE WFTPA_ID=? AND APP_ID=?\", \"params\" : [\"WFT_NPSS_P_1304_1678779853154_0\", \"215\"] }",
  "qry_type": "D"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678866701508~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866701508$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_26$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678960313277~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678960313277$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  Pending_Detais,  count (Pending_Detais) as p_count,  Process_Type from  (  select   Process_Name,   type,   Pending_Detais,   Process_Type,   tenant_id,   created_date,   npsst_id,   department_code  from   (   select    distinct (npl.process_name),    case     when npl.process_name::text in ($SQ$Place Pacs008$SQ$) then $SQ$pacs.008$SQ$::text     when npl.process_name::text in ($SQ$Place Pacs.007$SQ$) then $SQ$pacs.007$SQ$::text     when npl.process_name::text = $SQ$Receive Pacs004$SQ$::text then $SQ$pacs.004$SQ$::text    end as type,    case     when ((npl.process_name = $SQ$Place Pacs008$SQ$      and nppst.process_status = $SQ$RCTExceptionFailure$SQ$      and nppst.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$)       and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)      or (npl.process_name = $SQ$Receive Pacs004$SQ$       and nppst.process_status = $SQ$RCTExceptionFailure$SQ$       and nppst.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$)        and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)       or (npl.process_name = $SQ$Place Pacs.007$SQ$        and nppst.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$)         and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Maker)$SQ$     when ((npl.process_name = $SQ$Place Pacs008$SQ$      and nppst.process_status = $SQ$RCTExceptionFailure$SQ$      and nppst.status in ($SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)       and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)      or (npl.process_name = $SQ$Receive Pacs004$SQ$       and nppst.process_status = $SQ$RCTExceptionFailure$SQ$       and nppst.status in ($SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)        and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)       or (npl.process_name = $SQ$Place Pacs.007$SQ$        and nppst.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$)         and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$     when ((npl.process_name = $SQ$Place Pacs008$SQ$      and nppst.process_status = $SQ$RCTExceptionFailure$SQ$      and nppst.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)       and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)      or (npl.process_name = $SQ$Receive Pacs004$SQ$       and nppst.process_status = $SQ$RCTExceptionFailure$SQ$       and nppst.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$, $SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)        and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)       or (npl.process_name = $SQ$Place Pacs.007$SQ$        and nppst.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$)         and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$     else $SQ$Others$SQ$    end as Pending_Detais,    nppst.process_type,    nppst.created_date,    nppst.tenant_id,    nppst.npsst_id,    nppst.department_code   from    npss_transactions nppst   join npss_trn_process_log npl on    npl.uetr = nppst.uetr   where    nppst.process_type = $SQ$OP$SQ$    and (npl.process_name in ($SQ$Place Pacs008$SQ$,$SQ$Place Pacs.007$SQ$,$SQ$Receive Pacs004$SQ$)) ) as Res  where   Res.Pending_Detais <> $SQ$Others$SQ$) a $WHERE group by  Pending_Detais,  Process_Type$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_30$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678866785078~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866785078$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  DATEMI,  ACCP_DATE_TIME,  DEPARTMENT_CODE,  CHANNEL_ID,  CHANNEL_PRODUCT,  CHANNEL_REFNO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  EXHF_ID,  MODIFIED_DATE_UTC,  VALUE_DATE,  CREATED_DATE,  MODIFIED_DATE_UTC,  CDTR_ACCT_NO,  CDTR_ACCT_NAME,  fn_pcidss_decrypt(DBTR_ACCT_NO,$PCIDSS_KEY) as DBTR_ACCT_NO,  DBTR_ACCT_NAME,  DR_SORT_CODE,  CR_SORT_CODE,  UETR,  REMITTANCE_INFO,  category_purpose,  issuer_type_code,  HDR_MSG_ID,  PRODUCT_CODE,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  PROCESS_TYPE,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  CDTR_IBAN,  CLRSYSREF,  PAYMENT_ENDTOEND_ID,  PROCESS_STATUS,  STATUS,  DT_CODE,  DTT_CODE,  TENANT_ID,  TS_ID,  LOCKED_BY,  LOCKED_BY_NAME,  VERSION_NO,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  fn_pcidss_decrypt(CR_ACCT_IDENTIFICATION,$PCIDSS_KEY) as CR_ACCT_IDENTIFICATION,  TRAN_REF_ID,  PROCESSING_SYSTEM from  (  select   A.NPSST_ID,   A.VALUE_DATE,   A.MODIFIED_DATE_UTC,   A.CREATED_DATE,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   A.CDTR_ACCT_NO,   A.CDTR_ACCT_NAME,   A.INTRBK_STTLM_AMNT,   A.INTRBK_STTLM_CUR,   A.DBTR_ACCT_NO,   A.DBTR_ACCT_NAME,   A.DR_SORT_CODE,   A.CR_SORT_CODE,   A.DEPARTMENT_CODE,   A.UETR,   a.category_purpose,   A.issuer_type_code,   A.HDR_MSG_ID,   A.PRODUCT_CODE,   A.CHANNEL_ID,   A.CHANNEL_REFNO,   A.CHANNEL_PRODUCT,   A.CHANNEL_SUB_PRODUCT,   A.CHANNEL_TRAN_CODE,   A.PROCESS_TYPE,   A.DBTR_PHONE_NO,   A.DBTR_EMAIL_ID,   A.DBTR_DOCUMENT_ID,   A.DBTR_IBAN,   A.CDTR_PHONE_NO,   A.CDTR_EMAIL_ID,   A.CDTR_DOCUMENT_ID,   A.CDTR_IBAN,   A.CLRSYSREF,   A.PAYMENT_ENDTOEND_ID,   A.TRAN_REF_ID,   A.ACCP_DATE_TIME,   A.EXHF_ID,   A.REMITTANCE_INFO,   A.INWARD_FILE_NAME,   A.PROCESS_STATUS,   A.CBS_REF_NO,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.VERSION_NO,   A.DBTR_PRVT_ID,   A.DBTR_OTHER_ISSUER,   A.CR_ACCT_IDENTIFICATION,   TS.TS_ID,   TS.LOCKED_BY,   TS.LOCKED_BY_NAME,   A.PROCESSING_SYSTEM  from   NPSS_TRANSACTIONS A  left join TRANSACTION_SET TS on   TS.TRN_ID = A.NPSST_ID   and TS.DTT_CODE = A.DTT_CODE  order by   A.NPSST_ID desc) VW $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_27$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665905039255~DS_1678866570423~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866570423$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  REVERSAL_DESCRIPTION,  T24_RETURN_DESCRIPTION,  CBUAE_RETURN_DESCRIPTION,  NPSSTPL_ID,  MSG_ID,  UETR,  NPSSTRRD_REFNO,  PROCESS_NAME,  PROCESSING_SYSTEM,  RESPONSE_CODE,  PROCESS_REF_NO,  RESPONSE_DATA,  CREATED_DATE,  CREATEDDATEMILISEC,  PROCESS_STATUS,  STATUS,  REQUEST_DATA_JSON,  RESPONSE_DATA_JSON,  T24_RETURN_CODE,  CBUAE_RETURN_CODE,  REVERSAL_CODE,  REVERSAL_DESC,  T24_RETURN_DESC,  CBUAE_RETURN_DESC,  TENANT_ID,  DEPARTMENT_CODE,  DT_CODE,  DTT_CODE,  PROCESS_TYPE,  AMOUNT_CREDITED,  AMT_CR_LOC_CUR,  CHARGE_AMOUNT,  BUY_CURRENCY,  SELL_CURRENCY,  DEALT_AMOUNT,  EXCHANGE_RATE,  CONTRA_AMOUNT from  (  select   A.NPSSTPL_ID,   A.MSG_ID,   A.UETR,   NT.PROCESS_TYPE,   A.NPSSTRRD_REFNO,   A.PROCESS_NAME,   A.PROCESSING_SYSTEM,   A.RESPONSE_CODE,   A.PROCESS_REF_NO,   A.RESPONSE_DATA,   TO_CHAR(A.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC,   A.CREATED_DATE,   A.PROCESS_STATUS,   A.STATUS,   A.DT_CODE,   A.DTT_CODE,   A.TENANT_ID,   A.REQUEST_DATA_JSON,   A.RESPONSE_DATA_JSON,   A.T24_RETURN_CODE,   NT.DEPARTMENT_CODE,   NT.NPSST_ID,   A.ADDITIONAL_INFO,   A.AMOUNT_CREDITED,   A.AMT_CR_LOC_CUR,   A.CHARGE_AMOUNT,   A.BUY_CURRENCY,   A.SELL_CURRENCY,   A.DEALT_AMOUNT,   A.EXCHANGE_RATE,   A.CONTRA_AMOUNT,   T24RC.ERROR_DESCRIPTION as T24_RETURN_DESC,   CONCAT(A.T24_RETURN_CODE, $SQ$-$SQ$, T24RC.ERROR_DESCRIPTION) as T24_RETURN_DESCRIPTION,   A.CBUAE_RETURN_CODE,   CBUAERC.RETURN_DESCRIPTION as CBUAE_RETURN_DESC,   CONCAT(A.CBUAE_RETURN_CODE, $SQ$-$SQ$, CBUAERC.RETURN_DESCRIPTION) as CBUAE_RETURN_DESCRIPTION,   A.REVERSAL_CODE,   CCD.CD_DESCRIPTION as REVERSAL_DESC,   CONCAT(A.REVERSAL_CODE, $SQ$-$SQ$, CCD.CD_DESCRIPTION) as REVERSAL_DESCRIPTION  from   NPSS_TRN_PROCESS_LOG A  left join <tran_db>.CORE_NC_CODE_DESCRIPTIONS CCD on   CCD.CD_CODE = A.REVERSAL_CODE   and CCD.CD_CATEGORY = $SQ$REVERSAL_REASON_IDENTIFIER_CODE$SQ$   and CCD.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_ERROR_CODES T24RC on   T24RC.ERROR_CODE = A.T24_RETURN_CODE   and T24RC.PROCESSING_SYSTEM = $SQ$T24$SQ$   and T24RC.NEED_SYNC = $SQ$Y$SQ$  left join <tran_db>.CORE_NC_RETURN_CODES CBUAERC on   CBUAERC.RETURN_CODE = A.CBUAE_RETURN_CODE   and CBUAERC.PROCESSING_SYSTEM = $SQ$CBUAE$SQ$   and CBUAERC.NEED_SYNC = $SQ$Y$SQ$  inner join NPSS_TRANSACTIONS NT on   NT.UETR = A.UETR  order by   A.NPSSTPL_ID) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665905039255$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_15$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679038709562~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679039315939~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679039315939$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  Pending_Detais_OP,  Pending_Detais_IP,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification_mask,  Fn_card_decrypt_and_mask_rpt(DBTR_ACCT_NO) as dr_acct_identification_mask,  type,  CR_ACCT_IDENTIFICATION,  UETR,  VALUE_DATE,  ACCP_DATE_TIME,  CREATED_DATE,  DATEMI,  EXHF_ID,  CDTR_IBAN,  TENANT_ID,  TRAN_REF_ID,  DEPARTMENT_CODE,  PAYMENT_ENDTOEND_ID,  CLRSYSREF,  CDTR_ACCT_NO,  DBTR_ACCT_NO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  STATUS,  PROCESSING_SYSTEM,  PROCESS_STATUS,  DBTR_ACCT_NAME,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  DBTR_CUST_TYPE,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  CDTR_ACCT_NAME,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  DR_SORT_CODE,  CR_SORT_CODE,  CATEGORY_PURPOSE,  CATEGORY_PURPOSE_PRTY,  BASE_CURRENCY,  BASE_AMOUNT,  HDR_TOTAL_RECORDS,  HDR_TOTAL_AMOUNT,  HDR_CLEARING_SYSTEM,  CHARGE_BEARER,  REMITTANCE_INFO,  ACCOUNT_CURRENCY,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  ISSUER_TYPE_CODE,  CBS_REF_NO,  CBS_POSTING_FLAG,  PROCESS_TYPE,  PROCESS_GROUP from  (  select   NT.NPSST_ID,   NT.UETR,   NT.VALUE_DATE,   NT.ACCP_DATE_TIME,   NT.CREATED_DATE,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   case    when ntl.process_name::text in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$) then $SQ$pacs.008$SQ$::text    when ntl.process_name::text in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$::text    when ntl.process_name::text = $SQ$Receive Pacs004$SQ$::text then $SQ$pacs.004$SQ$::text   end as type,   case     when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$, $SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_OP,   case     when (ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$ , $SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_IP,   NT.DEPARTMENT_CODE,   NT.TENANT_ID,   NT.EXHF_ID,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.PAYMENT_ENDTOEND_ID,   NT.CLRSYSREF,   NT.CDTR_ACCT_NO,   NT.DBTR_ACCT_NO,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.STATUS,   NT.PROCESSING_SYSTEM,   NT.PROCESS_STATUS,   NT.DBTR_ACCT_NAME,   NT.DBTR_PHONE_NO,   NT.DBTR_EMAIL_ID,   NT.DBTR_DOCUMENT_ID,   NT.DBTR_IBAN,   NT.DBTR_CUST_TYPE,   NT.DBTR_PRVT_ID,   NT.DBTR_OTHER_ISSUER,   NT.CDTR_ACCT_NAME,   NT.CDTR_PHONE_NO,   NT.CDTR_EMAIL_ID,   NT.CDTR_DOCUMENT_ID,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CATEGORY_PURPOSE,   NT.CATEGORY_PURPOSE_PRTY,   NT.CR_ACCT_IDENTIFICATION,   NT.BASE_CURRENCY,   NT.BASE_AMOUNT,   NT.HDR_TOTAL_RECORDS,   NT.HDR_TOTAL_AMOUNT,   NT.HDR_CLEARING_SYSTEM,   NT.CHARGE_BEARER,   NT.REMITTANCE_INFO,   NT.ACCOUNT_CURRENCY,   NT.CHANNEL_ID,   NT.CHANNEL_REFNO,   NT.CHANNEL_USERID,   NT.CHANNEL_PRODUCT,   NT.CHANNEL_SUB_PRODUCT,   NT.CHANNEL_TRAN_CODE,   NT.ISSUER_TYPE_CODE,   NT.CBS_REF_NO,   NT.CBS_POSTING_FLAG,   NT.PROCESS_TYPE,   NT.PROCESS_GROUP  from   NPSS_TRANSACTIONS NT  inner join npss_trn_process_log ntl on   ntl.uetr = nt.uetr) V $WHERE order by  NPSST_ID desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679038709562$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678787742404~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678787742404$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  COUNT(PROCESS_STATUS) as PROCESS_STATUS_COUNT,PROCESS_TYPE,  PROCESS_STATUS,CREATED_DATE from  (  select   T.CREATED_DATE,   T.PROCESS_TYPE ,   T.TENANT_ID,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS  from   NPSS_TRANSACTIONS T) V $WHERE group by  PROCESS_STATUS,PROCESS_TYPE,CREATED_DATE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_13$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679038751136~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679039201469~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679039201469$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  npsst_id,  uetr,  CREATED_DATE, PROCESS_TYPE,  PROCESS_STATUS,  intrbk_sttlm_cur ,  intrbk_sttlm_amnt ,  cdtr_iban ,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification ,  dbtr_iban,  DATEMI from  (  select   t.npsst_id,   t.uetr,   T.CREATED_DATE,   TO_CHAR(T.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) AS DATEMI,   T.PROCESS_TYPE ,   T.TENANT_ID,   t.intrbk_sttlm_cur ,   t.intrbk_sttlm_amnt ,   t.cdtr_iban ,   t.cr_acct_identification ,   t.dbtr_iban ,   case    when T.channel_id is null then UPPER($SQ$UNKOWN$SQ$)    else t.channel_id   end as channel_id,   case    when T.PROCESSING_SYSTEM is null then upper($SQ$unknown$SQ$)    else T.PROCESSING_SYSTEM   end as PROCESSING_SYSTEM,   T.DEPARTMENT_CODE,   case    when T.PROCESS_GROUP is null then UPPER($SQ$UNKOWN$SQ$)    else t.PROCESS_GROUP   end as PROCESS_GROUP,   case    when T.EXHF_ID is null then UPPER($SQ$RCT$SQ$)    else UPPER($SQ$BCT$SQ$)   end as PAYMENT_TYPE,   case    when T.PROCESS_STATUS is null then UPPER($SQ$UNKNOWN$SQ$)    else T.PROCESS_STATUS   end as PROCESS_STATUS  from   NPSS_TRANSACTIONS T) V $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679038751136$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678796509061~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678796509061$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  Pending_Detais_OP,  Pending_Detais_IP,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification_mask,  Fn_card_decrypt_and_mask_rpt(DBTR_ACCT_NO) as dr_acct_identification_mask,  type,  CR_ACCT_IDENTIFICATION,  UETR,  VALUE_DATE,  ACCP_DATE_TIME,  CREATED_DATE,  DATEMI,  EXHF_ID,  CDTR_IBAN,  TENANT_ID,  TRAN_REF_ID,  DEPARTMENT_CODE,  PAYMENT_ENDTOEND_ID,  CLRSYSREF,  CDTR_ACCT_NO,  DBTR_ACCT_NO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  STATUS,  PROCESSING_SYSTEM,  PROCESS_STATUS,  DBTR_ACCT_NAME,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  DBTR_CUST_TYPE,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  CDTR_ACCT_NAME,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  DR_SORT_CODE,  CR_SORT_CODE,  CATEGORY_PURPOSE,  CATEGORY_PURPOSE_PRTY,  BASE_CURRENCY,  BASE_AMOUNT,  HDR_TOTAL_RECORDS,  HDR_TOTAL_AMOUNT,  HDR_CLEARING_SYSTEM,  CHARGE_BEARER,  REMITTANCE_INFO,  ACCOUNT_CURRENCY,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  ISSUER_TYPE_CODE,  CBS_REF_NO,  CBS_POSTING_FLAG,  PROCESS_TYPE,  PROCESS_GROUP from  (  select   NT.NPSST_ID,   NT.UETR,   NT.VALUE_DATE,   NT.ACCP_DATE_TIME,   NT.CREATED_DATE,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   case    when ntl.process_name::text in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$) then $SQ$pacs.008$SQ$::text    when ntl.process_name::text in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$::text    when ntl.process_name::text = $SQ$Receive Pacs004$SQ$::text then $SQ$pacs.004$SQ$::text   end as type,   case     when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$, $SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_OP,   case     when (ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$ , $SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_IP,   NT.DEPARTMENT_CODE,   NT.TENANT_ID,   NT.EXHF_ID,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.PAYMENT_ENDTOEND_ID,   NT.CLRSYSREF,   NT.CDTR_ACCT_NO,   NT.DBTR_ACCT_NO,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.STATUS,   NT.PROCESSING_SYSTEM,   NT.PROCESS_STATUS,   NT.DBTR_ACCT_NAME,   NT.DBTR_PHONE_NO,   NT.DBTR_EMAIL_ID,   NT.DBTR_DOCUMENT_ID,   NT.DBTR_IBAN,   NT.DBTR_CUST_TYPE,   NT.DBTR_PRVT_ID,   NT.DBTR_OTHER_ISSUER,   NT.CDTR_ACCT_NAME,   NT.CDTR_PHONE_NO,   NT.CDTR_EMAIL_ID,   NT.CDTR_DOCUMENT_ID,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CATEGORY_PURPOSE,   NT.CATEGORY_PURPOSE_PRTY,   NT.CR_ACCT_IDENTIFICATION,   NT.BASE_CURRENCY,   NT.BASE_AMOUNT,   NT.HDR_TOTAL_RECORDS,   NT.HDR_TOTAL_AMOUNT,   NT.HDR_CLEARING_SYSTEM,   NT.CHARGE_BEARER,   NT.REMITTANCE_INFO,   NT.ACCOUNT_CURRENCY,   NT.CHANNEL_ID,   NT.CHANNEL_REFNO,   NT.CHANNEL_USERID,   NT.CHANNEL_PRODUCT,   NT.CHANNEL_SUB_PRODUCT,   NT.CHANNEL_TRAN_CODE,   NT.ISSUER_TYPE_CODE,   NT.CBS_REF_NO,   NT.CBS_POSTING_FLAG,   NT.PROCESS_TYPE,   NT.PROCESS_GROUP  from   NPSS_TRANSACTIONS NT  inner join npss_trn_process_log ntl on   ntl.uetr = nt.uetr) V $WHERE order by  NPSST_ID desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679039755145~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679040102592~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679040102592$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  Pending_Detais,  count (Pending_Detais) as p_count,  Process_Type from  (  select   Process_Name,   type,   Pending_Detais,   Process_Type,   tenant_id,   created_date,   npsst_id ,   department_code  from   (   select    distinct (npl.process_name),    case     when npl.process_name::text in ($SQ$Receive Pacs008$SQ$) then $SQ$pacs.008$SQ$::text     when npl.process_name::text in ($SQ$Receive Pacs.007$SQ$) then $SQ$pacs.007$SQ$::text     when npl.process_name::text = $SQ$Place Pacs004$SQ$::text then $SQ$pacs.004$SQ$::text    end as type,    case     when (npl.process_name = $SQ$Receive Pacs008$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$     when (npl.process_name = $SQ$Place Pacs004$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$     when (npl.process_name = $SQ$Receive Pacs.007$SQ$     and nppst.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$     when ((npl.process_name = $SQ$Receive Pacs008$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)     or (npl.process_name = $SQ$Place Pacs004$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)     or (npl.process_name = $SQ$Receive Pacs.007$SQ$     and nppst.status in ($SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$     when ((npl.process_name = $SQ$Receive Pacs008$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$ , $SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)     or (npl.process_name = $SQ$Place Pacs004$SQ$     and nppst.process_status = $SQ$RCTExceptionFailure$SQ$     and nppst.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)     or (npl.process_name = $SQ$Receive Pacs.007$SQ$     and nppst.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)     and to_date(to_char(nppst.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$     else $SQ$Others$SQ$    end as Pending_Detais,    nppst.process_type,    nppst.created_date,    nppst.tenant_id,    nppst.npsst_id ,    nppst.department_code   from    npss_transactions nppst   join npss_trn_process_log npl on    npl.uetr = nppst.uetr   where    nppst.process_type = $SQ$IP$SQ$    and (npl.process_name in ($SQ$Receive Pacs008$SQ$, $SQ$Receive Pacs.007$SQ$, $SQ$Place Pacs004$SQ$)) ) as Res  where   Res.Pending_Detais <> $SQ$Others$SQ$) a $WHERE group by  Pending_Detais,  Process_Type$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679039755145$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_36$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678780847259~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678780847259$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT Type,        Total,        IBMB,        RMB,        RIB,        CMB,        CIB,        CMS,        Manual,        Pending_Screening,        Pending_Maker,        Pending_Checker,        Send_to_CB,        CBACK,        CBNACK,        Pending_T_1,     Created_Date   FROM vw_dashboard_outward_data $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_2$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1678780879597~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678780879597$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ SELECT type,        total,        pending_maker,        pending_checker,        pending_screening,        successfullyposted,        pending_returns_maker,        pending_returns_checker,        returned,        pending_t_1,        created_date   FROM vw_dashboard_inward_data $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_12$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~E_1679049274477~DT_1304_1665901130705~DTT_1304_1665901217208~DS_1679049328786~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1679049328786$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSST_ID,  Pending_Detais_OP,  Pending_Detais_IP,  Fn_card_decrypt_and_mask_rpt(cr_acct_identification) as cr_acct_identification_mask,  Fn_card_decrypt_and_mask_rpt(DBTR_ACCT_NO) as dr_acct_identification_mask,  type,  CR_ACCT_IDENTIFICATION,  UETR,  VALUE_DATE,  ACCP_DATE_TIME,  CREATED_DATE,  DATEMI,  EXHF_ID,  CDTR_IBAN,  TENANT_ID,  TRAN_REF_ID,  DEPARTMENT_CODE,  PAYMENT_ENDTOEND_ID,  CLRSYSREF,  CDTR_ACCT_NO,  DBTR_ACCT_NO,  INTRBK_STTLM_CUR,  INTRBK_STTLM_AMNT,  STATUS,  PROCESSING_SYSTEM,  PROCESS_STATUS,  DBTR_ACCT_NAME,  DBTR_PHONE_NO,  DBTR_EMAIL_ID,  DBTR_DOCUMENT_ID,  DBTR_IBAN,  DBTR_CUST_TYPE,  DBTR_PRVT_ID,  DBTR_OTHER_ISSUER,  CDTR_ACCT_NAME,  CDTR_PHONE_NO,  CDTR_EMAIL_ID,  CDTR_DOCUMENT_ID,  DR_SORT_CODE,  CR_SORT_CODE,  CATEGORY_PURPOSE,  CATEGORY_PURPOSE_PRTY,  BASE_CURRENCY,  BASE_AMOUNT,  HDR_TOTAL_RECORDS,  HDR_TOTAL_AMOUNT,  HDR_CLEARING_SYSTEM,  CHARGE_BEARER,  REMITTANCE_INFO,  ACCOUNT_CURRENCY,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  ISSUER_TYPE_CODE,  CBS_REF_NO,  CBS_POSTING_FLAG,  PROCESS_TYPE,  PROCESS_GROUP from  (  select   NT.NPSST_ID,   NT.UETR,   NT.VALUE_DATE,   NT.ACCP_DATE_TIME,   NT.CREATED_DATE,   TO_CHAR(NT.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as DATEMI,   case    when ntl.process_name::text in ($SQ$Place Pacs008$SQ$, $SQ$PACS.008$SQ$) then $SQ$pacs.008$SQ$::text    when ntl.process_name::text in ($SQ$Place Pacs.007$SQ$, $SQ$PACS.007$SQ$) then $SQ$pacs.007$SQ$::text    when ntl.process_name::text = $SQ$Receive Pacs004$SQ$::text then $SQ$pacs.004$SQ$::text   end as type,   case     when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Place Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OP_AC_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_RET_POSTING_FAILURE$SQ$, $SQ$OP_P2P_REV_POSTING_FAILURE$SQ$ , $SQ$OP_P2B_FUND_UNFR_FAILURE$SQ$, $SQ$OP_P2B_REV_POSTING_FAILURE$SQ$, $SQ$OP_AC_REV_POSTING_RETRY$SQ$, $SQ$OP_AC_RET_POSTING_RETRY$SQ$, $SQ$OP_P2P_REV_POSTING_RETRY$SQ$, $SQ$OP_P2B_FUND_UNFR_RETRY$SQ$, $SQ$OP_P2B_REV_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$OR_P2P_POSTING_FAILURE$SQ$, $SQ$OR_P2B_POSTING_FAILURE$SQ$, $SQ$OR_P2P_POSTING_RETRY$SQ$, $SQ$OR_P2B_POSTING_RETRY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs.007$SQ$    and nt.status in ($SQ$OP_REVERSAL_REQ_REPAIR$SQ$, $SQ$OP_REVERSAL_REQ_INITIATED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_OP,   case     when (ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date) then $SQ$Pending (Maker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) = current_date)) then $SQ$Pending (Checker)$SQ$    when ((ntl.process_name = $SQ$Receive Pacs008$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RR_POSTING_FAILURE$SQ$, $SQ$IP_RCT_PC_T24_POSTING_FAILURE$SQ$, $SQ$IP_RCT_CC_T24_POSTING_FAILURE$SQ$ , $SQ$IP_RCT_RR_POSTING_RETRY$SQ$, $SQ$IP_RCT_PC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_CC_T24_POSTING_RETRY$SQ$, $SQ$IP_RCT_POSTING_SUSPICIOUS$SQ$, $SQ$IP_RCT_PC_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Place Pacs004$SQ$    and nt.process_status = $SQ$RCTExceptionFailure$SQ$    and nt.status in ($SQ$IP_RCT_RETURN_POSTING_FAILURE$SQ$, $SQ$IP_RCT_RETURN_POSTING_RETRY$SQ$, $SQ$IP_RCT_RR_POSTING_SUSPICIOUS$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)    or (ntl.process_name = $SQ$Receive Pacs.007$SQ$    and nt.status in ($SQ$IP_RCT_REVERSAL_REQ_RECEIVED$SQ$, $SQ$IP_RCT_REVERSAL_VLD_FAILED$SQ$, $SQ$IP_RCT_REV_REQ_REJECTED$SQ$, $SQ$IP_RCT_RR_RETURN_READY$SQ$)    and to_date(to_char(nt.created_date::date::timestamp with time zone, $SQ$yyyy-mm-dd$SQ$::text), $SQ$yyyy-mm-dd$SQ$::text) < current_date)) then $SQ$Pending (T-1)$SQ$    else $SQ$Others$SQ$   end as Pending_Detais_IP,   NT.DEPARTMENT_CODE,   NT.TENANT_ID,   NT.EXHF_ID,   NT.CDTR_IBAN,   NT.TRAN_REF_ID,   NT.PAYMENT_ENDTOEND_ID,   NT.CLRSYSREF,   NT.CDTR_ACCT_NO,   NT.DBTR_ACCT_NO,   NT.INTRBK_STTLM_CUR,   NT.INTRBK_STTLM_AMNT,   NT.STATUS,   NT.PROCESSING_SYSTEM,   NT.PROCESS_STATUS,   NT.DBTR_ACCT_NAME,   NT.DBTR_PHONE_NO,   NT.DBTR_EMAIL_ID,   NT.DBTR_DOCUMENT_ID,   NT.DBTR_IBAN,   NT.DBTR_CUST_TYPE,   NT.DBTR_PRVT_ID,   NT.DBTR_OTHER_ISSUER,   NT.CDTR_ACCT_NAME,   NT.CDTR_PHONE_NO,   NT.CDTR_EMAIL_ID,   NT.CDTR_DOCUMENT_ID,   NT.DR_SORT_CODE,   NT.CR_SORT_CODE,   NT.CATEGORY_PURPOSE,   NT.CATEGORY_PURPOSE_PRTY,   NT.CR_ACCT_IDENTIFICATION,   NT.BASE_CURRENCY,   NT.BASE_AMOUNT,   NT.HDR_TOTAL_RECORDS,   NT.HDR_TOTAL_AMOUNT,   NT.HDR_CLEARING_SYSTEM,   NT.CHARGE_BEARER,   NT.REMITTANCE_INFO,   NT.ACCOUNT_CURRENCY,   NT.CHANNEL_ID,   NT.CHANNEL_REFNO,   NT.CHANNEL_USERID,   NT.CHANNEL_PRODUCT,   NT.CHANNEL_SUB_PRODUCT,   NT.CHANNEL_TRAN_CODE,   NT.ISSUER_TYPE_CODE,   NT.CBS_REF_NO,   NT.CBS_POSTING_FLAG,   NT.PROCESS_TYPE,   NT.PROCESS_GROUP  from   NPSS_TRANSACTIONS NT  inner join npss_trn_process_log ntl on   ntl.uetr = nt.uetr) V $WHERE order by  NPSST_ID desc$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$E_1679049274477$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665901217208$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_14$DQ$] }",
  "qry_type": "I"
},{
  "key": "215~WFT_NPSS_P_1304_1678779853154_0~DEFAULT~DT_1304_1665901130705~DTT_1304_1665903906193~DS_1678866622478~DEFAULT~1",
  "target": "QRY_INFO",
  "content": "{ \"query\" : \" INSERT INTO QRY_INFO (WFTPA_ID,DS_CODE,MAIN_QRY_MODE,MAIN_QRY_TYPE,MAIN_QRY_TEXT,APP_ID,SORT_ORDER,EVENT_CODE,DT_CODE,DTT_CODE,LISTING_MODE, LOCKING_MODE, LOCKING_PARAMETER,PROCESS,SETUP_JSON,SYSTEM_TYPE,UICGC_CODE) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)\", \"params\" : [$DQ$WFT_NPSS_P_1304_1678779853154_0$DQ$,$DQ$DS_1678866622478$DQ$,$DQ$M$DQ$,$DQ$S$DQ$,$DQ$ select  NPSSTRRD_ID,  MSG_ID,  UETR,  PARENT_NPSSTRRD_REFNO,  NPSSTRRD_REFNO,  PROCESS_CODE,  PROCESS_DETAIL,  EXHF_ID,  PROCESS_NAME,  MESSAGE_DESC,  CHANNEL_ID,  CHANNEL_REFNO,  CHANNEL_USERID,  CHANNEL_PRODUCT,  CHANNEL_SUB_PRODUCT,  CHANNEL_TRAN_CODE,  STATUS,  PROCESS_STATUS,PROCESS_TYPE,  MESSAGE_DATA,  CREATEDDATEMILISEC,  DT_CODE,  DTT_CODE from  (  select   NPSSTRRD.NPSSTRRD_ID,   NPSSTRRD.MSG_ID,   NPSSTRRD.UETR,   NPSSTRRD.PARENT_NPSSTRRD_REFNO,   NPSSTRRD.NPSSTRRD_REFNO,   NPSSTRRD.MESSAGE_DATA,   NPSSTRRD.PROCESS_CODE,   NPSSTRRD.PROCESS_DETAIL,   NPSSTRRD.EXHF_ID,   NPSSTRRD.PROCESS_NAME,   NPSSTRRD.MESSAGE_DESC,   NPSSTRRD.CHANNEL_ID,   NPSSTRRD.CHANNEL_REFNO,   NPSSTRRD.CHANNEL_USERID,   NPSSTRRD.CHANNEL_PRODUCT,   NPSSTRRD.CHANNEL_SUB_PRODUCT,   NPSSTRRD.CHANNEL_TRAN_CODE,   NPSSTRRD.CREATED_BY,   NPSSTRRD.CREATED_BY_NAME,   NPSSTRRD.CREATED_DATE,   NPSSTRRD.DT_CODE,   NPSSTRRD.DT_DESCRIPTION,   NPSSTRRD.DTT_CODE,   NPSSTRRD.DTT_DESCRIPTION,   NPSSTRRD.MODIFIED_BY,   NPSSTRRD.MODIFIED_BY_NAME,   NPSSTRRD.MODIFIED_DATE,   NPSSTRRD.STATUS,   NPSSTRRD.PROCESS_STATUS,NT.PROCESS_TYPE,   NPSSTRRD.SYSTEM_ID,   NPSSTRRD.SYSTEM_NAME,   NPSSTRRD.TENANT_ID,   NPSSTRRD.APP_ID,   NPSSTRRD.VERSION_NO,   TO_CHAR(NPSSTRRD.CREATED_DATE, $SQ$YYYY-MM-DD HH:MI:SS:MS AM$SQ$) as CREATEDDATEMILISEC  from   NPSS_TRN_REQ_RESP_DTLS NPSSTRRD  inner join NPSS_TRANSACTIONS NT on   NPSSTRRD.UETR = NT.UETR) RR $WHERE$DQ$,$DQ$215$DQ$,$DQ$1$DQ$,$DQ$DEFAULT$DQ$,$DQ$DT_1304_1665901130705$DQ$,$DQ$DTT_1304_1665903906193$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$$DQ$,$DQ$WF_SELECT$DQ$,$DQ${}$DQ$,$DQ$DEFAULT$DQ$,$DQ$UICGC_20$DQ$] }",
  "qry_type": "I"
}]